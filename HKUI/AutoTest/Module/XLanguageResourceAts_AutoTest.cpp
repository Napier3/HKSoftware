
#include "stdafx.h"
#include "XLanguageResourceAts_AutoTest.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

/////////////////////////////////////////////////////////////////////////////
// CXLanguageResourceAts_AutoTest
CString  g_strXLangRsAutoTestFile = _T("AutoTest");

CXLanguageResourceAts_AutoTest::CXLanguageResourceAts_AutoTest()
{
	m_pXLangRsExe = &m_oXLangRsAutoTest;    //20161015
	m_oXLangRsAutoTest.m_strID = g_strXLangRsAutoTestFile;  //20161015
	m_oXLangRsAutoTest.m_strName = g_strXLangRsAutoTestFile;   //20161015
}

CXLanguageResourceAts_AutoTest::~CXLanguageResourceAts_AutoTest()
{
	m_oXLangRsAutoTest.RemoveAll();
}

CXLangItem* CXLanguageResourceAts_AutoTest::rs_AddString(const CString &strID, CString *pstrString)
{
	CXLangItem *p = CXLanguage::AddString(strID, pstrString);

	m_oXLangRsAutoTest.AddTail(p);

	return p;
}


void CXLanguageResourceAts_AutoTest::InitLangRsByFile()
{
	CXLanguageResourceAtsBase::InitLangRsByFile();

	InitLangRsByFileEx(&m_oXLangRsAutoTest, g_strXLangRsAutoTestFile);
}

void CXLanguageResourceAts_AutoTest::RegisterLanguageResource()
{
	CXLanguageResourceAtsBase::RegisterLanguageResource();

	rs_AddString(g_sLangID_AutoTestVTip, &g_sLangTxt_AutoTestVTip);
// 	rs_AddString(g_sLangID_FileOpen, &g_sLangTxt_FileOpen);
	rs_AddString(g_sLangID_FileOpenTip, &g_sLangTxt_FileOpenTip);
	rs_AddString(g_sLangID_RibbonRecentDocs, &g_sLangTxt_RibbonRecentDocs);
	rs_AddString(g_sLangID_Config, &g_sLangTxt_Config);
	rs_AddString(g_sLangID_AutoTestOper, &g_sLangTxt_AutoTestOper);
// 	rs_AddString(g_sLangID_UpLoad, &g_sLangTxt_UpLoad);
// 	rs_AddString(g_sLangID_DownLoad, &g_sLangTxt_DownLoad);
	rs_AddString(g_sLangID_NewTest, &g_sLangTxt_NewTest);
	rs_AddString(g_sLangID_MultiDevTest, &g_sLangTxt_MultiDevTest);
	rs_AddString(g_sLangID_SinDevMulPro, &g_sLangTxt_SinDevMulPro);
	rs_AddString(g_sLangID_MdvMgrpTest, &g_sLangTxt_MdvMgrpTest);
	rs_AddString(g_sLangID_SubTempTest, &g_sLangTxt_SubTempTest);
	rs_AddString(g_sLangID_SingleDevTest, &g_sLangTxt_SingleDevTest);
	rs_AddString(g_sLangID_UsePowerTestTemplate, &g_sLangTxt_UsePowerTestTemplate);
	rs_AddString(g_sLangID_Test, &g_sLangTxt_Test);
// 	rs_AddString(g_sLangID_StartTest, &g_sLangTxt_StartTest);
	rs_AddString(g_sLangID_Stop, &g_sLangTxt_Stop);
	rs_AddString(g_sLangID_ShowScale, &g_sLangTxt_ShowScale);
	rs_AddString(g_sLangID_AdReport, &g_sLangTxt_AdReport);
	rs_AddString(g_sLangID_PrintReport, &g_sLangTxt_PrintReport);
    rs_AddString(g_sLangID_Settings, &g_sLangTxt_Settings);
	rs_AddString(g_sLangID_ReConfig, &g_sLangTxt_ReConfig);
// 	rs_AddString(g_sLangID_View, &g_sLangTxt_View);
// 	rs_AddString(g_sLangID_StatusBarTip, &g_sLangTxt_StatusBarTip);
	rs_AddString(g_sLangID_OutpWind, &g_sLangTxt_OutpWind);
	rs_AddString(g_sLangID_FileManBar, &g_sLangTxt_FileManBar);
	rs_AddString(g_sLangID_TestInfBar, &g_sLangTxt_TestInfBar);
	rs_AddString(g_sLangID_SdvMgrpReTest, &g_sLangTxt_SdvMgrpReTest);
	rs_AddString(g_sLangID_TestTaskBar, &g_sLangTxt_TestTaskBar);
	rs_AddString(g_sLangID_CharCurTest, &g_sLangTxt_CharCurTest);
	rs_AddString(g_sLangID_ShowTestInf, &g_sLangTxt_ShowTestInf);
	rs_AddString(g_sLangID_ShowTestSpyWnd, &g_sLangTxt_ShowTestSpyWnd);
	rs_AddString(g_sLangID_WriteLogFile, &g_sLangTxt_WriteLogFile);
	rs_AddString(g_sLangID_ViewWordRpt, &g_sLangTxt_ViewWordRpt);
// 	rs_AddString(g_sLangID_AboutTip, &g_sLangTxt_AboutTip);
	rs_AddString(g_sLangID_ToAndCom, &g_sLangTxt_ToAndCom);
    rs_AddString(g_sLangID_SysTools, &g_sLangTxt_SysTools);
	rs_AddString(g_sLangID_SysCom, &g_sLangTxt_SysCom);
	rs_AddString(g_sLangID_TestFileMan, &g_sLangTxt_TestFileMan);
	rs_AddString(g_sLangID_TestItemField, &g_sLangTxt_TestItemField);
    rs_AddString(g_sLangID_ReportAdjSh, &g_sLangTxt_ReportAdjSh);
    rs_AddString(g_sLangID_TestChoPro, &g_sLangTxt_TestChoPro);
	rs_AddString(g_sLangID_TestInf, &g_sLangTxt_TestInf);
	rs_AddString(g_sLangID_TaskName, &g_sLangTxt_TaskName);
	rs_AddString(g_sLangID_TestType, &g_sLangTxt_TestType);
	rs_AddString(g_sLangID_ProSet, &g_sLangTxt_ProSet);
	rs_AddString(g_sLangID_PoFile, &g_sLangTxt_PoFile);
	rs_AddString(g_sLangID_ChoTest, &g_sLangTxt_ChoTest);
	rs_AddString(g_sLangID_SelPoFile, &g_sLangTxt_SelPoFile);
	rs_AddString(g_sLangID_TitleTask, &g_sLangTxt_TitleTask);
	rs_AddString(g_sLangID_NewTestWork, &g_sLangTxt_NewTestWork);
	rs_AddString(g_sLangID_NewBuilt, &g_sLangTxt_NewBuilt);
	rs_AddString(g_sLangID_TestFileName, &g_sLangTxt_TestFileName);
	rs_AddString(g_sLangID_TesTyp, &g_sLangTxt_TesTyp);
	rs_AddString(g_sLangID_ProTypeCho, &g_sLangTxt_ProTypeCho);
	rs_AddString(g_sLangID_TestTempFile, &g_sLangTxt_TestTempFile);
	rs_AddString(g_sLangID_ProTempFile, &g_sLangTxt_ProTempFile);
	rs_AddString(g_sLangID_ProHighSet, &g_sLangTxt_ProHighSet);
	rs_AddString(g_sLangID_ProTabFile, &g_sLangTxt_ProTabFile);
	rs_AddString(g_sLangID_AppTestNo, &g_sLangTxt_AppTestNo);
	rs_AddString(g_sLangID_CTestCNum, &g_sLangTxt_CTestCNum);
	rs_AddString(g_sLangID_CoeMus, &g_sLangTxt_CoeMus);
	rs_AddString(g_sLangID_AlarmMode, &g_sLangTxt_AlarmMode);
	rs_AddString(g_sLangID_ContTest, &g_sLangTxt_ContTest);
	rs_AddString(g_sLangID_LongAlarm, &g_sLangTxt_LongAlarm);
	rs_AddString(g_sLangID_ShortAlarm, &g_sLangTxt_ShortAlarm);
	rs_AddString(g_sLangID_CusRepeat, &g_sLangTxt_CusRepeat);
	rs_AddString(g_sLangID_ComFaReNu, &g_sLangTxt_ComFaReNu);
	rs_AddString(g_sLangID_RetComS, &g_sLangTxt_RetComS);
	rs_AddString(g_sLangID_TestCoDe, &g_sLangTxt_TestCoDe);
	rs_AddString(g_sLangID_CoNuShow, &g_sLangTxt_CoNuShow);
	rs_AddString(g_sLangID_TestCoRe, &g_sLangTxt_TestCoRe);
    rs_AddString(g_sLangID_ChoProTem, &g_sLangTxt_ChoProTem);
 	rs_AddString(g_sLangID_AdjustReportInfo, &g_sLangTxt_AdjustReportInfo);
// 	rs_AddString(g_sLangID_DeNoChTe, &g_sLangTxt_DeNoChTe);
// 	rs_AddString(g_sLangID_RepUse, &g_sLangTxt_RepUse);
// 	rs_AddString(g_sLangID_AdjustSure, &g_sLangTxt_AdjustSure);
	rs_AddString(g_sLangID_AutoTestSysSet, &g_sLangTxt_AutoTestSysSet);
	rs_AddString(g_sLangID_AlarmAutoMain, &g_sLangTxt_AlarmAutoMain);
	rs_AddString(g_sLangID_StartX, &g_sLangTxt_StartX);
	rs_AddString(g_sLangID_StartY, &g_sLangTxt_StartY);
	rs_AddString(g_sLangID_NowX, &g_sLangTxt_NowX);
	rs_AddString(g_sLangID_NowY, &g_sLangTxt_NowY);
	rs_AddString(g_sLangID_EndPointX, &g_sLangTxt_EndPointX);
	rs_AddString(g_sLangID_EndPointY, &g_sLangTxt_EndPointY);
	rs_AddString(g_sLangID_TestConR, &g_sLangTxt_TestConR);
	rs_AddString(g_sLangID_WarningProTest, &g_sLangTxt_WarningProTest);
	rs_AddString(g_sLangID_NeedCloPro, &g_sLangTxt_NeedCloPro);
	rs_AddString(g_sLangID_SouRepPath, &g_sLangTxt_SouRepPath);
	rs_AddString(g_sLangID_ExportSet, &g_sLangTxt_ExportSet);
	rs_AddString(g_sLangID_ExportPath, &g_sLangTxt_ExportPath);
	rs_AddString(g_sLangID_ExFileName, &g_sLangTxt_ExFileName);	
	rs_AddString(g_sLangID_ChoFileModel, &g_sLangTxt_ChoFileModel);	
	rs_AddString(g_sLangID_RepViewRat, &g_sLangTxt_RepViewRat);
	rs_AddString(g_sLangID_RepViRaCho, &g_sLangTxt_RepViRaCho);
	rs_AddString(g_sLangID_TestRepViRaSet, &g_sLangTxt_TestRepViRaSet);
	rs_AddString(g_sLangID_UnquaItem, &g_sLangTxt_UnquaItem);
	rs_AddString(g_sLangID_NoChProTem, &g_sLangTxt_NoChProTem);
	rs_AddString(g_sLangID_NoChTestTem, &g_sLangTxt_NoChTestTem);
	rs_AddString(g_sLangID_ChTemplet, &g_sLangTxt_ChTemplet);
	rs_AddString(g_sLangID_ChProtocol, &g_sLangTxt_ChProtocol);
	rs_AddString(g_sLangID_SettingsChoose, &g_sLangTxt_SettingsChoose);
	rs_AddString(g_sLangID_SetMulDev, &g_sLangTxt_SetMulDev);
	rs_AddString(g_sLangID_SetMulDevMgrp, &g_sLangTxt_SetMulDevMgrp);
	rs_AddString(g_sLangID_NoChTemFile, &g_sLangTxt_NoChTemFile);
	rs_AddString(g_sLangID_RepFileNameNu, &g_sLangTxt_RepFileNameNu);
	rs_AddString(g_sLangID_NoChTestType, &g_sLangTxt_NoChTestType);
	rs_AddString(g_sLangID_CommSetInf, &g_sLangTxt_CommSetInf);
	rs_AddString(g_sLangID_TabFileNoSel, &g_sLangTxt_TabFileNoSel);
	rs_AddString(g_sLangID_AlreadyExists, &g_sLangTxt_AlreadyExists);
// 	rs_AddString(g_sLangID_ModelFile, &g_sLangTxt_ModelFile);
	rs_AddString(g_sLangID_NoAddDevTestRep, &g_sLangTxt_NoAddDevTestRep);
	rs_AddString(g_sLangID_OlAddOnRep, &g_sLangTxt_OlAddOnRep);
	rs_AddString(g_sLangID_ProtocoMatching, &g_sLangTxt_ProtocoMatching);
	rs_AddString(g_sLangID_ProtocoTemplate, &g_sLangTxt_ProtocoTemplate);
	rs_AddString(g_sLangID_ChRptRe, &g_sLangTxt_ChRptRe);
	rs_AddString(g_sLangID_RptData, &g_sLangTxt_RptData);
	rs_AddString(g_sLangID_RptData2, &g_sLangTxt_RptData2);
	rs_AddString(g_sLangID_RptLog, &g_sLangTxt_RptLog);
	rs_AddString(g_sLangID_AlOpen, &g_sLangTxt_AlOpen);
	rs_AddString(g_sLangID_TestTemp, &g_sLangTxt_TestTemp);
    rs_AddString(g_sLangID_TaskTotalTime, &g_sLangTxt_TaskTotalTime);
	rs_AddString(g_sLangID_RptTotalTime, &g_sLangTxt_RptTotalTime);
	rs_AddString(g_sLangID_TestingClose, &g_sLangTxt_TestingClose);
	rs_AddString(g_sLangID_FileUnExistS, &g_sLangTxt_FileUnExistS);
	rs_AddString(g_sLangID_SelOrCretFile, &g_sLangTxt_SelOrCretFile);
	rs_AddString(g_sLangID_SelFilePath, &g_sLangTxt_SelFilePath);
	rs_AddString(g_sLangID_DelTaskYOrN, &g_sLangTxt_DelTaskYOrN);
	rs_AddString(g_sLangID_SureDelAgain, &g_sLangTxt_SureDelAgain);
	rs_AddString(g_sLangID_DelFailItem, &g_sLangTxt_DelFailItem);
	rs_AddString(g_sLangID_DelItemYOrN, &g_sLangTxt_DelItemYOrN);
	rs_AddString(g_sLangID_DelFailure, &g_sLangTxt_DelFailure);
	rs_AddString(g_sLangID_StartRptYOrN, &g_sLangTxt_StartRptYOrN);
	rs_AddString(g_sLangID_NewTestClear, &g_sLangTxt_NewTestClear);
	rs_AddString(g_sLangID_SelYes, &g_sLangTxt_SelYes);
	rs_AddString(g_sLangID_SelNo, &g_sLangTxt_SelNo);
	rs_AddString(g_sLangID_SelCancel, &g_sLangTxt_SelCancel);
	rs_AddString(g_sLangID_WavCpntNotExist, &g_sLangTxt_WavCpntNotExist);
	rs_AddString(g_sLangID_UnAutoTest, &g_sLangTxt_UnAutoTest);
	rs_AddString(g_sLangID_ToolUnExitS, &g_sLangTxt_ToolUnExitS);
	rs_AddString(g_sLangID_TestTaskFnshS, &g_sLangTxt_TestTaskFnshS);
	rs_AddString(g_sLangID_StartTestS, &g_sLangTxt_StartTestS);
	rs_AddString(g_sLangID_TestTempS, &g_sLangTxt_TestTempS);
	rs_AddString(g_sLangID_ReportFileS, &g_sLangTxt_ReportFileS);
	rs_AddString(g_sLangID_ModelFileS, &g_sLangTxt_ModelFileS);
	rs_AddString(g_sLangID_PrtcTemS, &g_sLangTxt_PrtcTemS);
	rs_AddString(g_sLangID_AutoTestContrl, &g_sLangTxt_AutoTestContrl);
// 	rs_AddString(g_sLangID_SGroupS, &g_sLangTxt_SGroupS);
// 	rs_AddString(g_sLangID_SGroupFileName, &g_sLangTxt_SGroupFileName);
	rs_AddString(g_sLangID_RightBuy, &g_sLangTxt_RightBuy);
    rs_AddString(g_sLangID_MainView2, &g_sLangTxt_MainView2);
    rs_AddString(g_sLangID_GroupReport, &g_sLangTxt_GroupReport);
	rs_AddString(g_sLangID_ProcessStop, &g_sLangTxt_ProcessStop);
    rs_AddString(g_sLangID_SelObjPath, &g_sLangTxt_SelObjPath);
	rs_AddString(g_sLangID_FileNameIncl, &g_sLangTxt_FileNameIncl);
	rs_AddString(g_sLangID_ReportEptFinsh, &g_sLangTxt_ReportEptFinsh);
	rs_AddString(g_sLangID_ReportTestTempt, &g_sLangTxt_ReportTestTempt);
	rs_AddString(g_sLangID_SureToDele, &g_sLangTxt_SureToDele);
	rs_AddString(g_sLangID_UnQualifadS, &g_sLangTxt_UnQualifadS);
	rs_AddString(g_sLangID_TestOver, &g_sLangTxt_TestOver);
	rs_AddString(g_sLangID_CopyOutput, &g_sLangTxt_CopyOutput);
	rs_AddString(g_sLangID_ClearOutput, &g_sLangTxt_ClearOutput);
// 	rs_AddString(g_sLangID_Unqualified2, &g_sLangTxt_Unqualified2);
	rs_AddString(g_sLangID_NoAddTestRpt, &g_sLangTxt_NoAddTestRpt);
	rs_AddString(g_sLangID_OneTestRpt, &g_sLangTxt_OneTestRpt);
	rs_AddString(g_sLangID_NoSelPrtcTem, &g_sLangTxt_NoSelPrtcTem);
	rs_AddString(g_sLangID_NoSelFile, &g_sLangTxt_NoSelFile);
	rs_AddString(g_sLangID_NameSame, &g_sLangTxt_NameSame);
	rs_AddString(g_sLangID_PrtcSame, &g_sLangTxt_PrtcSame);
	rs_AddString(g_sLangID_IPSame, &g_sLangTxt_IPSame);
	rs_AddString(g_sLangID_ObjFileExistOvwt, &g_sLangTxt_ObjFileExistOvwt);
	rs_AddString(g_sLangID_ToolTip_32781, &g_sLangTxt_ToolTip_32781);
	rs_AddString(g_sLangID_ToolTip_32782, &g_sLangTxt_ToolTip_32782);
	rs_AddString(g_sLangID_ToolTip_32783, &g_sLangTxt_ToolTip_32783);
	rs_AddString(g_sLangID_ToolTip_32784, &g_sLangTxt_ToolTip_32784);
	rs_AddString(g_sLangID_ToolTip_32775, &g_sLangTxt_ToolTip_32775);
	rs_AddString(g_sLangID_ToolTip_32776, &g_sLangTxt_ToolTip_32776);
	rs_AddString(g_sLangID_ToolTip_32777, &g_sLangTxt_ToolTip_32777);
	rs_AddString(g_sLangID_ToolTip_32778, &g_sLangTxt_ToolTip_32778);
	rs_AddString(g_sLangID_ToolTip_32779, &g_sLangTxt_ToolTip_32779);


// 	rs_AddString(g_sLangID_Menu_57634,&g_sLangTxt_Menu_57634);
// 	rs_AddString(g_sLangID_Menu_57632,&g_sLangTxt_Menu_57632);

	rs_AddString(g_sLangID_ToolTip_32789,&g_sLangTxt_ToolTip_32789);
	rs_AddString(g_sLangID_StitchRptFinish,&g_sLangTxt_StitchRptFinish);

	//2016-12-10
	rs_AddString(g_sLangID_ToolTip_2000,&g_sLangTxt_ToolTip_2000);
	rs_AddString(g_sLangID_ToolTip_32786,&g_sLangTxt_ToolTip_32786);
	rs_AddString(g_sLangID_ToolTip_32788,&g_sLangTxt_ToolTip_32788);
	rs_AddString(g_sLangID_ToolTip_2001,&g_sLangTxt_ToolTip_2001);
	rs_AddString(g_sLangID_ToolTip_32785,&g_sLangTxt_ToolTip_32785);
	rs_AddString(g_sLangID_ToolTip_351,&g_sLangTxt_ToolTip_351);
	rs_AddString(g_sLangID_ToolTip_314,&g_sLangTxt_ToolTip_314);
	rs_AddString(g_sLangID_ToolTip_320,&g_sLangTxt_ToolTip_320);
	rs_AddString(g_sLangID_ToolTip_330,&g_sLangTxt_ToolTip_330);
	rs_AddString(g_sLangID_ToolTip_358,&g_sLangTxt_ToolTip_358);
	rs_AddString(g_sLangID_ToolTip_347,&g_sLangTxt_ToolTip_347);
	rs_AddString(g_sLangID_ToolTip_310,&g_sLangTxt_ToolTip_310);
	rs_AddString(g_sLangID_ToolTip_348,&g_sLangTxt_ToolTip_348);
	rs_AddString(g_sLangID_ToolTip_349,&g_sLangTxt_ToolTip_349);
	rs_AddString(g_sLangID_ToolTip_350,&g_sLangTxt_ToolTip_350);
	rs_AddString(g_sLangID_ToolTip_357,&g_sLangTxt_ToolTip_357);

	//shaolei 2024-3-25
	rs_AddString(g_sLangID_GbDevice,&g_sLangTxt_GbDevice);
	rs_AddString(g_sLangID_SysParaCfg,&g_sLangTxt_SysParaCfg);
	rs_AddString(g_sLangID_ChMapsConfig,&g_sLangTxt_ChMapsConfig);
	rs_AddString(g_sLangID_Iec61850Cfg,&g_sLangTxt_Iec61850Cfg);
	rs_AddString(g_sLangID_BeforeTest,&g_sLangTxt_BeforeTest);
	rs_AddString(g_sLangID_NotTest,&g_sLangTxt_NotTest);
	rs_AddString(g_sLangID_RsltEvaluation,&g_sLangTxt_RsltEvaluation);
	rs_AddString(g_sLangID_TSet,&g_sLangTxt_TSet);
	rs_AddString(g_sLangID_USet,&g_sLangTxt_USet);
	rs_AddString(g_sLangID_ISet,&g_sLangTxt_ISet);
	rs_AddString(g_sLangID_AngleSet,&g_sLangTxt_AngleSet);
	rs_AddString(g_sLangID_HzSet,&g_sLangTxt_HzSet);
	rs_AddString(g_sLangID_ReturnCoefSet,&g_sLangTxt_ReturnCoefSet);
	rs_AddString(g_sLangID_MaxAngleSet,&g_sLangTxt_MaxAngleSet);
	rs_AddString(g_sLangID_AngleFSet,&g_sLangTxt_AngleFSet);
	rs_AddString(g_sLangID_AngleSSet,&g_sLangTxt_AngleSSet);
	rs_AddString(g_sLangID_T_AbsErr_Max,&g_sLangTxt_T_AbsErr_Max);
	rs_AddString(g_sLangID_T_AbsErr_Min,&g_sLangTxt_T_AbsErr_Min);
	rs_AddString(g_sLangID_T_RelErr_Max,&g_sLangTxt_T_RelErr_Max);
	rs_AddString(g_sLangID_T_RelErr_Min,&g_sLangTxt_T_RelErr_Min);
	rs_AddString(g_sLangID_U_AbsErr_Max,&g_sLangTxt_U_AbsErr_Max);
	rs_AddString(g_sLangID_U_AbsErr_Min,&g_sLangTxt_U_AbsErr_Min);
	rs_AddString(g_sLangID_U_RelErr_Max,&g_sLangTxt_U_RelErr_Max);
	rs_AddString(g_sLangID_U_RelErr_Min,&g_sLangTxt_U_RelErr_Min);
	rs_AddString(g_sLangID_I_AbsErr_Max,&g_sLangTxt_I_AbsErr_Max);
	rs_AddString(g_sLangID_I_AbsErr_Min,&g_sLangTxt_I_AbsErr_Min);
	rs_AddString(g_sLangID_I_RelErr_Max,&g_sLangTxt_I_RelErr_Max);
	rs_AddString(g_sLangID_I_RelErr_Min,&g_sLangTxt_I_RelErr_Min);
	rs_AddString(g_sLangID_Angle_AbsErr_Max,&g_sLangTxt_Angle_AbsErr_Max);
	rs_AddString(g_sLangID_Angle_AbsErr_Min,&g_sLangTxt_Angle_AbsErr_Min);
	rs_AddString(g_sLangID_Hz_AbsErr_Max,&g_sLangTxt_Hz_AbsErr_Max);
	rs_AddString(g_sLangID_Hz_AbsErr_Min,&g_sLangTxt_Hz_AbsErr_Min);
	rs_AddString(g_sLangID_RetCoef_AbsErr_Max,&g_sLangTxt_RetCoef_AbsErr_Max);
	rs_AddString(g_sLangID_RetCoef_AbsErr_Min,&g_sLangTxt_RetCoef_AbsErr_Min);
	rs_AddString(g_sLangID_MaxAngle_AbsErr_Max,&g_sLangTxt_MaxAngle_AbsErr_Max);
	rs_AddString(g_sLangID_MaxAngle_AbsErr_Min,&g_sLangTxt_MaxAngle_AbsErr_Min);
	rs_AddString(g_sLangID_AngleF_AbsErr_Max,&g_sLangTxt_AngleF_AbsErr_Max);
	rs_AddString(g_sLangID_AngleF_AbsErr_Min,&g_sLangTxt_AngleF_AbsErr_Min);
	rs_AddString(g_sLangID_AngleS_AbsErr_Max,&g_sLangTxt_AngleS_AbsErr_Max);
	rs_AddString(g_sLangID_AngleS_AbsErr_Min,&g_sLangTxt_AngleS_AbsErr_Min);
	rs_AddString(g_sLangID_T_Act,&g_sLangTxt_T_Act);
	rs_AddString(g_sLangID_T_ErrRel,&g_sLangTxt_T_ErrRel);
	rs_AddString(g_sLangID_T_ErrAbs,&g_sLangTxt_T_ErrAbs);
	rs_AddString(g_sLangID_T_RelErr,&g_sLangTxt_T_RelErr);
	rs_AddString(g_sLangID_T_AbsErr,&g_sLangTxt_T_AbsErr);
	rs_AddString(g_sLangID_U_RelErr,&g_sLangTxt_U_RelErr);
	rs_AddString(g_sLangID_U_AbsErr,&g_sLangTxt_U_AbsErr);
	rs_AddString(g_sLangID_U_ErrRel,&g_sLangTxt_U_ErrRel);
	rs_AddString(g_sLangID_U_ErrAbs,&g_sLangTxt_U_ErrAbs);
	rs_AddString(g_sLangID_U_Act,&g_sLangTxt_U_Act);
	rs_AddString(g_sLangID_I_RelErr,&g_sLangTxt_I_RelErr);
	rs_AddString(g_sLangID_I_AbsErr,&g_sLangTxt_I_AbsErr);
	rs_AddString(g_sLangID_I_ErrRel,&g_sLangTxt_I_ErrRel);
	rs_AddString(g_sLangID_I_ErrAbs,&g_sLangTxt_I_ErrAbs);
	rs_AddString(g_sLangID_I_Act,&g_sLangTxt_I_Act);
	rs_AddString(g_sLangID_Angle_RelErr,&g_sLangTxt_Angle_RelErr);
	rs_AddString(g_sLangID_Angle_AbsErr,&g_sLangTxt_Angle_AbsErr);
	rs_AddString(g_sLangID_Angle_ErrRel,&g_sLangTxt_Angle_ErrRel);
	rs_AddString(g_sLangID_Angle_ErrAbs,&g_sLangTxt_Angle_ErrAbs);
	rs_AddString(g_sLangID_Angle_Act,&g_sLangTxt_Angle_Act);
	rs_AddString(g_sLangID_Hz_RelErr,&g_sLangTxt_Hz_RelErr);
	rs_AddString(g_sLangID_Hz_AbsErr,&g_sLangTxt_Hz_AbsErr);
	rs_AddString(g_sLangID_Hz_ErrRel,&g_sLangTxt_Hz_ErrRel);
	rs_AddString(g_sLangID_Hz_ErrAbs,&g_sLangTxt_Hz_ErrAbs);
	rs_AddString(g_sLangID_Hz_Act,&g_sLangTxt_Hz_Act);
	rs_AddString(g_sLangID_ReturnCoef_AbsErr,&g_sLangTxt_ReturnCoef_AbsErr);
	rs_AddString(g_sLangID_ReturnCoef_ErrAbs,&g_sLangTxt_ReturnCoef_ErrAbs);
	rs_AddString(g_sLangID_ReturnCoef_Act,&g_sLangTxt_ReturnCoef_Act);
	rs_AddString(g_sLangID_MaxAngle_AbsErr,&g_sLangTxt_MaxAngle_AbsErr);
	rs_AddString(g_sLangID_MaxAngle_ErrAbs,&g_sLangTxt_MaxAngle_ErrAbs);
	rs_AddString(g_sLangID_AngleF_AbsErr,&g_sLangTxt_AngleF_AbsErr);
	rs_AddString(g_sLangID_AngleF_ErrAbs,&g_sLangTxt_AngleF_ErrAbs);
	rs_AddString(g_sLangID_AngleS_AbsErr,&g_sLangTxt_AngleS_AbsErr);
	rs_AddString(g_sLangID_AngleS_ErrAbs,&g_sLangTxt_AngleS_ErrAbs);
	rs_AddString(g_sLangID_ReadAin,&g_sLangTxt_ReadAin);
	rs_AddString(g_sLangID_WriteSetting,&g_sLangTxt_WriteSetting);
	rs_AddString(g_sLangID_WriteEna,&g_sLangTxt_WriteEna);
	rs_AddString(g_sLangID_Reset,&g_sLangTxt_Reset);
	rs_AddString(g_sLangID_BeforeTestGrp,&g_sLangTxt_BeforeTestGrp);
	rs_AddString(g_sLangID_ImportDvm,&g_sLangTxt_ImportDvm);
	rs_AddString(g_sLangID_BeforeComm,&g_sLangTxt_BeforeComm);
	rs_AddString(g_sLangID_AfterComm,&g_sLangTxt_IAfterComm);

	//add 2024-8-27
	rs_AddString(g_sLangID_SpowerSet,&g_sLangTxt_SpowerSet);
	rs_AddString(g_sLangID_Spower_RelErr,&g_sLangTxt_Spower_RelErr);
	rs_AddString(g_sLangID_Spower_AbsErr,&g_sLangTxt_Spower_AbsErr);
	rs_AddString(g_sLangID_Spower_ErrRel,&g_sLangTxt_Spower_ErrRel);
	rs_AddString(g_sLangID_Spower_ErrAbs,&g_sLangTxt_Spower_ErrAbs);
	rs_AddString(g_sLangID_PpowerSet,&g_sLangTxt_PpowerSet);
	rs_AddString(g_sLangID_Ppower_RelErr,&g_sLangTxt_Ppower_RelErr);
	rs_AddString(g_sLangID_Ppower_AbsErr,&g_sLangTxt_Ppower_AbsErr);
	rs_AddString(g_sLangID_Ppower_ErrRel,&g_sLangTxt_Ppower_ErrRel);
	rs_AddString(g_sLangID_Ppower_ErrAbs,&g_sLangTxt_Ppower_ErrAbs);
	rs_AddString(g_sLangID_QpowerSet,&g_sLangTxt_QpowerSet);
	rs_AddString(g_sLangID_Qpower_RelErr,&g_sLangTxt_Qpower_RelErr);
	rs_AddString(g_sLangID_Qpower_AbsErr,&g_sLangTxt_Qpower_AbsErr);
	rs_AddString(g_sLangID_Qpower_ErrRel,&g_sLangTxt_Qpower_ErrRel);
	rs_AddString(g_sLangID_Qpower_ErrAbs,&g_sLangTxt_Qpower_ErrAbs);
	rs_AddString(g_sLangID_Spower_AbsErr_Max,&g_sLangTxt_Spower_AbsErr_Max);
	rs_AddString(g_sLangID_Spower_RelErr_Max,&g_sLangTxt_Spower_RelErr_Max);
	rs_AddString(g_sLangID_Spower_AbsErr_Min,&g_sLangTxt_Spower_AbsErr_Min);
	rs_AddString(g_sLangID_Spower_RelErr_Min,&g_sLangTxt_Spower_RelErr_Min);
	rs_AddString(g_sLangID_Ppower_AbsErr_Max,&g_sLangTxt_Ppower_AbsErr_Max);
	rs_AddString(g_sLangID_Ppower_RelErr_Max,&g_sLangTxt_Ppower_RelErr_Max);
	rs_AddString(g_sLangID_Ppower_AbsErr_Min,&g_sLangTxt_Ppower_AbsErr_Min);
	rs_AddString(g_sLangID_Ppower_RelErr_Min,&g_sLangTxt_Ppower_RelErr_Min);
	rs_AddString(g_sLangID_Qpower_AbsErr_Max,&g_sLangTxt_Qpower_AbsErr_Max);
	rs_AddString(g_sLangID_Qpower_RelErr_Max,&g_sLangTxt_Qpower_RelErr_Max);
	rs_AddString(g_sLangID_Qpower_AbsErr_Min,&g_sLangTxt_Qpower_AbsErr_Min);
	rs_AddString(g_sLangID_Qpower_RelErr_Min,&g_sLangTxt_Qpower_RelErr_Min);
	rs_AddString(g_sLangID_ImpAngleSet,&g_sLangTxt_ImpAngleSet);
	rs_AddString(g_sLangID_ImpAngle_RelErr,&g_sLangTxt_ImpAngle_RelErr);
	rs_AddString(g_sLangID_ImpAngle_AbsErr,&g_sLangTxt_ImpAngle_AbsErr);
	rs_AddString(g_sLangID_ImpAngle_ErrRel,&g_sLangTxt_ImpAngle_ErrRel);
	rs_AddString(g_sLangID_ImpAngle_ErrAbs,&g_sLangTxt_ImpAngle_ErrAbs);
	rs_AddString(g_sLangID_ShortZImp,&g_sLangTxt_ShortZImp);
	rs_AddString(g_sLangID_ShortZImp_RelErr,&g_sLangTxt_ShortZImp_RelErr);
	rs_AddString(g_sLangID_ShortZImp_AbsErr,&g_sLangTxt_ShortZImp_AbsErr);
	rs_AddString(g_sLangID_ShortZImp_ErrRel,&g_sLangTxt_ShortZImp_ErrRel);
	rs_AddString(g_sLangID_ShortZImp_ErrAbs,&g_sLangTxt_ShortZImp_ErrAbs);
	rs_AddString(g_sLangID_ImpAngle_AbsErr_Max,&g_sLangTxt_ImpAngle_AbsErr_Max);
	rs_AddString(g_sLangID_ImpAngle_RelErr_Max,&g_sLangTxt_ImpAngle_RelErr_Max);
	rs_AddString(g_sLangID_ImpAngle_AbsErr_Min,&g_sLangTxt_ImpAngle_AbsErr_Min);
	rs_AddString(g_sLangID_ImpAngle_RelErr_Min,&g_sLangTxt_ImpAngle_RelErr_Min);
	rs_AddString(g_sLangID_ShortZImp_AbsErr_Max,&g_sLangTxt_ShortZImp_AbsErr_Max);
	rs_AddString(g_sLangID_ShortZImp_RelErr_Max,&g_sLangTxt_ShortZImp_RelErr_Max);
	rs_AddString(g_sLangID_ShortZImp_AbsErr_Min,&g_sLangTxt_ShortZImp_AbsErr_Min);
	rs_AddString(g_sLangID_ShortZImp_RelErr_Min,&g_sLangTxt_ShortZImp_RelErr_Min);
	rs_AddString(g_sLangID_Hz_RelErr_Max,&g_sLangTxt_Hz_RelErr_Max);
	rs_AddString(g_sLangID_Hz_RelErr_Min,&g_sLangTxt_Hz_RelErr_Min);
	rs_AddString(g_sLangID_T_ErrAbsPos,&g_sLangTxt_T_ErrAbsPos);
	rs_AddString(g_sLangID_T_ErrAbsNeg,&g_sLangTxt_T_ErrAbsNeg);
}

void CXLanguageResourceAts_AutoTest::InitLangTxt()
{
	CXLanguageResourceAtsBase::InitLangTxt();

	// g_sLangID_Login                    = _T("sLogin");
	// g_sLangTxt_Login                   = _T("登录");
	g_sLangID_AutoTestVTip             = _T("sAutoTestVTip");
	g_sLangTxt_AutoTestVTip            = _T("智能自动测试系统V1.0");
	// g_sLangID_FileOpen                 = _T("sFileOpen");
	// g_sLangTxt_FileOpen                = _T("打开（&O）");
	g_sLangID_FileOpenTip              = _T("sFileOpenTip");
	g_sLangTxt_FileOpenTip             = _T("打开现有文档\n打开");
	g_sLangID_RibbonRecentDocs         = _T("sRibbonRecentDocs");
	g_sLangTxt_RibbonRecentDocs        = _T("最近使用的文档");
	g_sLangID_Config                   = _T("sConfig");
	g_sLangTxt_Config                  = _T("系统配置");
	g_sLangID_AutoTestOper             = _T("sAutoTestOper");
	g_sLangTxt_AutoTestOper            = _T("自动测试操作");
	// g_sLangID_UpLoad                   = _T("sUpLoad");
	// g_sLangTxt_UpLoad                  = _T("上传");
	// g_sLangID_DownLoad                 = _T("sDownLoad");
	// g_sLangTxt_DownLoad                = _T("下载");
	g_sLangID_NewTest                  = _T("sNewTest");
	g_sLangTxt_NewTest                 = _T("新建测试");
	g_sLangID_NewTestWork              = _T("sNewTestWork");
	g_sLangTxt_NewTestWork             = _T("新建测试任务");
	g_sLangID_MultiDevTest             = _T("sMultiDevTest");
	g_sLangTxt_MultiDevTest            = _T("多装置测试");
	g_sLangID_SinDevMulPro             = _T("sSinDevMulPro");
	g_sLangTxt_SinDevMulPro            = _T("单装置多规约");
	g_sLangID_MdvMgrpTest             = _T("sMdvMgrp");
	g_sLangTxt_MdvMgrpTest            = _T("多装置多组");
	g_sLangID_SubTempTest              = _T("sSubTempTest");
	g_sLangTxt_SubTempTest             = _T("子模板测试");
	g_sLangID_SingleDevTest            = _T("sSingleDevTest");
	g_sLangTxt_SingleDevTest           = _T("单装置测试");
	g_sLangID_UsePowerTestTemplate            = _T("sUsePowerTestTemplate");
	g_sLangTxt_UsePowerTestTemplate           = _T("PowerTest模板");
	g_sLangID_Test                     = _T("sTest");
	g_sLangTxt_Test                    = _T("测试");
	g_sLangID_Stop                     = _T("sStop");
	g_sLangTxt_Stop                    = _T("停止");
	g_sLangID_ShowScale                = _T("sShowScale");
	g_sLangTxt_ShowScale               = _T("显示比例");
	g_sLangID_AdReport                 = _T("sAdReport");
	g_sLangTxt_AdReport                = _T("调整报告");
	g_sLangID_PrintReport              = _T("sPrintReport");
	g_sLangTxt_PrintReport             = _T("打印报告");
	g_sLangID_Settings                 = _T("sSettings");
	g_sLangTxt_Settings                = _T("配置");
	g_sLangID_ReConfig                 = _T("sReConfig");
	g_sLangTxt_ReConfig                = _T("录波配置");
	// g_sLangID_View                     = _T("sView");
	// g_sLangTxt_View                    = _T("视图");
	// g_sLangID_StatusBarTip             = _T("sStatusBarTip");
	// g_sLangTxt_StatusBarTip            = _T("显示或隐藏状态栏\n切换状态栏");
	g_sLangID_OutpWind                 = _T("sOutpWind");
	g_sLangTxt_OutpWind                = _T("输出窗口");
	g_sLangID_FileManBar               = _T("sFileManBar");
	g_sLangTxt_FileManBar              = _T("文件管理栏");
	g_sLangID_TestInfBar               = _T("sTestInfBar");
	g_sLangTxt_TestInfBar              = _T("测试信息栏");
	g_sLangID_SdvMgrpReTest               = _T("sSdvMgrpReTest");
	g_sLangTxt_SdvMgrpReTest              = _T("单装置多组重测模式");
	g_sLangID_TestTaskBar              = _T("sTestTaskBar");
	g_sLangTxt_TestTaskBar             = _T("测试任务栏");
	g_sLangID_CharCurTest              = _T("sCharCurTest");
	g_sLangTxt_CharCurTest             = _T("特性曲线测试");
	g_sLangID_ShowTestInf              = _T("sShowTestInf");
	g_sLangTxt_ShowTestInf             = _T("显示测试信息");
	g_sLangID_ShowTestSpyWnd             = _T("sShowTestSpyWnd");
	g_sLangTxt_ShowTestSpyWnd             = _T("测试监视窗口");
	g_sLangID_WriteLogFile             = _T("sWriteLogFile");
	g_sLangTxt_WriteLogFile             = _T("日志文件");
	g_sLangID_ViewWordRpt             = _T("sViewWordRpt");
	g_sLangTxt_ViewWordRpt             = _T("多报告时显示Word");
	// g_sLangID_AboutTip                 = _T("sAboutTip");
	// g_sLangTxt_AboutTip                = _T("显示程序信息、版本号和版权\n关于");
	g_sLangID_ToAndCom                 = _T("sToAndCom");
	g_sLangTxt_ToAndCom                = _T("工具和命令");
	g_sLangID_SysTools                 = _T("sSysTools");
	g_sLangTxt_SysTools                = _T("系统工具");
	g_sLangID_SysCom                   = _T("sSysCom");
	g_sLangTxt_SysCom                  = _T("系统命令");
	g_sLangID_TestFileMan              = _T("sTestFileMan");
	g_sLangTxt_TestFileMan             = _T("测试文件管理");
	g_sLangID_TestItemField            = _T("sTestItemField");
	g_sLangTxt_TestItemField           = _T("测试项目栏");
	g_sLangID_ReportAdjSh              = _T("sReportAdjSh");
	g_sLangTxt_ReportAdjSh             = _T("报告调整提示");
	g_sLangID_TestChoPro               = _T("sTestChoPro");
	g_sLangTxt_TestChoPro              = _T("测试仪选择（测试仪器选择改变，需重新启动自动测试程序才能是改变生效）");
	g_sLangID_AutoTestSysSet           = _T("sAutoTestSysSet");
	g_sLangTxt_AutoTestSysSet          = _T("自动测试系统配置");
	g_sLangID_AlarmAutoMain            = _T("sAlarmAutoMain");
	g_sLangTxt_AlarmAutoMain           = _T("警告—自动测试主程序");
	g_sLangID_TestInf            = _T("sTestInf");
	g_sLangTxt_TestInf           = _T("实验信息");
	g_sLangID_TaskName           = _T("sTaskName");
	g_sLangTxt_TaskName          = _T("任务名称");
	g_sLangID_TestType           = _T("sTestType");
	g_sLangTxt_TestType          = _T("实验类型");
	g_sLangID_ProSet             = _T("sProSet");
	g_sLangTxt_ProSet            = _T("规约设置");
	g_sLangID_PoFile             = _T("sPoFile");
	g_sLangTxt_PoFile            = _T("点表文件");
	g_sLangID_ChoTest            = _T("sChoTest");
	g_sLangTxt_ChoTest           = _T("选择测试模板");
	g_sLangID_ChoProTem          = _T("sChoProTem");
	g_sLangTxt_ChoProTem         = _T("选择规约模板");
	g_sLangID_SelPoFile          = _T("sSelPoFile");
	g_sLangTxt_SelPoFile         = _T("选择点表文件");
	g_sLangID_TitleTask          = _T("sTitleTask");
	g_sLangTxt_TitleTask         = _T("测试任务");
	g_sLangID_NewBuilt                 = _T("sNewBuilt");
	g_sLangTxt_NewBuilt                = _T("新建");
	g_sLangID_TestFileName             = _T("sTestFileName");
	g_sLangTxt_TestFileName            = _T("测试文件名");
	g_sLangID_TesTyp                   = _T("sTesTyp");
	g_sLangTxt_TesTyp                  = _T("测试类型");
	g_sLangID_ProTypeCho               = _T("sProTypeCho");
	g_sLangTxt_ProTypeCho              = _T("规约种类选择");
	g_sLangID_TestTempFile             = _T("sTestTempFile");
	g_sLangTxt_TestTempFile            = _T("测试模板文件");
	g_sLangID_ProTempFile              = _T("sProTempFile");
	g_sLangTxt_ProTempFile             = _T("规约模板文件");
	g_sLangID_ProHighSet               = _T("sProHighSet");
	g_sLangTxt_ProHighSet              = _T("规约高级设置");
	g_sLangID_ProTabFile               = _T("sProTabFile");
	g_sLangTxt_ProTabFile              = _T("规约点表文件");
	g_sLangID_RptData                  = _T("sRptData");
	g_sLangTxt_RptData                 = _T("报告数据");
	g_sLangID_RptLog                  = _T("sRptLog");
	g_sLangTxt_RptLog                 = _T("日志");
	g_sLangID_RptData2                 = _T("sRptData2");
	g_sLangTxt_RptData2                = _T("报告数据2");
	g_sLangID_TestTemp                 = _T("sTestTemp");
	g_sLangTxt_TestTemp                = _T("测试模板");
	g_sLangID_AppTestNo                = _T("sAppTestNo");
	g_sLangTxt_AppTestNo               = _T("出现测试不合格项目处理");
	g_sLangID_CTestCNum                = _T("sCTestCNum");
	g_sLangTxt_CTestCNum               = _T("重复测试项目重复次数");
	g_sLangID_CoeMus                   = _T("sCoeMus");
	g_sLangTxt_CoeMus                  = _T("提示音乐");
	g_sLangID_AlarmMode                = _T("sAlarmMode");
	g_sLangTxt_AlarmMode               = _T("告警方式");
	g_sLangID_ContTest                 = _T("sContTest");
	g_sLangTxt_ContTest                = _T("继续测试");
	g_sLangID_LongAlarm                = _T("sLongAlarm");
	g_sLangTxt_LongAlarm               = _T("长警告");
	g_sLangID_ShortAlarm               = _T("sShortAlarm");
	g_sLangTxt_ShortAlarm              = _T("短警告");
	g_sLangID_CusRepeat                = _T("sCusRepeat");
	g_sLangTxt_CusRepeat               = _T("自定义最大重复次数");
	g_sLangID_ComFaReNu                = _T("sComFaReNu");
	g_sLangTxt_ComFaReNu               = _T("通讯失败后重试次数");
	g_sLangID_RetComS                  = _T("sRetComS");
	g_sLangTxt_RetComS                 = _T("重试通讯前延时");
	g_sLangID_TestCoDe                 = _T("sTestCoDe");
	g_sLangTxt_TestCoDe                = _T("测试项目测试完成出来");
	g_sLangID_CoNuShow                 = _T("sCoNuShow");
	g_sLangTxt_CoNuShow                = _T("完成一级项目时进行提示");
	g_sLangID_TestCoRe                 = _T("sTestCoRe");
	g_sLangTxt_TestCoRe                = _T("测试完成，报告自动导出路径（测试模板须调用SetUploadRptFile设置导出报告文件名）");
	g_sLangID_AdjustReportInfo             = _T("sAdjustReportInfo");
	g_sLangTxt_AdjustReportInfo            = _T("调整报告完成如下操作：\r\n1，删除没有选择测试的项目分类报告部分\r\n2，对于没有测试的测试点，空白报告部分使用“--”替换\r\n调整部分不可以恢复，确实要调整吗？");
	// g_sLangID_DeNoChTe                 = _T("sDeNoChTe");
	// g_sLangTxt_DeNoChTe                = _T("1.删除没有选择测试的项目分类报告部分");
	// g_sLangID_RepUse                   = _T("sRepUse");
	// g_sLangTxt_RepUse                  = _T("2.对于没有测试的测试点，空白部分报告使用“——”替换");
	// g_sLangID_AdjustSure               = _T("sAdjustSure");
	// g_sLangTxt_AdjustSure              = _T("调整部分不可以回复，确定要调整吗？");
	g_sLangID_StartX               = _T("sStartX");
	g_sLangTxt_StartX              = _T("起点X");
	g_sLangID_StartY               = _T("sStartY");
	g_sLangTxt_StartY              = _T("起点Y");
	g_sLangID_NowX                 = _T("sNowX");
	g_sLangTxt_NowX                = _T("当前X");
	g_sLangID_NowY                 = _T("sNowY");
	g_sLangTxt_NowY                = _T("当前Y");
	g_sLangID_EndPointX            = _T("sEndPointX");
	g_sLangTxt_EndPointX           = _T("终点X");
	g_sLangID_EndPointY            = _T("sEndPointY");
	g_sLangTxt_EndPointY           = _T("终点Y");
	g_sLangID_TestConR             = _T("sTestConR");
	g_sLangTxt_TestConR            = _T("与测试仪控制接口程序握手，30s内握手失败，则终止进程，重新启动测试仪接口程序");
	g_sLangID_WarningProTest       = _T("sWarningProTest");
	g_sLangTxt_WarningProTest      = _T("程序检测到系统中有和系统相关的进程正在运行，点击“终止进程”关闭所有进程");
	g_sLangID_NeedCloPro           = _T("sNeedCloPro");
	g_sLangTxt_NeedCloPro          = _T("需要关闭的进程");
	g_sLangID_SouRepPath           = _T("sSouRepPath");
	g_sLangTxt_SouRepPath          = _T("源报告路径");
	g_sLangID_ExportSet            = _T("sExportSet");
	g_sLangTxt_ExportSet           = _T("导出设置");
	g_sLangID_ExportPath           = _T("sExportPath");
	g_sLangTxt_ExportPath          = _T("导出路径");
	g_sLangID_ExFileName           = _T("sExFileName");
	g_sLangTxt_ExFileName          = _T("导出文件名称");
	g_sLangID_ChoFileModel         = _T("sChoFileModel");
	g_sLangTxt_ChoFileModel        = _T("选择文件模型");
	g_sLangID_RepViewRat           = _T("sRepViewRat");
	g_sLangTxt_RepViewRat          = _T("报告显示比例");
	g_sLangID_RepViRaCho           = _T("sRepViRaCho");
	g_sLangTxt_RepViRaCho          = _T("报告显示比例选择");
	g_sLangID_TestRepViRaSet       = _T("sTestRepViRaSet");
	g_sLangTxt_TestRepViRaSet      = _T("试验报告显示比例设置");
	g_sLangID_NoChProTem          = _T("sNoChProTem");
	g_sLangTxt_NoChProTem         = _T("没有选择规约模板");
	g_sLangID_NoChTestTem         = _T("sNoChTestTem");
	g_sLangTxt_NoChTestTem        = _T("没有选择测试模板");
	g_sLangID_ChTemplet           = _T("sChTemplet");
	g_sLangTxt_ChTemplet          = _T("选择模板");
	g_sLangID_ChProtocol          = _T("sChProtocol");
	g_sLangTxt_ChProtocol         = _T("选择规约");
	g_sLangID_SettingsChoose      = _T("sSettingsChoose");
	g_sLangTxt_SettingsChoose     = _T("设置组选择");
	g_sLangID_SetMulDev           = _T("sSetMulDev");
	g_sLangTxt_SetMulDev          = _T("设置多装置");
	g_sLangID_SetMulDevMgrp           = _T("sSetMulDevMgrp");
	g_sLangTxt_SetMulDevMgrp          = _T("设置多装置多组");
	g_sLangID_NoChTemFile         = _T("sNoChTemFile");
	g_sLangTxt_NoChTemFile        = _T("没有选择模板文件");
	g_sLangID_RepFileNameNu       = _T("sRepFileNameNu");
	g_sLangTxt_RepFileNameNu      = _T("报告文件名为空");
	g_sLangID_NoChTestType        = _T("sNoChTestType");
	g_sLangTxt_NoChTestType       = _T("没有选择测试类型");
	g_sLangID_CommSetInf          = _T("sCommSetInf");
	g_sLangTxt_CommSetInf         = _T("通讯设置信息不全");
	g_sLangID_TabFileNoSel        = _T("sTabFileNoSel");
	g_sLangTxt_TabFileNoSel       = _T("点表文件没有选择");
	g_sLangID_AlreadyExists       = _T("sAlreadyExists");
	g_sLangTxt_AlreadyExists      = _T("%s 已经存在");
	g_sLangID_UnquaItem           = _T("sUnquaItem");
	g_sLangTxt_UnquaItem          = _T("不合格项目");
	// g_sLangID_ModelFile           = _T("sModelFile");
	// g_sLangTxt_ModelFile          = _T("模型文件");
	g_sLangID_NoAddDevTestRep     = _T("sNoAddDevTestRep");
	g_sLangTxt_NoAddDevTestRep    = _T("没有添加装置测试报告");
	g_sLangID_OlAddOnRep          = _T("sOlAddOnRep");
	g_sLangTxt_OlAddOnRep         = _T("只添加了一个装置测试报告");
	g_sLangID_ProtocoTemplate     = _T("sProtocoTemplate");
	g_sLangTxt_ProtocoTemplate    = _T("规约模板");
	g_sLangID_ProtocoMatching     = _T("sProtocoMatching");
	g_sLangTxt_ProtocoMatching    = _T("规约配型");
	g_sLangID_ChRptRe             = _T("sChRptRe");
	g_sLangTxt_ChRptRe            = _T("选择报告导出目标目录");
	g_sLangID_AlOpen              = _T("sAlOpen");
	g_sLangTxt_AlOpen             = _T("已经打开【%s】，请关闭后在创建测试报告！");
	g_sLangID_TaskTotalTime           = _T("sTaskTotalTime");
	g_sLangTxt_TaskTotalTime          = _T("任务总时间");
	g_sLangID_RptTotalTime           = _T("sRptTotalTime");
	g_sLangTxt_RptTotalTime          = _T("报告总时间");
	g_sLangID_TestingClose           = _T("sTestingClose");
	g_sLangTxt_TestingClose          = _T("正在测试中，不能关闭...");
	g_sLangID_FileUnExistS           = _T("sFileUnExistS");
	g_sLangTxt_FileUnExistS          = _T("文件\"%s\"不存在");
	g_sLangID_SelOrCretFile           = _T("sSelOrCretFile");
	g_sLangTxt_SelOrCretFile          = _T("文件夹【%s】包含有测试报告文件\n请选择或者创建一个空的文件夹");
	g_sLangID_SelFilePath           = _T("sSelFilePath");
	g_sLangTxt_SelFilePath          = _T("请选择报告文件存储的路径！");
	g_sLangID_DelTaskYOrN           = _T("sDelTaskYOrN");
	g_sLangTxt_DelTaskYOrN          = _T("是否要删除任务 %s 及其子项");
	g_sLangID_SureDelAgain           = _T("sSureDelAgain");
	g_sLangTxt_SureDelAgain          = _T("请再次确定删除");
	g_sLangID_DelFailItem           = _T("sDelFailItem");
	g_sLangTxt_DelFailItem          = _T("删除的任务中包含已经被打开的工程，删除失败");
	g_sLangID_DelItemYOrN           = _T("sDelItemYOrN");
	g_sLangTxt_DelItemYOrN          = _T("是否要删除工程 %s");
	g_sLangID_DelFailure           = _T("sDelFailure");
	g_sLangTxt_DelFailure          = _T("该工程已经被打开，删除失败");
	g_sLangID_StartRptYOrN           = _T("sStartRptYOrN");
	g_sLangTxt_StartRptYOrN          = _T("“开始报告”功能只测试当前打开的测试报告，\r\n你确实只要测试测试任务中的单个测试报告吗？\r\n\r\n选择“是”测试单个报告\r\n选择“否”开始任务测试\r\n选择“取消”终止操作");
	g_sLangID_NewTestClear           = _T("sNewTestClear");
	g_sLangTxt_NewTestClear          = _T("新建测试，清除当前报告数据吗？\r\n");
	g_sLangID_SelYes           = _T("sSelYes");
	g_sLangTxt_SelYes          = _T("选择“是”，清除当前报告数据，新建测试\r\n");
	g_sLangID_SelNo           = _T("sSelNo");
	g_sLangTxt_SelNo          = _T("选择“否”，不清除当前报告数据，新建测试\r\n");
	g_sLangID_SelCancel           = _T("sSelCancel");
	g_sLangTxt_SelCancel          = _T("选择“取消”，不开始测试");
	g_sLangID_WavCpntNotExist           = _T("sWavCpntNotExist");
	g_sLangTxt_WavCpntNotExist          = _T("录波组件不存在");
	g_sLangID_UnAutoTest           = _T("sUnAutoTest");
	g_sLangTxt_UnAutoTest          = _T("没有启动自动测试，无法执行命令");
	g_sLangID_ToolUnExitS           = _T("sToolUnExitS ");
	g_sLangTxt_ToolUnExitS           = _T("工具【%s】【%s】不存在");
	g_sLangID_TestTaskFnshS           = _T("sTestTaskFnshS");
	g_sLangTxt_TestTaskFnshS          = _T("测试任务【%s】测试完成");
	g_sLangID_StartTestS           = _T("sStartTestS");
	g_sLangTxt_StartTestS          = _T("开始测试【%s】");
	g_sLangID_TestTempS           = _T("sTestTempS");
	g_sLangTxt_TestTempS          = _T("测试模板*******%s");
	g_sLangID_ReportFileS           = _T("sReportFileS ");
	g_sLangTxt_ReportFileS           = _T("报告文件*******%s");
	g_sLangID_ModelFileS           = _T("sModelFileS");
	g_sLangTxt_ModelFileS         = _T("模型文件********%s");
	g_sLangID_PrtcTemS           = _T("sPrtcTemS");
	g_sLangTxt_PrtcTemS          = _T("规约模板********%s");
	g_sLangID_AutoTestContrl           = _T("sAutoTestContrl");
	g_sLangTxt_AutoTestContrl          = _T("自动测试控制中心");
	// g_sLangID_SGroupS           = _T("sSGroupS");
	// g_sLangTxt_SGroupS          = _T("%s%s-组%d.%s");
	// g_sLangID_SGroupFileName           = _T("sSGroupFnm");
	// g_sLangTxt_SGroupFileName          = _T("%s-组%d");
	g_sLangID_RightBuy           = _T("sRightBuy");
	g_sLangTxt_RightBuy           = _T("Demo版本，只能使用模板【Demo-PSL-641U】，请购买正式版本！");
	g_sLangID_MainView2           = _T("sMainView2");
	g_sLangTxt_MainView2          = _T("主视图:");
	g_sLangID_GroupReport           = _T("sGroupReport");
	g_sLangTxt_GroupReport          = _T("组%d报告");
	g_sLangID_ProcessStop           = _T("sProcessStop");
	g_sLangTxt_ProcessStop          = _T("和测试相关的进程已经被终止");
	g_sLangID_SelObjPath           = _T("sSelObjPath");
	g_sLangTxt_SelObjPath          = _T("选择目标路径");
	g_sLangID_FileNameIncl           = _T("sFileNameIncl");
	g_sLangTxt_FileNameIncl          = _T("文件名称包含非法字符: %s");
	g_sLangID_ReportEptFinsh           = _T("sReportEptFinsh");
	g_sLangTxt_ReportEptFinsh          = _T("报告导出完成");
	g_sLangID_ObjFileExistOvwt           = _T("sObjFileExistOvwt");
	g_sLangTxt_ObjFileExistOvwt          = _T("目标文件已经存在,覆盖吗?");
	g_sLangID_ReportTestTempt           = _T("sReportTestTempt");
	g_sLangTxt_ReportTestTempt          = _T("报告【%s】对应的测试模板:【%s】");
	g_sLangID_SureToDele           = _T("sSureToDele");
	g_sLangTxt_SureToDele          = _T("你确实要删除【%s】吗？");
	g_sLangID_UnQualifadS           = _T("sUnQualifadS");
	g_sLangTxt_UnQualifadS          = _T("[%s]不合格");
	g_sLangID_TestOver           = _T("sTestOver");
	g_sLangTxt_TestOver          = _T("********测试结束********");
	g_sLangID_CopyOutput           = _T("sCopyOutput");
	g_sLangTxt_CopyOutput          = _T("复制输出");
	g_sLangID_ClearOutput           = _T("sClearOutput");
	g_sLangTxt_ClearOutput          = _T("清除输出");
	// g_sLangID_Unqualified2           = _T("sUnqualified2");
	// g_sLangTxt_Unqualified2          = _T("%s[不合格]");
	g_sLangID_NoAddTestRpt           = _T("sNoAddTestRpt");
	g_sLangTxt_NoAddTestRpt          = _T("没有添加测试报告");
	g_sLangID_OneTestRpt           = _T("sOneTestRpt");
	g_sLangTxt_OneTestRpt          = _T("只添加了一个测试报告");
	g_sLangID_NoSelPrtcTem           = _T("sNoSelPrtcTem");
	g_sLangTxt_NoSelPrtcTem          = _T("装置报告列表第【%d】没有选择规约模板");
	g_sLangID_NoSelFile           = _T("sNoSelFile");
	g_sLangTxt_NoSelFile          = _T("装置报告列表第【%d】没有选择点表文件");
	g_sLangID_NameSame           = _T("sNameSame");
	g_sLangTxt_NameSame          = _T("装置报告列表第【%d】与第【%d】名称【%s】相同");
	g_sLangID_PrtcSame           = _T("sPrtcSame");
	g_sLangTxt_PrtcSame          = _T("装置报告列表第【%d】与第【%d】规约模板【%s】相同");
	g_sLangID_IPSame           = _T("sIPSame");
	g_sLangTxt_IPSame          = _T("装置报告列表第【%d】与第【%d】IP【%s】相同");
	g_sLangID_ToolTip_32781           = _T("sToolTip_32781");
	g_sLangTxt_ToolTip_32781          = _T("打开报告\n打开报告");
	g_sLangID_ToolTip_32782           = _T("sToolTip_32782");
	g_sLangTxt_ToolTip_32782          = _T("关闭任务\n关闭任务");
	g_sLangID_ToolTip_32783           = _T("sToolTip_32783");
	g_sLangTxt_ToolTip_32783          = _T("恢复到未完成的状态\n恢复到未完成的状态");
	g_sLangID_ToolTip_32784           = _T("sToolTip_32784");
	g_sLangTxt_ToolTip_32784          = _T("显示报告对应的模板\n显示报告对应的模板");
	g_sLangID_ToolTip_32775           = _T("sToolTip_32775");
	g_sLangTxt_ToolTip_32775          = _T("导出任务报告\n导出任务报告");
	g_sLangID_ToolTip_32776           = _T("sToolTip_32776");
	g_sLangTxt_ToolTip_32776          = _T("添加报告\n添加报告");
	g_sLangID_ToolTip_32777           = _T("sToolTip_32777");
	g_sLangTxt_ToolTip_32777          = _T("删除报告\n删除报告");
	g_sLangID_ToolTip_32778           = _T("sToolTip_32778");
	g_sLangTxt_ToolTip_32778          = _T("上移报告\n上移报告");
	g_sLangID_ToolTip_32779           = _T("sToolTip_32779");
	g_sLangTxt_ToolTip_32779          = _T("下移报告\n下移报告");
	//g_sLangID_Menu_57634 = _T("sMenu_57634");
	//g_sLangTxt_Menu_57634 = _T("复制(&C)");
	//g_sLangID_Menu_57632 = _T("sMenu_57632");
	//g_sLangTxt_Menu_57632 = _T("清除(&C)");

	g_sLangID_ToolTip_32789 = _T("sToolTip_32789");
	g_sLangTxt_ToolTip_32789 = _T("拼接任务报告\n拼接任务报告");

	g_sLangID_StitchRptFinish = _T("sStitchRptFinish");
	g_sLangTxt_StitchRptFinish = _T("拼接任务报告完成");


	//2016-12-10
	g_sLangID_ToolTip_2000 = _T("sToolTip_2000");
	g_sLangTxt_ToolTip_2000 = _T("新建测试任务\n测试任务");
	g_sLangID_ToolTip_32786 = _T("sToolTip_32786");
	g_sLangTxt_ToolTip_32786 = _T("新建多装置测试报告\n新建多装置测试");
	g_sLangID_ToolTip_32788 = _T("sToolTip_32788");
	g_sLangTxt_ToolTip_32788 = _T("新建单装置多规约测试\n新建单装置多规约测试");
	g_sLangID_ToolTip_2001 = _T("sToolTip_2001");
	g_sLangTxt_ToolTip_2001 = _T("新建子模板测试\n新建子模板测试");
	g_sLangID_ToolTip_32785 = _T("sToolTip_32785");
	g_sLangTxt_ToolTip_32785 = _T("新建报告\n新建报告");
	g_sLangID_ToolTip_351 = _T("sToolTip_351");
	g_sLangTxt_ToolTip_351 = _T("开始任务测试\n开始任务");
	g_sLangID_ToolTip_314 = _T("sToolTip_314");
	g_sLangTxt_ToolTip_314 = _T("开始报告\n开始报告");
	g_sLangID_ToolTip_320 = _T("sToolTip_320");
	g_sLangTxt_ToolTip_320 = _T("打印报告\n打印报告");
	g_sLangID_ToolTip_330 = _T("sToolTip_330");
	g_sLangTxt_ToolTip_330 = _T("系统配置\n系统配置");
	g_sLangID_ToolTip_358 = _T("sToolTip_358");
	g_sLangTxt_ToolTip_358 = _T("测试仪选择\n测试仪选择");
	g_sLangID_ToolTip_347 = _T("sToolTip_347");
	g_sLangTxt_ToolTip_347 = _T("录波配置\n录波配置");
	g_sLangID_ToolTip_310 = _T("sToolTip_310");
	g_sLangTxt_ToolTip_310 = _T("输出窗口\n输出窗口");
	g_sLangID_ToolTip_348 = _T("sToolTip_348");
	g_sLangTxt_ToolTip_348 = _T("文件管理栏\n文件管理栏");
	g_sLangID_ToolTip_349 = _T("sToolTip_349");
	g_sLangTxt_ToolTip_349 = _T("测试信息栏\n测试信息栏");
	g_sLangID_ToolTip_350 = _T("sToolTip_350");
	g_sLangTxt_ToolTip_350 = _T("测试任务栏\n测试任务栏");
	g_sLangID_ToolTip_357 = _T("sToolTip_357");
	g_sLangTxt_ToolTip_357 = _T("显示测试信息\n显示测试信息");

	//shaolei 2024-3-25
	g_sLangID_GbDevice = _T("sGbDevice");
	g_sLangTxt_GbDevice = _T("设备");
	g_sLangID_SysParaCfg = _T("sSysParaCfg");
	g_sLangTxt_SysParaCfg = _T("系统参数配置");
	g_sLangID_ChMapsConfig = _T("sChMapsConfig");
	g_sLangTxt_ChMapsConfig = _T("硬件通道映射");
	g_sLangID_Iec61850Cfg = _T("sIec61850Cfg");
	g_sLangTxt_Iec61850Cfg = _T("IEC61850配置");
	g_sLangID_BeforeTest = _T("sBeforeTest");
	g_sLangTxt_BeforeTest = _T("测试前准备");
	g_sLangID_NotTest = _T("sNotTest");
	g_sLangTxt_NotTest = _T("未测试");
	g_sLangID_RsltEvaluation = _T("sRsltEvaluation");
	g_sLangTxt_RsltEvaluation = _T("结果评估");
	g_sLangID_TSet = _T("sTSet");
	g_sLangTxt_TSet = _T("动作时间整定值(s)");
	g_sLangID_USet = _T("sUSet");
	g_sLangTxt_USet = _T("电压整定动作值(V)");
	g_sLangID_ISet = _T("sISet");
	g_sLangTxt_ISet = _T("电流整定动作值(A)");
	g_sLangID_AngleSet = _T("sAngleSet");
	g_sLangTxt_AngleSet = _T("相位整定动作值(°)");
	g_sLangID_HzSet = _T("sHzSet");
	g_sLangTxt_HzSet = _T("频率整定动作值(Hz)");
	g_sLangID_ReturnCoefSet = _T("sReturnCoefSet");
	g_sLangTxt_ReturnCoefSet = _T("返回系数整定值");
	g_sLangID_MaxAngleSet = _T("sMaxAngleSet");
	g_sLangTxt_MaxAngleSet = _T("最大灵敏角整定值(°)");
	g_sLangID_AngleFSet = _T("sAngleFSet");
	g_sLangTxt_AngleFSet = _T("边界角1整定值(°)");
	g_sLangID_AngleSSet = _T("sAngleSSet");
	g_sLangTxt_AngleSSet = _T("边界角2整定值(°)");
	g_sLangID_T_AbsErr_Max = _T("sT_AbsErr_Max");
	g_sLangTxt_T_AbsErr_Max = _T("动作时间绝对误差最大值(ms)");
	g_sLangID_T_AbsErr_Min = _T("sT_AbsErr_Min");
	g_sLangTxt_T_AbsErr_Min = _T("动作时间绝对误差最小值(ms)");
	g_sLangID_T_RelErr_Max = _T("sT_RelErr_Max");
	g_sLangTxt_T_RelErr_Max = _T("动作时间相对误差最大值(%)");
	g_sLangID_T_RelErr_Min = _T("sT_RelsErr_Min");
	g_sLangTxt_T_RelErr_Min = _T("动作时间相对误差最小值(%)");
	g_sLangID_U_AbsErr_Max = _T("sU_AbsErr_Max");
	g_sLangTxt_U_AbsErr_Max = _T("电压动作值绝对误差最大值(V)");
	g_sLangID_U_AbsErr_Min = _T("sU_AbsErr_Min");
	g_sLangTxt_U_AbsErr_Min = _T("电压动作值绝对误差最小值(V)");
	g_sLangID_U_RelErr_Max = _T("sU_RelErr_Max");
	g_sLangTxt_U_RelErr_Max = _T("电压动作值相对误差最大值(%)");
	g_sLangID_U_RelErr_Min = _T("sU_RelsErr_Min");
	g_sLangTxt_U_RelErr_Min = _T("电压动作值相对误差最小值(%)");
	g_sLangID_I_AbsErr_Max = _T("sI_AbsErr_Max");
	g_sLangTxt_I_AbsErr_Max = _T("电流动作值绝对误差最大值(A)");
	g_sLangID_I_AbsErr_Min = _T("sI_AbsErr_Min");
	g_sLangTxt_I_AbsErr_Min = _T("电流动作值绝对误差最小值(A)");
	g_sLangID_I_RelErr_Max = _T("sI_RelErr_Max");
	g_sLangTxt_I_RelErr_Max = _T("电流动作值相对误差最大值(%)");
	g_sLangID_I_RelErr_Min = _T("sI_RelsErr_Min");
	g_sLangTxt_I_RelErr_Min = _T("电流动作值相对误差最小值(%)");
	g_sLangID_Angle_AbsErr_Max = _T("sAngle_AbsErr_Max");
	g_sLangTxt_Angle_AbsErr_Max = _T("相位动作值绝对误差最大值(°)");
	g_sLangID_Angle_AbsErr_Min = _T("sAngle_AbsErr_Min");
	g_sLangTxt_Angle_AbsErr_Min = _T("相位动作值绝对误差最小值(°)");
	g_sLangID_Hz_AbsErr_Max = _T("sHz_AbsErr_Max");
	g_sLangTxt_Hz_AbsErr_Max = _T("频率动作值绝对误差最大值(Hz)");
	g_sLangID_Hz_AbsErr_Min = _T("sHz_AbsErr_Min");
	g_sLangTxt_Hz_AbsErr_Min = _T("频率动作值绝对误差最小值(Hz)");
	g_sLangID_RetCoef_AbsErr_Max = _T("sRetCoef_AbsErr_Max");
	g_sLangTxt_RetCoef_AbsErr_Max = _T("返回系数绝对误差最大值");
	g_sLangID_RetCoef_AbsErr_Min = _T("sRetCoef_AbsErr_Min");
	g_sLangTxt_RetCoef_AbsErr_Min = _T("返回系数绝对误差最小值");
	g_sLangID_MaxAngle_AbsErr_Max = _T("sMaxAngle_AbsErr_Max");
	g_sLangTxt_MaxAngle_AbsErr_Max = _T("最大灵敏角绝对误差最大值(°)");
	g_sLangID_MaxAngle_AbsErr_Min = _T("sMaxAngle_AbsErr_Min");
	g_sLangTxt_MaxAngle_AbsErr_Min = _T("最大灵敏角绝对误差最小值(°)");
	g_sLangID_AngleF_AbsErr_Max = _T("sAngleF_AbsErr_Max");
	g_sLangTxt_AngleF_AbsErr_Max = _T("边界角1绝对误差最大值(°)");
	g_sLangID_AngleF_AbsErr_Min = _T("sAngleF_AbsErr_Min");
	g_sLangTxt_AngleF_AbsErr_Min = _T("边界角1绝对误差最小值(°)");
	g_sLangID_AngleS_AbsErr_Max = _T("sAngleS_AbsErr_Max");
	g_sLangTxt_AngleS_AbsErr_Max = _T("边界角2绝对误差最大值(°)");
	g_sLangID_AngleS_AbsErr_Min = _T("sAngleS_AbsErr_Min");
	g_sLangTxt_AngleS_AbsErr_Min = _T("边界角2角绝对误差最小值(°)");
	g_sLangID_T_Act = _T("sT_Act");
	g_sLangTxt_T_Act = _T("动作时间(s)");
	g_sLangID_T_ErrRel = _T("sT_ErrRel");
	g_sLangTxt_T_ErrRel = _T("动作时间相对误差限(%)");
	g_sLangID_T_ErrAbs = _T("sT_ErrAbs");
	g_sLangTxt_T_ErrAbs = _T("动作时间绝对误差限(s)");
	g_sLangID_T_RelErr = _T("sT_RelErr");
	g_sLangTxt_T_RelErr = _T("动作时间相对误差值(%)");
	g_sLangID_T_AbsErr = _T("sT_AbsErr");
	g_sLangTxt_T_AbsErr = _T("动作时间绝对误差值(ms)");
	g_sLangID_U_RelErr = _T("sU_RelErr");
	g_sLangTxt_U_RelErr = _T("电压动作值相对误差值(%)");
	g_sLangID_U_AbsErr = _T("sU_AbsErr");
	g_sLangTxt_U_AbsErr = _T("电压动作值绝对误差值(V)");
	g_sLangID_U_ErrRel = _T("sU_ErrRel");
	g_sLangTxt_U_ErrRel = _T("电压动作值相对误差限(%)");
	g_sLangID_U_ErrAbs = _T("sU_ErrAbs");
	g_sLangTxt_U_ErrAbs = _T("电压动作值绝对误差限(V)");
	g_sLangID_U_Act = _T("sU_Act");
	g_sLangTxt_U_Act = _T("电压动作值(V)");
	g_sLangID_I_RelErr = _T("sI_RelErr");
	g_sLangTxt_I_RelErr = _T("电流动作值相对误差值(%)");
	g_sLangID_I_AbsErr = _T("sI_AbsErr");
	g_sLangTxt_I_AbsErr = _T("电流动作值绝对误差值(A)");
	g_sLangID_I_ErrRel = _T("sI_ErrRel");
	g_sLangTxt_I_ErrRel = _T("电流动作值相对误差限(%)");
	g_sLangID_I_ErrAbs = _T("sI_ErrAbs");
	g_sLangTxt_I_ErrAbs = _T("电流动作值绝对误差限(A)");
	g_sLangID_I_Act = _T("sI_Act");
	g_sLangTxt_I_Act = _T("电流动作值(A)");
	g_sLangID_Angle_RelErr = _T("sAngle_RelErr");
	g_sLangTxt_Angle_RelErr = _T("相位动作值相对误差值(%)");
	g_sLangID_Angle_AbsErr = _T("sAngle_AbsErr");
	g_sLangTxt_Angle_AbsErr = _T("相位动作值绝对误差值(°)");
	g_sLangID_Angle_ErrRel = _T("sAngle_ErrRel");
	g_sLangTxt_Angle_ErrRel = _T("相位动作值相对误差限(%)");
	g_sLangID_Angle_ErrAbs = _T("sAngle_ErrAbs");
	g_sLangTxt_Angle_ErrAbs = _T("相位动作值绝对误差限(°)");
	g_sLangID_Angle_Act = _T("sAngle_Act");
	g_sLangTxt_Angle_Act = _T("相位动作值(°)");
	g_sLangID_Hz_RelErr = _T("sHz_RelErr");
	g_sLangTxt_Hz_RelErr = _T("频率动作值相对误差值(%)");
	g_sLangID_Hz_AbsErr = _T("sHz_AbsErr");
	g_sLangTxt_Hz_AbsErr = _T("频率动作值绝对误差值(Hz)");
	g_sLangID_Hz_ErrRel = _T("sHz_ErrRel");
	g_sLangTxt_Hz_ErrRel = _T("频率动作值相对误差限(%)");
	g_sLangID_Hz_ErrAbs = _T("sHz_ErrAbs");
	g_sLangTxt_Hz_ErrAbs = _T("频率动作值绝对误差限(Hz)");
	g_sLangID_Hz_Act = _T("sHz_Act");
	g_sLangTxt_Hz_Act = _T("频率动作值(Hz)");
	g_sLangID_ReturnCoef_AbsErr = _T("sReturnCoef_AbsErr");
	g_sLangTxt_ReturnCoef_AbsErr = _T("返回系数绝对误差值");
	g_sLangID_ReturnCoef_ErrAbs = _T("sReturnCoef_ErrAbs");
	g_sLangTxt_ReturnCoef_ErrAbs = _T("返回系数绝对误差限");
	g_sLangID_ReturnCoef_Act = _T("sReturnCoef_Act");
	g_sLangTxt_ReturnCoef_Act = _T("返回系数");
	g_sLangID_MaxAngle_AbsErr = _T("sMaxAngle_AbsErr");
	g_sLangTxt_MaxAngle_AbsErr = _T("最大灵敏角值绝对误差值(°)");
	g_sLangID_MaxAngle_ErrAbs = _T("sMaxAngle_ErrAbs");
	g_sLangTxt_MaxAngle_ErrAbs = _T("最大灵敏角绝对误差限(°)");
	g_sLangID_AngleF_AbsErr = _T("sAngleF_AbsErr");
	g_sLangTxt_AngleF_AbsErr = _T("边界角1值绝对误差值(°)");
	g_sLangID_AngleF_ErrAbs = _T("sAngleF_ErrAbs");
	g_sLangTxt_AngleF_ErrAbs = _T("边界角1绝对误差限(°)");
	g_sLangID_AngleS_AbsErr = _T("sAngleS_AbsErr");
	g_sLangTxt_AngleS_AbsErr = _T("边界角2值绝对误差值(°)");
	g_sLangID_AngleS_ErrAbs = _T("sAngleS_ErrAbs");
	g_sLangTxt_AngleS_ErrAbs = _T("边界角2绝对误差限(°)");
	g_sLangID_ReadAin = _T("sReadAin");
	g_sLangTxt_ReadAin = _T("读遥测");
	g_sLangID_WriteSetting = _T("sWriteSetting");
	g_sLangTxt_WriteSetting = _T("修改定值");
	g_sLangID_WriteEna = _T("sWriteEna");
	g_sLangTxt_WriteEna = _T("投退压板");
	g_sLangID_Reset = _T("sReset");
	g_sLangTxt_Reset = _T("-复归态");
	g_sLangID_BeforeTestGrp = _T("sBeforeTestGrp");
	g_sLangTxt_BeforeTestGrp = _T("测试前_后组合");
	g_sLangID_ImportDvm = _T("sImportDvm");
	g_sLangTxt_ImportDvm = _T("导入模型");
	g_sLangID_BeforeComm = _T("sBeforeComm");
	g_sLangTxt_BeforeComm = _T("通信前准备");
	g_sLangID_AfterComm = _T("sAfterComm");
	g_sLangTxt_IAfterComm = _T("通信后恢复");

	//add 2024-8-27
	g_sLangID_SpowerSet = _T("sSpowerSet");
	g_sLangTxt_SpowerSet = _T("视在功率整定动作值(VA)");
	g_sLangID_Spower_RelErr = _T("sSpower_ErrRel"); 
	g_sLangTxt_Spower_RelErr = _T("视在功率相对误差值(%)");
	g_sLangID_Spower_AbsErr = _T("sSpower_AbsErr");
	g_sLangTxt_Spower_AbsErr = _T("视在功率绝对误差值(VA)");
	g_sLangID_Spower_ErrRel = _T("sSpower_ErrRel");
	g_sLangTxt_Spower_ErrRel = _T("视在功率相对误差限(%)");
	g_sLangID_Spower_ErrAbs = _T("sSpower_ErrAbs");
	g_sLangTxt_Spower_ErrAbs = _T("视在功率绝对误差限(VA)");
	g_sLangID_PpowerSet = _T("sPpowerSet");
	g_sLangTxt_PpowerSet = _T("有功功率整定动作值(W)");
	g_sLangID_Ppower_RelErr = _T("sPpower_RelErr");
	g_sLangTxt_Ppower_RelErr = _T("有功功率相对误差值(%)");
	g_sLangID_Ppower_AbsErr = _T("sPpower_AbsErr");
	g_sLangTxt_Ppower_AbsErr = _T("有功功率绝对误差值(W)");
	g_sLangID_Ppower_ErrRel = _T("sPpower_ErrRel");
	g_sLangTxt_Ppower_ErrRel = _T("有功功率相对误差限(%)");
	g_sLangID_Ppower_ErrAbs = _T("sPpower_ErrAbs");
	g_sLangTxt_Ppower_ErrAbs = _T("有功功率绝对误差限(W)");
	g_sLangID_QpowerSet = _T("sQpowerSet");
	g_sLangTxt_QpowerSet = _T("无功功率整定动作值(Var)");
	g_sLangID_Qpower_RelErr = _T("sQpower_RelErr");
	g_sLangTxt_Qpower_RelErr = _T("无功功率相对误差值(%)");
	g_sLangID_Qpower_AbsErr = _T("sQpower_AbsErr");
	g_sLangTxt_Qpower_AbsErr = _T("无功功率绝对误差值(Var)");
	g_sLangID_Qpower_ErrRel = _T("sQpower_ErrRel");
	g_sLangTxt_Qpower_ErrRel = _T("无功功率相对误差限(%)");
	g_sLangID_Qpower_ErrAbs = _T("sQpower_ErrAbs");
	g_sLangTxt_Qpower_ErrAbs = _T("无功功率绝对误差限(Var)");
	g_sLangID_Spower_AbsErr_Max = _T("sSpower_AbsErr_Max");
	g_sLangTxt_Spower_AbsErr_Max = _T("视在功率绝对误差最大值(VA)");
	g_sLangID_Spower_RelErr_Max = _T("sSpower_RelErr_Max");
	g_sLangTxt_Spower_RelErr_Max = _T("视在功率相对误差最大值(%)");
	g_sLangID_Spower_AbsErr_Min = _T("sSpower_AbsErr_Min");
	g_sLangTxt_Spower_AbsErr_Min = _T("视在功率绝对误差最小值(VA)");
	g_sLangID_Spower_RelErr_Min = _T("sSpower_RelErr_Min");
	g_sLangTxt_Spower_RelErr_Min = _T("视在功率相对误差最小值(%)");
	g_sLangID_Ppower_AbsErr_Max = _T("sPpower_AbsErr_Max");
	g_sLangTxt_Ppower_AbsErr_Max = _T("有功功率绝对误差最大值(W)");
	g_sLangID_Ppower_RelErr_Max = _T("sPpower_RelErr_Max");
	g_sLangTxt_Ppower_RelErr_Max = _T("有功功率相对误差最大值(%)");
	g_sLangID_Ppower_AbsErr_Min = _T("sPpower_AbsErr_Min");
	g_sLangTxt_Ppower_AbsErr_Min = _T("有功功率绝对误差最小值(W)");
	g_sLangID_Ppower_RelErr_Min = _T("sPpower_RelErr_Min");
	g_sLangTxt_Ppower_RelErr_Min = _T("有功功率相对误差最小值(%)");
	g_sLangID_Qpower_AbsErr_Max = _T("sQpower_AbsErr_Max");
	g_sLangTxt_Qpower_AbsErr_Max = _T("无功功率绝对误差最大值(Var)");
	g_sLangID_Qpower_RelErr_Max = _T("sQpower_RelErr_Max");
	g_sLangTxt_Qpower_RelErr_Max = _T("无功功率相对误差最大值(%)");
	g_sLangID_Qpower_AbsErr_Min = _T("sQpower_AbsErr_Min");
	g_sLangTxt_Qpower_AbsErr_Min = _T("无功功率绝对误差最小值(Var)");
	g_sLangID_Qpower_RelErr_Min = _T("sQpower_RelErr_Min");
	g_sLangTxt_Qpower_RelErr_Min = _T("无功功率相对误差最小值(%)");
	g_sLangID_ImpAngleSet = _T("sImpAngleSet");
	g_sLangTxt_ImpAngleSet = _T("阻抗角整定动作值(°)");
	g_sLangID_ImpAngle_RelErr = _T("sImpAngle_RelErr");
	g_sLangTxt_ImpAngle_RelErr = _T("阻抗角动作值相对误差值(%)");
	g_sLangID_ImpAngle_AbsErr = _T("sImpAngle_AbsErr");
	g_sLangTxt_ImpAngle_AbsErr = _T("阻抗角动作值绝对误差值(°)");
	g_sLangID_ImpAngle_ErrRel = _T("sImpAngle_ErrRel");
	g_sLangTxt_ImpAngle_ErrRel = _T("阻抗角动作值相对误差限(%)");
	g_sLangID_ImpAngle_ErrAbs = _T("sImpAngle_ErrAbs");
	g_sLangTxt_ImpAngle_ErrAbs = _T("阻抗角动作值绝对误差限(°)");
	g_sLangID_ShortZImp = _T("sShortZImp");
	g_sLangTxt_ShortZImp = _T("短路阻抗整定动作值(Ω)");
	g_sLangID_ShortZImp_RelErr = _T("sShortZImp_RelErr");
	g_sLangTxt_ShortZImp_RelErr = _T("短路阻抗动作值相对误差值(%)");
	g_sLangID_ShortZImp_AbsErr = _T("sShortZImp_AbsErr");
	g_sLangTxt_ShortZImp_AbsErr = _T("短路阻抗动作值绝对误差值(Ω)");
	g_sLangID_ShortZImp_ErrRel = _T("sShortZImp_ErrRel");
	g_sLangTxt_ShortZImp_ErrRel = _T("短路阻抗动作值相对误差限(%)");
	g_sLangID_ShortZImp_ErrAbs = _T("sShortZImp_ErrAbs");
	g_sLangTxt_ShortZImp_ErrAbs = _T("短路阻抗动作值绝对误差限(Ω)");
	g_sLangID_ImpAngle_AbsErr_Max = _T("sImpAngle_AbsErr_Max");
	g_sLangTxt_ImpAngle_AbsErr_Max = _T("阻抗角动作值绝对误差最大值(°)");
	g_sLangID_ImpAngle_RelErr_Max = _T("sImpAngle_RelErr_Max");
	g_sLangTxt_ImpAngle_RelErr_Max = _T("阻抗角动作值相对误差最大值(%)");
	g_sLangID_ImpAngle_AbsErr_Min = _T("sImpAngle_AbsErr_Min");
	g_sLangTxt_ImpAngle_AbsErr_Min = _T("阻抗角动作值绝对误差最小值(°)");
	g_sLangID_ImpAngle_RelErr_Min = _T("sImpAngle_RelErr_Min");
	g_sLangTxt_ImpAngle_RelErr_Min = _T("阻抗角动作值相对误差最小值(%)");
	g_sLangID_ShortZImp_AbsErr_Max = _T("sShortZImp_AbsErr_Max");
	g_sLangTxt_ShortZImp_AbsErr_Max = _T("短路阻抗动作值绝对误差最大值(A)");
	g_sLangID_ShortZImp_RelErr_Max = _T("sShortZImp_RelErr_Max");
	g_sLangTxt_ShortZImp_RelErr_Max = _T("短路阻抗动作值相对误差最大值(%)");
	g_sLangID_ShortZImp_AbsErr_Min = _T("sShortZImp_AbsErr_Min");
	g_sLangTxt_ShortZImp_AbsErr_Min = _T("短路阻抗动作值绝对误差最小值(A)");
	g_sLangID_ShortZImp_RelErr_Min = _T("sShortZImp_RelErr_Min");
	g_sLangTxt_ShortZImp_RelErr_Min = _T("短路阻抗动作值相对误差最小值(%)");
	g_sLangID_Hz_RelErr_Max = _T("sHz_RelErr_Max");
	g_sLangTxt_Hz_RelErr_Max = _T("频率动作值相对误差最大值(%)");
	g_sLangID_Hz_RelErr_Min = _T("sHz_RelErr_Min");
	g_sLangTxt_Hz_RelErr_Min = _T("频率动作值相对误差最小值(%)");
	g_sLangID_T_ErrAbsPos = _T("sT_ErrAbsPos");
	g_sLangTxt_T_ErrAbsPos = _T("动作时间正绝对误差限(s)");
	g_sLangID_T_ErrAbsNeg = _T("sT_ErrAbsNeg");
	g_sLangTxt_T_ErrAbsNeg = _T("动作时间负绝对误差限(s)");
}

// CString g_sLangID_Login                    ;  //= _T("sLogin");
// CString g_sLangTxt_Login                   ;  //= _T("登录");
CString g_sLangID_AutoTestVTip             ;  //= _T("sAutoTestVTip");
CString g_sLangTxt_AutoTestVTip            ;  //= _T("智能自动测试系统V1.0");
// CString g_sLangID_FileOpen                 ;  //= _T("sFileOpen");
// CString g_sLangTxt_FileOpen                ;  //= _T("打开（&O）");
CString g_sLangID_FileOpenTip              ;  //= _T("sFileOpenTip");
CString g_sLangTxt_FileOpenTip             ;  //= _T("打开现有文档\n打开");
CString g_sLangID_RibbonRecentDocs         ;  //= _T("sRibbonRecentDocs");
CString g_sLangTxt_RibbonRecentDocs        ;  //= _T("最近使用的文档");
CString g_sLangID_Config                   ;  //= _T("sConfig");
CString g_sLangTxt_Config                  ;  //= _T("系统配置");
CString g_sLangID_AutoTestOper             ;  //= _T("sAutoTestOper");
CString g_sLangTxt_AutoTestOper            ;  //= _T("自动测试操作");
// CString g_sLangID_UpLoad                   ;  //= _T("sUpLoad");
// CString g_sLangTxt_UpLoad                  ;  //= _T("上传");
// CString g_sLangID_DownLoad                 ;  //= _T("sDownLoad");
// CString g_sLangTxt_DownLoad                ;  //= _T("下载");
CString g_sLangID_NewTest                  ;  //= _T("sNewTest");
CString g_sLangTxt_NewTest                 ;  //= _T("新建测试");
CString g_sLangID_NewTestWork              ;  //= _T("sNewTestWork");
CString g_sLangTxt_NewTestWork             ;  //= _T("新建测试任务");
CString g_sLangID_MultiDevTest             ;  //= _T("sMultiDevTest");
CString g_sLangTxt_MultiDevTest            ;  //= _T("多装置测试");
CString g_sLangID_SinDevMulPro             ;  //= _T("sSinDevMulPro");
CString g_sLangTxt_SinDevMulPro            ;  //= _T("单装置多规约");
CString g_sLangID_MdvMgrpTest             ;  //= _T("sMdvMgrp");
CString g_sLangTxt_MdvMgrpTest            ;  //= _T("多装置多组");
CString g_sLangID_SubTempTest              ;  //= _T("sSubTempTest");
CString g_sLangTxt_SubTempTest             ;  //= _T("子模板测试");
CString g_sLangID_SingleDevTest            ;  //= _T("sSingleDevTest");
CString g_sLangTxt_SingleDevTest           ;  //= _T("单装置测试");
CString g_sLangID_UsePowerTestTemplate            ;  //= _T("sUsePowerTestTemplate");
CString g_sLangTxt_UsePowerTestTemplate           ;  //= _T("PowerTest模板");
CString g_sLangID_Test                     ;  //= _T("sTest");
CString g_sLangTxt_Test                    ;  //= _T("测试");
CString g_sLangID_Stop                     ;  //= _T("sStop");
CString g_sLangTxt_Stop                    ;  //= _T("停止");
CString g_sLangID_ShowScale                ;  //= _T("sShowScale");
CString g_sLangTxt_ShowScale               ;  //= _T("显示比例");
CString g_sLangID_AdReport                 ;  //= _T("sAdReport");
CString g_sLangTxt_AdReport                ;  //= _T("调整报告");
CString g_sLangID_PrintReport              ;  //= _T("sPrintReport");
CString g_sLangTxt_PrintReport             ;  //= _T("打印报告");
CString g_sLangID_Settings                 ;  //= _T("sSettings");
CString g_sLangTxt_Settings                ;  //= _T("配置");
CString g_sLangID_ReConfig                 ;  //= _T("sReConfig");
CString g_sLangTxt_ReConfig                ;  //= _T("录波配置");
// CString g_sLangID_View                     ;  //= _T("sView");
// CString g_sLangTxt_View                    ;  //= _T("视图");
// CString g_sLangID_StatusBarTip             ;  //= _T("sStatusBarTip");
// CString g_sLangTxt_StatusBarTip            ;  //= _T("显示或隐藏状态栏\n切换状态栏");
CString g_sLangID_OutpWind                 ;  //= _T("sOutpWind");
CString g_sLangTxt_OutpWind                ;  //= _T("输出窗口");
CString g_sLangID_FileManBar               ;  //= _T("sFileManBar");
CString g_sLangTxt_FileManBar              ;  //= _T("文件管理栏");
CString g_sLangID_TestInfBar               ;  //= _T("sTestInfBar");
CString g_sLangTxt_TestInfBar              ;  //= _T("测试信息栏");
CString g_sLangID_SdvMgrpReTest               ;  //= _T("sSdvMgrpReTest");
CString g_sLangTxt_SdvMgrpReTest              ;  //= _T("单装置多组重测模式");
CString g_sLangID_TestTaskBar              ;  //= _T("sTestTaskBar");
CString g_sLangTxt_TestTaskBar             ;  //= _T("测试任务栏");
CString g_sLangID_CharCurTest              ;  //= _T("sCharCurTest");
CString g_sLangTxt_CharCurTest             ;  //= _T("特性曲线测试");
CString g_sLangID_ShowTestInf              ;  //= _T("sShowTestInf");
CString g_sLangTxt_ShowTestInf             ;  //= _T("显示测试信息");
CString g_sLangID_ShowTestSpyWnd             ;  //= _T("sShowTestSpyWnd");
CString g_sLangTxt_ShowTestSpyWnd             ;  //= _T("测试监视窗口");
CString g_sLangID_WriteLogFile             ;  //= _T("sWriteLogFile");
CString g_sLangTxt_WriteLogFile             ;  //= _T("日志文件");
CString g_sLangID_ViewWordRpt             ;  //= _T("sViewWordRpt");
CString g_sLangTxt_ViewWordRpt             ;  //= _T("多报告时显示Word");
// CString g_sLangID_AboutTip                 ;  //= _T("sAboutTip");
// CString g_sLangTxt_AboutTip                ;  //= _T("显示程序信息、版本号和版权\n关于");
CString g_sLangID_ToAndCom                 ;  //= _T("sToAndCom");
CString g_sLangTxt_ToAndCom                ;  //= _T("工具和命令");
CString g_sLangID_SysTools                 ;  //= _T("sSysTools");
CString g_sLangTxt_SysTools                ;  //= _T("系统工具");
CString g_sLangID_SysCom                   ;  //= _T("sSysCom");
CString g_sLangTxt_SysCom                  ;  //= _T("系统命令");
CString g_sLangID_TestFileMan              ;  //= _T("sTestFileMan");
CString g_sLangTxt_TestFileMan             ;  //= _T("测试文件管理");
CString g_sLangID_TestItemField            ;  //= _T("sTestItemField");
CString g_sLangTxt_TestItemField           ;  //= _T("测试项目栏");
CString g_sLangID_ReportAdjSh              ;  //= _T("sReportAdjSh");
CString g_sLangTxt_ReportAdjSh             ;  //= _T("报告调整提示");
CString g_sLangID_TestChoPro               ;  //= _T("sTestChoPro");
CString g_sLangTxt_TestChoPro              ;  //= _T("测试仪选择（测试仪器选择改变，需重新启动自动测试程序才能是改变生效）");
CString g_sLangID_AutoTestSysSet           ;  //= _T("sAutoTestSysSet");
CString g_sLangTxt_AutoTestSysSet          ;  //= _T("自动测试系统配置");
CString g_sLangID_AlarmAutoMain            ;  //= _T("sAlarmAutoMain");
CString g_sLangTxt_AlarmAutoMain           ;  //= _T("警告—自动测试主程序");
CString g_sLangID_TestInf            ;  //= _T("sTestInf");
CString g_sLangTxt_TestInf           ;  //= _T("实验信息");
CString g_sLangID_TaskName           ;  //= _T("sTaskName");
CString g_sLangTxt_TaskName          ;  //= _T("任务名称");
CString g_sLangID_TestType           ;  //= _T("sTestType");
CString g_sLangTxt_TestType          ;  //= _T("实验类型");
CString g_sLangID_ProSet             ;  //= _T("sProSet");
CString g_sLangTxt_ProSet            ;  //= _T("规约设置");
CString g_sLangID_PoFile             ;  //= _T("sPoFile");
CString g_sLangTxt_PoFile            ;  //= _T("点表文件");
CString g_sLangID_ChoTest            ;  //= _T("sChoTest");
CString g_sLangTxt_ChoTest           ;  //= _T("选择测试模板");
CString g_sLangID_ChoProTem          ;  //= _T("sChoProTem");
CString g_sLangTxt_ChoProTem         ;  //= _T("选择规约模板");
CString g_sLangID_SelPoFile          ;  //= _T("sSelPoFile");
CString g_sLangTxt_SelPoFile         ;  //= _T("选择点表文件");
CString g_sLangID_TitleTask          ;  //= _T("sTitleTask");
CString g_sLangTxt_TitleTask         ;  //= _T("测试任务");
CString g_sLangID_NewBuilt                 ;  //= _T("sNewBuilt");
CString g_sLangTxt_NewBuilt                ;  //= _T("新建");
CString g_sLangID_TestFileName             ;  //= _T("sTestFileName");
CString g_sLangTxt_TestFileName            ;  //= _T("测试文件名");
CString g_sLangID_TesTyp                   ;  //= _T("sTesTyp");
CString g_sLangTxt_TesTyp                  ;  //= _T("测试类型");
CString g_sLangID_ProTypeCho               ;  //= _T("sProTypeCho");
CString g_sLangTxt_ProTypeCho              ;  //= _T("规约种类选择");
CString g_sLangID_TestTempFile             ;  //= _T("sTestTempFile");
CString g_sLangTxt_TestTempFile            ;  //= _T("测试模板文件");
CString g_sLangID_ProTempFile              ;  //= _T("sProTempFile");
CString g_sLangTxt_ProTempFile             ;  //= _T("规约模板文件");
CString g_sLangID_ProHighSet               ;  //= _T("sProHighSet");
CString g_sLangTxt_ProHighSet              ;  //= _T("规约高级设置");
CString g_sLangID_ProTabFile               ;  //= _T("sProTabFile");
CString g_sLangTxt_ProTabFile              ;  //= _T("规约点表文件");
CString g_sLangID_RptData                  ;  //= _T("sRptData");
CString g_sLangTxt_RptData                 ;  //= _T("报告数据");
CString g_sLangID_RptLog                  ;  //= _T("sRptLog");
CString g_sLangTxt_RptLog                 ;  //= _T("日志");
CString g_sLangID_RptData2                 ;  //= _T("sRptData2");
CString g_sLangTxt_RptData2                ;  //= _T("报告数据2");
CString g_sLangID_TestTemp                 ;  //= _T("sTestTemp");
CString g_sLangTxt_TestTemp                ;  //= _T("测试模板");
CString g_sLangID_AppTestNo                ;  //= _T("sAppTestNo");
CString g_sLangTxt_AppTestNo               ;  //= _T("出现测试不合格项目处理");
CString g_sLangID_CTestCNum                ;  //= _T("sCTestCNum");
CString g_sLangTxt_CTestCNum               ;  //= _T("重复测试项目重复次数");
CString g_sLangID_CoeMus                   ;  //= _T("sCoeMus");
CString g_sLangTxt_CoeMus                  ;  //= _T("提示音乐");
CString g_sLangID_AlarmMode                ;  //= _T("sAlarmMode");
CString g_sLangTxt_AlarmMode               ;  //= _T("告警方式");
CString g_sLangID_ContTest                 ;  //= _T("sContTest");
CString g_sLangTxt_ContTest                ;  //= _T("继续测试");
CString g_sLangID_LongAlarm                ;  //= _T("sLongAlarm");
CString g_sLangTxt_LongAlarm               ;  //= _T("长警告");
CString g_sLangID_ShortAlarm               ;  //= _T("sShortAlarm");
CString g_sLangTxt_ShortAlarm              ;  //= _T("短警告");
CString g_sLangID_CusRepeat                ;  //= _T("sCusRepeat");
CString g_sLangTxt_CusRepeat               ;  //= _T("自定义最大重复次数");
CString g_sLangID_ComFaReNu                ;  //= _T("sComFaReNu");
CString g_sLangTxt_ComFaReNu               ;  //= _T("通讯失败后重试次数");
CString g_sLangID_RetComS                  ;  //= _T("sRetComS");
CString g_sLangTxt_RetComS                 ;  //= _T("重试通讯前延时");
CString g_sLangID_TestCoDe                 ;  //= _T("sTestCoDe");
CString g_sLangTxt_TestCoDe                ;  //= _T("测试项目测试完成出来");
CString g_sLangID_CoNuShow                 ;  //= _T("sCoNuShow");
CString g_sLangTxt_CoNuShow                ;  //= _T("完成一级项目时进行提示");
CString g_sLangID_TestCoRe                 ;  //= _T("sTestCoRe");
CString g_sLangTxt_TestCoRe                ;  //= _T("测试完成，报告自动导出路径（测试模板须调用SetUploadRptFile设置导出报告文件名）");
CString g_sLangID_AdjustReportInfo             ;  //= _T("sAdjustReportInfo");
CString g_sLangTxt_AdjustReportInfo            ;  //= _T("调整报告完成如下操作：\r\n1，删除没有选择测试的项目分类报告部分\r\n2，对于没有测试的测试点，空白报告部分使用“--”替换\r\n调整部分不可以恢复，确实要调整吗？");
// CString g_sLangID_DeNoChTe                 ;  //= _T("sDeNoChTe");
// CString g_sLangTxt_DeNoChTe                ;  //= _T("1.删除没有选择测试的项目分类报告部分");
// CString g_sLangID_RepUse                   ;  //= _T("sRepUse");
// CString g_sLangTxt_RepUse                  ;  //= _T("2.对于没有测试的测试点，空白部分报告使用“——”替换");
// CString g_sLangID_AdjustSure               ;  //= _T("sAdjustSure");
// CString g_sLangTxt_AdjustSure              ;  //= _T("调整部分不可以回复，确定要调整吗？");
CString g_sLangID_StartX               ;  //= _T("sStartX");
CString g_sLangTxt_StartX              ;  //= _T("起点X");
CString g_sLangID_StartY               ;  //= _T("sStartY");
CString g_sLangTxt_StartY              ;  //= _T("起点Y");
CString g_sLangID_NowX                 ;  //= _T("sNowX");
CString g_sLangTxt_NowX                ;  //= _T("当前X");
CString g_sLangID_NowY                 ;  //= _T("sNowY");
CString g_sLangTxt_NowY                ;  //= _T("当前Y");
CString g_sLangID_EndPointX            ;  //= _T("sEndPointX");
CString g_sLangTxt_EndPointX           ;  //= _T("终点X");
CString g_sLangID_EndPointY            ;  //= _T("sEndPointY");
CString g_sLangTxt_EndPointY           ;  //= _T("终点Y");
CString g_sLangID_TestConR             ;  //= _T("sTestConR");
CString g_sLangTxt_TestConR            ;  //= _T("与测试仪控制接口程序握手，30s内握手失败，则终止进程，重新启动测试仪接口程序");
CString g_sLangID_WarningProTest       ;  //= _T("sWarningProTest");
CString g_sLangTxt_WarningProTest      ;  //= _T("程序检测到系统中有和系统相关的进程正在运行，点击“终止进程”关闭所有进程");
CString g_sLangID_NeedCloPro           ;  //= _T("sNeedCloPro");
CString g_sLangTxt_NeedCloPro          ;  //= _T("需要关闭的进程");
CString g_sLangID_SouRepPath           ;  //= _T("sSouRepPath");
CString g_sLangTxt_SouRepPath          ;  //= _T("源报告路径");
CString g_sLangID_ExportSet            ;  //= _T("sExportSet");
CString g_sLangTxt_ExportSet           ;  //= _T("导出设置");
CString g_sLangID_ExportPath           ;  //= _T("sExportPath");
CString g_sLangTxt_ExportPath          ;  //= _T("导出路径");
CString g_sLangID_ExFileName           ;  //= _T("sExFileName");
CString g_sLangTxt_ExFileName          ;  //= _T("导出文件名称");
CString g_sLangID_ChoFileModel         ;  //= _T("sChoFileModel");
CString g_sLangTxt_ChoFileModel        ;  //= _T("选择文件模型");
CString g_sLangID_RepViewRat           ;  //= _T("sRepViewRat");
CString g_sLangTxt_RepViewRat          ;  //= _T("报告显示比例");
CString g_sLangID_RepViRaCho           ;  //= _T("sRepViRaCho");
CString g_sLangTxt_RepViRaCho          ;  //= _T("报告显示比例选择");
CString g_sLangID_TestRepViRaSet       ;  //= _T("sTestRepViRaSet");
CString g_sLangTxt_TestRepViRaSet      ;  //= _T("试验报告显示比例设置");
CString g_sLangID_NoChProTem          ;  //= _T("sNoChProTem");
CString g_sLangTxt_NoChProTem         ;  //= _T("没有选择规约模板");
CString g_sLangID_NoChTestTem         ;  //= _T("sNoChTestTem");
CString g_sLangTxt_NoChTestTem        ;  //= _T("没有选择测试模板");
CString g_sLangID_ChTemplet           ;  //= _T("sChTemplet");
CString g_sLangTxt_ChTemplet          ;  //= _T("选择模板");
CString g_sLangID_ChProtocol          ;  //= _T("sChProtocol");
CString g_sLangTxt_ChProtocol         ;  //= _T("选择规约");
CString g_sLangID_SettingsChoose      ;  //= _T("sSettingsChoose");
CString g_sLangTxt_SettingsChoose     ;  //= _T("设置组选择");
CString g_sLangID_SetMulDev           ;  //= _T("sSetMulDev");
CString g_sLangTxt_SetMulDev          ;  //= _T("设置多装置");
CString g_sLangID_SetMulDevMgrp           ;  //= _T("sSetMulDevMgrp");
CString g_sLangTxt_SetMulDevMgrp          ;  //= _T("设置多装置多组");
CString g_sLangID_NoChTemFile         ;  //= _T("sNoChTemFile");
CString g_sLangTxt_NoChTemFile        ;  //= _T("没有选择模板文件");
CString g_sLangID_RepFileNameNu       ;  //= _T("sRepFileNameNu");
CString g_sLangTxt_RepFileNameNu      ;  //= _T("报告文件名为空");
CString g_sLangID_NoChTestType        ;  //= _T("sNoChTestType");
CString g_sLangTxt_NoChTestType       ;  //= _T("没有选择测试类型");
CString g_sLangID_CommSetInf          ;  //= _T("sCommSetInf");
CString g_sLangTxt_CommSetInf         ;  //= _T("通讯设置信息不全");
CString g_sLangID_TabFileNoSel        ;  //= _T("sTabFileNoSel");
CString g_sLangTxt_TabFileNoSel       ;  //= _T("点表文件没有选择");
CString g_sLangID_AlreadyExists       ;  //= _T("sAlreadyExists");
CString g_sLangTxt_AlreadyExists      ;  //= _T("%s 已经存在");
CString g_sLangID_UnquaItem           ;  //= _T("sUnquaItem");
CString g_sLangTxt_UnquaItem          ;  //= _T("不合格项目");
// CString g_sLangID_ModelFile           ;  //= _T("sModelFile");
// CString g_sLangTxt_ModelFile          ;  //= _T("模型文件");
CString g_sLangID_NoAddDevTestRep     ;  //= _T("sNoAddDevTestRep");
CString g_sLangTxt_NoAddDevTestRep    ;  //= _T("没有添加装置测试报告");
CString g_sLangID_OlAddOnRep          ;  //= _T("sOlAddOnRep");
CString g_sLangTxt_OlAddOnRep         ;  //= _T("只添加了一个装置测试报告");
CString g_sLangID_ProtocoTemplate     ;  //= _T("sProtocoTemplate");
CString g_sLangTxt_ProtocoTemplate    ;  //= _T("规约模板");
CString g_sLangID_ProtocoMatching     ;  //= _T("sProtocoMatching");
CString g_sLangTxt_ProtocoMatching    ;  //= _T("规约配型");
CString g_sLangID_ChRptRe             ;  //= _T("sChRptRe");
CString g_sLangTxt_ChRptRe            ;  //= _T("选择报告导出目标目录");
CString g_sLangID_AlOpen              ;  //= _T("sAlOpen");
CString g_sLangTxt_AlOpen             ;  //= _T("已经打开【%s】，请关闭后在创建测试报告！");
CString g_sLangID_TaskTotalTime           ;  //= _T("sTaskTotalTime");
CString g_sLangTxt_TaskTotalTime          ;  //= _T("任务总时间");
CString g_sLangID_RptTotalTime           ;  //= _T("sRptTotalTime");
CString g_sLangTxt_RptTotalTime          ;  //= _T("报告总时间");
CString g_sLangID_TestingClose           ;  //= _T("sTestingClose");
CString g_sLangTxt_TestingClose          ;  //= _T("正在测试中，不能关闭...");
CString g_sLangID_FileUnExistS           ;  //= _T("sFileUnExistS");
CString g_sLangTxt_FileUnExistS          ;  //= _T("文件\"%s\"不存在");
CString g_sLangID_SelOrCretFile           ;  //= _T("sSelOrCretFile");
CString g_sLangTxt_SelOrCretFile          ;  //= _T("文件夹【%s】包含有测试报告文件\n请选择或者创建一个空的文件夹");
CString g_sLangID_SelFilePath           ;  //= _T("sSelFilePath");
CString g_sLangTxt_SelFilePath          ;  //= _T("请选择报告文件存储的路径！");
CString g_sLangID_DelTaskYOrN           ;  //= _T("sDelTaskYOrN");
CString g_sLangTxt_DelTaskYOrN          ;  //= _T("是否要删除任务 %s 及其子项");
CString g_sLangID_SureDelAgain           ;  //= _T("sSureDelAgain");
CString g_sLangTxt_SureDelAgain          ;  //= _T("请再次确定删除");
CString g_sLangID_DelFailItem           ;  //= _T("sDelFailItem");
CString g_sLangTxt_DelFailItem          ;  //= _T("删除的任务中包含已经被打开的工程，删除失败");
CString g_sLangID_DelItemYOrN           ;  //= _T("sDelItemYOrN");
CString g_sLangTxt_DelItemYOrN          ;  //= _T("是否要删除工程 %s");
CString g_sLangID_DelFailure           ;  //= _T("sDelFailure");
CString g_sLangTxt_DelFailure          ;  //= _T("该工程已经被打开，删除失败");
CString g_sLangID_StartRptYOrN           ;  //= _T("sStartRptYOrN");
CString g_sLangTxt_StartRptYOrN          ;  //= _T("“开始报告”功能只测试当前打开的测试报告，\r\n你确实只要测试测试任务中的单个测试报告吗？\r\n\r\n选择“是”测试单个报告\r\n选择“否”开始任务测试\r\n选择“取消”终止操作");
CString g_sLangID_NewTestClear           ;  //= _T("sNewTestClear");
CString g_sLangTxt_NewTestClear          ;  //= _T("新建测试，清除当前报告数据吗？\r\n");
CString g_sLangID_SelYes           ;  //= _T("sSelYes");
CString g_sLangTxt_SelYes          ;  //= _T("选择“是”，清除当前报告数据，新建测试\r\n");
CString g_sLangID_SelNo           ;  //= _T("sSelNo");
CString g_sLangTxt_SelNo          ;  //= _T("选择“否”，不清除当前报告数据，新建测试\r\n");
CString g_sLangID_SelCancel           ;  //= _T("sSelCancel");
CString g_sLangTxt_SelCancel          ;  //= _T("选择“取消”，不开始测试");
CString g_sLangID_WavCpntNotExist           ;  //= _T("sWavCpntNotExist");
CString g_sLangTxt_WavCpntNotExist          ;  //= _T("录波组件不存在");
CString g_sLangID_UnAutoTest           ;  //= _T("sUnAutoTest");
CString g_sLangTxt_UnAutoTest          ;  //= _T("没有启动自动测试，无法执行命令");
CString g_sLangID_ToolUnExitS           ;  //= _T("sToolUnExitS ");
CString g_sLangTxt_ToolUnExitS           ;  //= _T("工具【%s】【%s】不存在");
CString g_sLangID_TestTaskFnshS           ;  //= _T("sTestTaskFnshS");
CString g_sLangTxt_TestTaskFnshS          ;  //= _T("测试任务【%s】测试完成");
CString g_sLangID_StartTestS           ;  //= _T("sStartTestS");
CString g_sLangTxt_StartTestS          ;  //= _T("开始测试【%s】");
CString g_sLangID_TestTempS           ;  //= _T("sTestTempS");
CString g_sLangTxt_TestTempS          ;  //= _T("测试模板*******%s");
CString g_sLangID_ReportFileS           ;  //= _T("sReportFileS ");
CString g_sLangTxt_ReportFileS           ;  //= _T("报告文件*******%s");
CString g_sLangID_ModelFileS           ;  //= _T("sModelFileS");
CString g_sLangTxt_ModelFileS         ;  //= _T("模型文件********%s");
CString g_sLangID_PrtcTemS           ;  //= _T("sPrtcTemS");
CString g_sLangTxt_PrtcTemS          ;  //= _T("规约模板********%s");
CString g_sLangID_AutoTestContrl           ;  //= _T("sAutoTestContrl");
CString g_sLangTxt_AutoTestContrl          ;  //= _T("自动测试控制中心");
// CString g_sLangID_SGroupS           ;  //= _T("sSGroupS");
// CString g_sLangTxt_SGroupS          ;  //= _T("%s%s-组%d.%s");
// CString g_sLangID_SGroupFileName           ;  //= _T("sSGroupFnm");
// CString g_sLangTxt_SGroupFileName          ;  //= _T("%s-组%d");
CString g_sLangID_RightBuy           ;  //= _T("sRightBuy");
CString g_sLangTxt_RightBuy           ;  //= _T("Demo版本，只能使用模板【Demo-PSL-641U】，请购买正式版本！");
CString g_sLangID_MainView2           ;  //= _T("sMainView2");
CString g_sLangTxt_MainView2          ;  //= _T("主视图:");
CString g_sLangID_GroupReport           ;  //= _T("sGroupReport");
CString g_sLangTxt_GroupReport          ;  //= _T("组%d报告");
CString g_sLangID_ProcessStop           ;  //= _T("sProcessStop");
CString g_sLangTxt_ProcessStop          ;  //= _T("和测试相关的进程已经被终止");
CString g_sLangID_SelObjPath           ;  //= _T("sSelObjPath");
CString g_sLangTxt_SelObjPath          ;  //= _T("选择目标路径");
CString g_sLangID_FileNameIncl           ;  //= _T("sFileNameIncl");
CString g_sLangTxt_FileNameIncl          ;  //= _T("文件名称包含非法字符: %s");
CString g_sLangID_ReportEptFinsh           ;  //= _T("sReportEptFinsh");
CString g_sLangTxt_ReportEptFinsh          ;  //= _T("报告导出完成");
CString g_sLangID_ObjFileExistOvwt           ;  //= _T("sObjFileExistOvwt");
CString g_sLangTxt_ObjFileExistOvwt          ;  //= _T("目标文件已经存在,覆盖吗?");
CString g_sLangID_ReportTestTempt           ;  //= _T("sReportTestTempt");
CString g_sLangTxt_ReportTestTempt          ;  //= _T("报告【%s】对应的测试模板:【%s】");
CString g_sLangID_SureToDele           ;  //= _T("sSureToDele");
CString g_sLangTxt_SureToDele          ;  //= _T("你确实要删除【%s】吗？");
CString g_sLangID_UnQualifadS           ;  //= _T("sUnQualifadS");
CString g_sLangTxt_UnQualifadS          ;  //= _T("[%s]不合格");
CString g_sLangID_TestOver           ;  //= _T("sTestOver");
CString g_sLangTxt_TestOver          ;  //= _T("********测试结束********");
CString g_sLangID_CopyOutput           ;  //= _T("sCopyOutput");
CString g_sLangTxt_CopyOutput          ;  //= _T("复制输出");
CString g_sLangID_ClearOutput           ;  //= _T("sClearOutput");
CString g_sLangTxt_ClearOutput          ;  //= _T("清除输出");
// CString g_sLangID_Unqualified2           ;  //= _T("sUnqualified2");
// CString g_sLangTxt_Unqualified2          ;  //= _T("%s[不合格]");
CString g_sLangID_NoAddTestRpt           ;  //= _T("sNoAddTestRpt");
CString g_sLangTxt_NoAddTestRpt          ;  //= _T("没有添加测试报告");
CString g_sLangID_OneTestRpt           ;  //= _T("sOneTestRpt");
CString g_sLangTxt_OneTestRpt          ;  //= _T("只添加了一个测试报告");
CString g_sLangID_NoSelPrtcTem           ;  //= _T("sNoSelPrtcTem");
CString g_sLangTxt_NoSelPrtcTem          ;  //= _T("装置报告列表第【%d】没有选择规约模板");
CString g_sLangID_NoSelFile           ;  //= _T("sNoSelFile");
CString g_sLangTxt_NoSelFile          ;  //= _T("装置报告列表第【%d】没有选择点表文件");
CString g_sLangID_NameSame           ;  //= _T("sNameSame");
CString g_sLangTxt_NameSame          ;  //= _T("装置报告列表第【%d】与第【%d】名称【%s】相同");
CString g_sLangID_PrtcSame           ;  //= _T("sPrtcSame");
CString g_sLangTxt_PrtcSame          ;  //= _T("装置报告列表第【%d】与第【%d】规约模板【%s】相同");
CString g_sLangID_IPSame           ;  //= _T("sIPSame");
CString g_sLangTxt_IPSame          ;  //= _T("装置报告列表第【%d】与第【%d】IP【%s】相同");
CString g_sLangID_ToolTip_32781           ;  //= _T("sToolTip_32781");
CString g_sLangTxt_ToolTip_32781          ;  //= _T("打开报告\n打开报告");
CString g_sLangID_ToolTip_32782           ;  //= _T("sToolTip_32782");
CString g_sLangTxt_ToolTip_32782          ;  //= _T("关闭任务\n关闭任务");
CString g_sLangID_ToolTip_32783           ;  //= _T("sToolTip_32783");
CString g_sLangTxt_ToolTip_32783          ;  //= _T("恢复到未完成的状态\n恢复到未完成的状态");
CString g_sLangID_ToolTip_32784           ;  //= _T("sToolTip_32784");
CString g_sLangTxt_ToolTip_32784          ;  //= _T("显示报告对应的模板\n显示报告对应的模板");
CString g_sLangID_ToolTip_32775           ;  //= _T("sToolTip_32775");
CString g_sLangTxt_ToolTip_32775          ;  //= _T("导出任务报告\n导出任务报告");
CString g_sLangID_ToolTip_32776           ;  //= _T("sToolTip_32776");
CString g_sLangTxt_ToolTip_32776          ;  //= _T("添加报告\n添加报告");
CString g_sLangID_ToolTip_32777           ;  //= _T("sToolTip_32777");
CString g_sLangTxt_ToolTip_32777          ;  //= _T("删除报告\n删除报告");
CString g_sLangID_ToolTip_32778           ;  //= _T("sToolTip_32778");
CString g_sLangTxt_ToolTip_32778          ;  //= _T("上移报告\n上移报告");
CString g_sLangID_ToolTip_32779           ;  //= _T("sToolTip_32779");
CString g_sLangTxt_ToolTip_32779          ;  //= _T("下移报告\n下移报告");

//在XLanguageResourcePp_Mms中定义
// CString g_sLangID_Menu_57634 ;  //= _T("sMenu_57634");
// CString g_sLangTxt_Menu_57634 ;  //= _T("复制(&C)");
// CString g_sLangID_Menu_57632 ;  //= _T("sMenu_57632");
// CString g_sLangTxt_Menu_57632 ;  //= _T("清除(&C)");

CString g_sLangID_ToolTip_32789 ;  //= _T("sToolTip_32789");
CString g_sLangTxt_ToolTip_32789 ;  //= _T("拼接任务报告\n拼接任务报告");

CString g_sLangID_StitchRptFinish ;  //= _T("sStitchRptFinish");
CString g_sLangTxt_StitchRptFinish ;  //= _T("拼接任务报告完成");


//2016-12-10
CString g_sLangID_ToolTip_2000 ;  //= _T("sToolTip_2000");
CString g_sLangTxt_ToolTip_2000 ;  //= _T("新建测试任务\n测试任务");
CString g_sLangID_ToolTip_32786 ;  //= _T("sToolTip_32786");
CString g_sLangTxt_ToolTip_32786 ;  //= _T("新建多装置测试报告\n新建多装置测试");
CString g_sLangID_ToolTip_32788 ;  //= _T("sToolTip_32788");
CString g_sLangTxt_ToolTip_32788 ;  //= _T("新建单装置多规约测试\n新建单装置多规约测试");
CString g_sLangID_ToolTip_2001 ;  //= _T("sToolTip_2001");
CString g_sLangTxt_ToolTip_2001 ;  //= _T("新建子模板测试\n新建子模板测试");
CString g_sLangID_ToolTip_32785 ;  //= _T("sToolTip_32785");
CString g_sLangTxt_ToolTip_32785 ;  //= _T("新建报告\n新建报告");
CString g_sLangID_ToolTip_351 ;  //= _T("sToolTip_351");
CString g_sLangTxt_ToolTip_351 ;  //= _T("开始任务测试\n开始任务");
CString g_sLangID_ToolTip_314 ;  //= _T("sToolTip_314");
CString g_sLangTxt_ToolTip_314 ;  //= _T("开始报告\n开始报告");
CString g_sLangID_ToolTip_320 ;  //= _T("sToolTip_320");
CString g_sLangTxt_ToolTip_320 ;  //= _T("打印报告\n打印报告");
CString g_sLangID_ToolTip_330 ;  //= _T("sToolTip_330");
CString g_sLangTxt_ToolTip_330 ;  //= _T("系统配置\n系统配置");
CString g_sLangID_ToolTip_358 ;  //= _T("sToolTip_358");
CString g_sLangTxt_ToolTip_358 ;  //= _T("测试仪选择\n测试仪选择");
CString g_sLangID_ToolTip_347 ;  //= _T("sToolTip_347");
CString g_sLangTxt_ToolTip_347 ;  //= _T("录波配置\n录波配置");
CString g_sLangID_ToolTip_310 ;  //= _T("sToolTip_310");
CString g_sLangTxt_ToolTip_310 ;  //= _T("输出窗口\n输出窗口");
CString g_sLangID_ToolTip_348 ;  //= _T("sToolTip_348");
CString g_sLangTxt_ToolTip_348 ;  //= _T("文件管理栏\n文件管理栏");
CString g_sLangID_ToolTip_349 ;  //= _T("sToolTip_349");
CString g_sLangTxt_ToolTip_349 ;  //= _T("测试信息栏\n测试信息栏");
CString g_sLangID_ToolTip_350 ;  //= _T("sToolTip_350");
CString g_sLangTxt_ToolTip_350 ;  //= _T("测试任务栏\n测试任务栏");
CString g_sLangID_ToolTip_357 ;  //= _T("sToolTip_357");
CString g_sLangTxt_ToolTip_357 ;  //= _T("显示测试信息\n显示测试信息");

//shaolei 2024-3-25
CString g_sLangID_GbDevice;  //= _T("sGbDevice");
CString g_sLangTxt_GbDevice;  //= _T("设备");
CString g_sLangID_SysParaCfg;  //= _T("sSysParaCfg");
CString g_sLangTxt_SysParaCfg;  //= _T("系统参数配置");
CString g_sLangID_ChMapsConfig;  //= _T("sChMapsConfig");
CString g_sLangTxt_ChMapsConfig;  //= _T("硬件通道映射");
CString g_sLangID_Iec61850Cfg;  //= _T("sIec61850Cfg");
CString g_sLangTxt_Iec61850Cfg;  //= _T("IEC61850配置");
CString g_sLangID_BeforeTest;  //= _T("sBeforeTest");
CString g_sLangTxt_BeforeTest;  //= _T("测试前准备");
CString g_sLangID_NotTest;  //= _T("sNotTest");
CString g_sLangTxt_NotTest;  //= _T("未测试");
CString g_sLangID_RsltEvaluation;  //= _T("sRsltEvaluation");
CString g_sLangTxt_RsltEvaluation;  //= _T("结果评估");
CString g_sLangID_TSet;  //= _T("sTSet");
CString g_sLangTxt_TSet;  //= _T("动作时间整定值(s)");
CString g_sLangID_USet;  //= _T("sUSet");
CString g_sLangTxt_USet;  //= _T("电压整定动作值(V)");
CString g_sLangID_ISet;  //= _T("sISet");
CString g_sLangTxt_ISet;  //= _T("电流整定动作值(A)");
CString g_sLangID_AngleSet;  //= _T("sAngleSet");
CString g_sLangTxt_AngleSet;  //= _T("相位整定动作值(°)");
CString g_sLangID_HzSet;  //= _T("sHzSet");
CString g_sLangTxt_HzSet;  //= _T("频率整定动作值(Hz)");
CString g_sLangID_ReturnCoefSet;  //= _T("sReturnCoefSet");
CString g_sLangTxt_ReturnCoefSet;  //= _T("返回系数整定值");
CString g_sLangID_MaxAngleSet;  //= _T("sMaxAngleSet");
CString g_sLangTxt_MaxAngleSet;  //= _T("最大灵敏角整定值(°)");
CString g_sLangID_AngleFSet;  //= _T("sAngleFSet");
CString g_sLangTxt_AngleFSet;  //= _T("边界角1整定值(°)");
CString g_sLangID_AngleSSet;  //= _T("sAngleSSet");
CString g_sLangTxt_AngleSSet;  //= _T("边界角2整定值(°)");
CString g_sLangID_T_AbsErr_Max;  //= _T("sT_AbsErr_Max");
CString g_sLangTxt_T_AbsErr_Max;  //= _T("动作时间绝对误差最大值(ms)");
CString g_sLangID_T_AbsErr_Min;  //= _T("sT_AbsErr_Min");
CString g_sLangTxt_T_AbsErr_Min;  //= _T("动作时间绝对误差最小值(ms)");
CString g_sLangID_T_RelErr_Max;  //= _T("sT_RelErr_Max");
CString g_sLangTxt_T_RelErr_Max;  //= _T("动作时间相对误差最大值(%)");
CString g_sLangID_T_RelErr_Min;  //= _T("sT_RelsErr_Min");
CString g_sLangTxt_T_RelErr_Min;  //= _T("动作时间相对误差最小值(%)");
CString g_sLangID_U_AbsErr_Max;  //= _T("sU_AbsErr_Max");
CString g_sLangTxt_U_AbsErr_Max;  //= _T("电压动作值绝对误差最大值(V)");
CString g_sLangID_U_AbsErr_Min;  //= _T("sU_AbsErr_Min");
CString g_sLangTxt_U_AbsErr_Min;  //= _T("电压动作值绝对误差最小值(V)");
CString g_sLangID_U_RelErr_Max;  //= _T("sU_RelErr_Max");
CString g_sLangTxt_U_RelErr_Max;  //= _T("电压动作值相对误差最大值(%)");
CString g_sLangID_U_RelErr_Min;  //= _T("sU_RelsErr_Min");
CString g_sLangTxt_U_RelErr_Min;  //= _T("电压动作值相对误差最小值(%)");
CString g_sLangID_I_AbsErr_Max;  //= _T("sI_AbsErr_Max");
CString g_sLangTxt_I_AbsErr_Max;  //= _T("电流动作值绝对误差最大值(A)");
CString g_sLangID_I_AbsErr_Min;  //= _T("sI_AbsErr_Min");
CString g_sLangTxt_I_AbsErr_Min;  //= _T("电流动作值绝对误差最小值(A)");
CString g_sLangID_I_RelErr_Max;  //= _T("sI_RelErr_Max");
CString g_sLangTxt_I_RelErr_Max;  //= _T("电流动作值相对误差最大值(%)");
CString g_sLangID_I_RelErr_Min;  //= _T("sI_RelsErr_Min");
CString g_sLangTxt_I_RelErr_Min;  //= _T("电流动作值相对误差最小值(%)");
CString g_sLangID_Angle_AbsErr_Max;  //= _T("sAngle_AbsErr_Max");
CString g_sLangTxt_Angle_AbsErr_Max;  //= _T("相位动作值绝对误差最大值(°)");
CString g_sLangID_Angle_AbsErr_Min;  //= _T("sAngle_AbsErr_Min");
CString g_sLangTxt_Angle_AbsErr_Min;  //= _T("相位动作值绝对误差最小值(°)");
CString g_sLangID_Hz_AbsErr_Max;  //= _T("sHz_AbsErr_Max");
CString g_sLangTxt_Hz_AbsErr_Max;  //= _T("频率动作值绝对误差最大值(Hz)");
CString g_sLangID_Hz_AbsErr_Min;  //= _T("sHz_AbsErr_Min");
CString g_sLangTxt_Hz_AbsErr_Min;  //= _T("频率动作值绝对误差最小值(Hz)");
CString g_sLangID_RetCoef_AbsErr_Max;  //= _T("sRetCoef_AbsErr_Max");
CString g_sLangTxt_RetCoef_AbsErr_Max;  //= _T("返回系数绝对误差最大值");
CString g_sLangID_RetCoef_AbsErr_Min;  //= _T("sRetCoef_AbsErr_Min");
CString g_sLangTxt_RetCoef_AbsErr_Min;  //= _T("返回系数绝对误差最小值");
CString g_sLangID_MaxAngle_AbsErr_Max;  //= _T("sMaxAngle_AbsErr_Max");
CString g_sLangTxt_MaxAngle_AbsErr_Max;  //= _T("最大灵敏角绝对误差最大值(°)");
CString g_sLangID_MaxAngle_AbsErr_Min;  //= _T("sMaxAngle_AbsErr_Min");
CString g_sLangTxt_MaxAngle_AbsErr_Min;  //= _T("最大灵敏角绝对误差最小值(°)");
CString g_sLangID_AngleF_AbsErr_Max;  //= _T("sAngleF_AbsErr_Max");
CString g_sLangTxt_AngleF_AbsErr_Max;  //= _T("边界角1绝对误差最大值(°)");
CString g_sLangID_AngleF_AbsErr_Min;  //= _T("sAngleF_AbsErr_Min");
CString g_sLangTxt_AngleF_AbsErr_Min;  //= _T("边界角1绝对误差最小值(°)");
CString g_sLangID_AngleS_AbsErr_Max;  //= _T("sAngleS_AbsErr_Max");
CString g_sLangTxt_AngleS_AbsErr_Max;  //= _T("边界角2绝对误差最大值(°)");
CString g_sLangID_AngleS_AbsErr_Min;  //= _T("sAngleS_AbsErr_Min");
CString g_sLangTxt_AngleS_AbsErr_Min;  //= _T("边界角2角绝对误差最小值(°)");
CString g_sLangID_T_Act;  //= _T("sT_Act");
CString g_sLangTxt_T_Act;  //= _T("动作时间(s)");
CString g_sLangID_T_ErrRel;  //= _T("sT_ErrRel");
CString g_sLangTxt_T_ErrRel;  //= _T("动作时间相对误差限(%)");
CString g_sLangID_T_ErrAbs;  //= _T("sT_ErrAbs");
CString g_sLangTxt_T_ErrAbs;  //= _T("动作时间绝对误差限(s)");
CString g_sLangID_T_RelErr;  //= _T("sT_RelErr");
CString g_sLangTxt_T_RelErr;  //= _T("动作时间相对误差值(%)");
CString g_sLangID_T_AbsErr;  //= _T("sT_AbsErr");
CString g_sLangTxt_T_AbsErr;  //= _T("动作时间绝对误差值(ms)");
CString g_sLangID_U_RelErr;  //= _T("sU_RelErr");
CString g_sLangTxt_U_RelErr;  //= _T("电压动作值相对误差值(%)");
CString g_sLangID_U_AbsErr;  //= _T("sU_AbsErr");
CString g_sLangTxt_U_AbsErr;  //= _T("电压动作值绝对误差值(V)");
CString g_sLangID_U_ErrRel;  //= _T("sU_ErrRel");
CString g_sLangTxt_U_ErrRel;  //= _T("电压动作值相对误差限(%)");
CString g_sLangID_U_ErrAbs;  //= _T("sU_ErrAbs");
CString g_sLangTxt_U_ErrAbs;  //= _T("电压动作值绝对误差限(V)");
CString g_sLangID_U_Act;  //= _T("sU_Act");
CString g_sLangTxt_U_Act;  //= _T("电压动作值(V)");
CString g_sLangID_I_RelErr;  //= _T("sI_RelErr");
CString g_sLangTxt_I_RelErr;  //= _T("电流动作值相对误差值(%)");
CString g_sLangID_I_AbsErr;  //= _T("sI_AbsErr");
CString g_sLangTxt_I_AbsErr;  //= _T("电流动作值绝对误差值(A)");
CString g_sLangID_I_ErrRel;  //= _T("sI_ErrRel");
CString g_sLangTxt_I_ErrRel;  //= _T("电流动作值相对误差限(%)");
CString g_sLangID_I_ErrAbs;  //= _T("sI_ErrAbs");
CString g_sLangTxt_I_ErrAbs;  //= _T("电流动作值绝对误差限(A)");
CString g_sLangID_I_Act;  //= _T("sI_Act");
CString g_sLangTxt_I_Act;  //= _T("电流动作值(A)");
CString g_sLangID_Angle_RelErr;  //= _T("sAngle_RelErr");
CString g_sLangTxt_Angle_RelErr;  //= _T("相位动作值相对误差值(%)");
CString g_sLangID_Angle_AbsErr;  //= _T("sAngle_AbsErr");
CString g_sLangTxt_Angle_AbsErr;  //= _T("相位动作值绝对误差值(°)");
CString g_sLangID_Angle_ErrRel;  //= _T("sAngle_ErrRel");
CString g_sLangTxt_Angle_ErrRel;  //= _T("相位动作值相对误差限(%)");
CString g_sLangID_Angle_ErrAbs;  //= _T("sAngle_ErrAbs");
CString g_sLangTxt_Angle_ErrAbs;  //= _T("相位动作值绝对误差限(°)");
CString g_sLangID_Angle_Act;  //= _T("sAngle_Act");
CString g_sLangTxt_Angle_Act;  //= _T("相位动作值(°)");
CString g_sLangID_Hz_RelErr;  //= _T("sHz_RelErr");
CString g_sLangTxt_Hz_RelErr;  //= _T("频率动作值相对误差值(%)");
CString g_sLangID_Hz_AbsErr;  //= _T("sHz_AbsErr");
CString g_sLangTxt_Hz_AbsErr;  //= _T("频率动作值绝对误差值(Hz)");
CString g_sLangID_Hz_ErrRel;  //= _T("sHz_ErrRel");
CString g_sLangTxt_Hz_ErrRel;  //= _T("频率动作值相对误差限(%)");
CString g_sLangID_Hz_ErrAbs;  //= _T("sHz_ErrAbs");
CString g_sLangTxt_Hz_ErrAbs;  //= _T("频率动作值绝对误差限(Hz)");
CString g_sLangID_Hz_Act;  //= _T("sHz_Act");
CString g_sLangTxt_Hz_Act;  //= _T("频率动作值(Hz)");
CString g_sLangID_ReturnCoef_AbsErr;  //= _T("sReturnCoef_AbsErr");
CString g_sLangTxt_ReturnCoef_AbsErr;  //= _T("返回系数绝对误差值");
CString g_sLangID_ReturnCoef_ErrAbs;  //= _T("sReturnCoef_ErrAbs");
CString g_sLangTxt_ReturnCoef_ErrAbs;  //= _T("返回系数绝对误差限");
CString g_sLangID_ReturnCoef_Act;  //= _T("sReturnCoef_Act");
CString g_sLangTxt_ReturnCoef_Act;  //= _T("返回系数");
CString g_sLangID_MaxAngle_AbsErr;  //= _T("sMaxAngle_AbsErr");
CString g_sLangTxt_MaxAngle_AbsErr;  //= _T("最大灵敏角值绝对误差值(°)");
CString g_sLangID_MaxAngle_ErrAbs;  //= _T("sMaxAngle_ErrAbs");
CString g_sLangTxt_MaxAngle_ErrAbs;  //= _T("最大灵敏角绝对误差限(°)");
CString g_sLangID_AngleF_AbsErr;  //= _T("sAngleF_AbsErr");
CString g_sLangTxt_AngleF_AbsErr;  //= _T("边界角1值绝对误差值(°)");
CString g_sLangID_AngleF_ErrAbs;  //= _T("sAngleF_ErrAbs");
CString g_sLangTxt_AngleF_ErrAbs;  //= _T("边界角1绝对误差限(°)");
CString g_sLangID_AngleS_AbsErr;  //= _T("sAngleS_AbsErr");
CString g_sLangTxt_AngleS_AbsErr;  //= _T("边界角2值绝对误差值(°)");
CString g_sLangID_AngleS_ErrAbs;  //= _T("sAngleS_ErrAbs");
CString g_sLangTxt_AngleS_ErrAbs;  //= _T("边界角2绝对误差限(°)");
CString g_sLangID_ReadAin;  //= _T("sReadAin");
CString g_sLangTxt_ReadAin;  //= _T("读遥测");
CString g_sLangID_WriteSetting;  //= _T("sWriteSetting");
CString g_sLangTxt_WriteSetting;  //= _T("修改定值");
CString g_sLangID_WriteEna;  //= _T("sWriteEna");
CString g_sLangTxt_WriteEna;  //= _T("投退压板");
CString g_sLangID_Reset;  //= _T("sReset");
CString g_sLangTxt_Reset;  //= _T("-复归态");
CString g_sLangID_BeforeTestGrp;  //= _T("sBeforeTestGrp");
CString g_sLangTxt_BeforeTestGrp;  //= _T("测试前_后组合");
CString g_sLangID_ImportDvm;  //= _T("sImportDvm");
CString g_sLangTxt_ImportDvm;  //= _T("导入模型");
CString g_sLangID_BeforeComm;  //= _T("sBeforeComm");
CString g_sLangTxt_BeforeComm;  //= _T("通信前准备");
CString g_sLangID_AfterComm;  //= _T("sAfterComm");
CString g_sLangTxt_IAfterComm;  //= _T("通信后恢复");

//add 2024-8-27
CString g_sLangID_SpowerSet;  //=_T("sSpowerSet");
CString g_sLangTxt_SpowerSet;  //=_T("视在功率整定动作值(VA)");
CString g_sLangID_Spower_RelErr;  //=_T("sSpower_ErrRel"); 
CString g_sLangTxt_Spower_RelErr;  //=_T("视在功率相对误差值(%)");
CString g_sLangID_Spower_AbsErr;  //=_T("sSpower_AbsErr");
CString g_sLangTxt_Spower_AbsErr;  //=_T("视在功率绝对误差值(VA)");
CString g_sLangID_Spower_ErrRel;  //=_T("sSpower_ErrRel");
CString g_sLangTxt_Spower_ErrRel;  //=_T("视在功率相对误差限(%)");
CString g_sLangID_Spower_ErrAbs;  //=_T("sSpower_ErrAbs");
CString g_sLangTxt_Spower_ErrAbs;  //=_T("视在功率绝对误差限(VA)");
CString g_sLangID_PpowerSet;  //=_T("sPpowerSet");
CString g_sLangTxt_PpowerSet;  //=_T("有功功率整定动作值(W)");
CString g_sLangID_Ppower_RelErr;  //=_T("sPpower_RelErr");
CString g_sLangTxt_Ppower_RelErr;  //=_T("有功功率相对误差值(%)");
CString g_sLangID_Ppower_AbsErr;  //=_T("sPpower_AbsErr");
CString g_sLangTxt_Ppower_AbsErr;  //=_T("有功功率绝对误差值(W)");
CString g_sLangID_Ppower_ErrRel;  //=_T("sPpower_ErrRel");
CString g_sLangTxt_Ppower_ErrRel;  //=_T("有功功率相对误差限(%)");
CString g_sLangID_Ppower_ErrAbs;  //=_T("sPpower_ErrAbs");
CString g_sLangTxt_Ppower_ErrAbs;  //=_T("有功功率绝对误差限(W)");
CString g_sLangID_QpowerSet;  //=_T("sQpowerSet");
CString g_sLangTxt_QpowerSet;  //=_T("无功功率整定动作值(Var)");
CString g_sLangID_Qpower_RelErr;  //=_T("sQpower_RelErr");
CString g_sLangTxt_Qpower_RelErr;  //=_T("无功功率相对误差值(%)");
CString g_sLangID_Qpower_AbsErr;  //=_T("sQpower_AbsErr");
CString g_sLangTxt_Qpower_AbsErr;  //=_T("无功功率绝对误差值(Var)");
CString g_sLangID_Qpower_ErrRel;  //=_T("sQpower_ErrRel");
CString g_sLangTxt_Qpower_ErrRel;  //=_T("无功功率相对误差限(%)");
CString g_sLangID_Qpower_ErrAbs;  //=_T("sQpower_ErrAbs");
CString g_sLangTxt_Qpower_ErrAbs;  //=_T("无功功率绝对误差限(Var)");
CString g_sLangID_Spower_AbsErr_Max;  //=_T("sSpower_AbsErr_Max");
CString g_sLangTxt_Spower_AbsErr_Max;  //=_T("视在功率绝对误差最大值(VA)");
CString g_sLangID_Spower_RelErr_Max;  //=_T("sSpower_RelErr_Max");
CString g_sLangTxt_Spower_RelErr_Max;  //=_T("视在功率相对误差最大值(%)");
CString g_sLangID_Spower_AbsErr_Min;  //=_T("sSpower_AbsErr_Min");
CString g_sLangTxt_Spower_AbsErr_Min;  //=_T("视在功率绝对误差最小值(VA)");
CString g_sLangID_Spower_RelErr_Min;  //=_T("sSpower_RelErr_Min");
CString g_sLangTxt_Spower_RelErr_Min;  //=_T("视在功率相对误差最小值(%)");
CString g_sLangID_Ppower_AbsErr_Max;  //=_T("sPpower_AbsErr_Max");
CString g_sLangTxt_Ppower_AbsErr_Max;  //=_T("有功功率绝对误差最大值(W)");
CString g_sLangID_Ppower_RelErr_Max;  //=_T("sPpower_RelErr_Max");
CString g_sLangTxt_Ppower_RelErr_Max;  //=_T("有功功率相对误差最大值(%)");
CString g_sLangID_Ppower_AbsErr_Min;  //=_T("sPpower_AbsErr_Min");
CString g_sLangTxt_Ppower_AbsErr_Min;  //=_T("有功功率绝对误差最小值(W)");
CString g_sLangID_Ppower_RelErr_Min;  //=_T("sPpower_RelErr_Min");
CString g_sLangTxt_Ppower_RelErr_Min;  //=_T("有功功率相对误差最小值(%)");
CString g_sLangID_Qpower_AbsErr_Max;  //=_T("sQpower_AbsErr_Max");
CString g_sLangTxt_Qpower_AbsErr_Max;  //=_T("无功功率绝对误差最大值(Var)");
CString g_sLangID_Qpower_RelErr_Max;  //=_T("sQpower_RelErr_Max");
CString g_sLangTxt_Qpower_RelErr_Max;  //=_T("无功功率相对误差最大值(%)");
CString g_sLangID_Qpower_AbsErr_Min;  //=_T("sQpower_AbsErr_Min");
CString g_sLangTxt_Qpower_AbsErr_Min;  //=_T("无功功率绝对误差最小值(Var)");
CString g_sLangID_Qpower_RelErr_Min;  //=_T("sQpower_RelErr_Min");
CString g_sLangTxt_Qpower_RelErr_Min;  //=_T("无功功率相对误差最小值(%)");
CString g_sLangID_ImpAngleSet;  //=_T("sImpAngleSet");
CString g_sLangTxt_ImpAngleSet;  //=_T("阻抗角整定动作值(°)");
CString g_sLangID_ImpAngle_RelErr;  //=_T("sImpAngle_RelErr");
CString g_sLangTxt_ImpAngle_RelErr;  //=_T("阻抗角动作值相对误差值(%)");
CString g_sLangID_ImpAngle_AbsErr;  //=_T("sImpAngle_AbsErr");
CString g_sLangTxt_ImpAngle_AbsErr;  //=_T("阻抗角动作值绝对误差值(°)");
CString g_sLangID_ImpAngle_ErrRel;  //=_T("sImpAngle_ErrRel");
CString g_sLangTxt_ImpAngle_ErrRel;  //=_T("阻抗角动作值相对误差限(%)");
CString g_sLangID_ImpAngle_ErrAbs;  //=_T("sImpAngle_ErrAbs");
CString g_sLangTxt_ImpAngle_ErrAbs;  //=_T("阻抗角动作值绝对误差限(°)");
CString g_sLangID_ShortZImp;  //=_T("sShortZImp");
CString g_sLangTxt_ShortZImp;  //=_T("短路阻抗整定动作值(Ω)");
CString g_sLangID_ShortZImp_RelErr;  //=_T("sShortZImp_RelErr");
CString g_sLangTxt_ShortZImp_RelErr;  //=_T("短路阻抗动作值相对误差值(%)");
CString g_sLangID_ShortZImp_AbsErr;  //=_T("sShortZImp_AbsErr");
CString g_sLangTxt_ShortZImp_AbsErr;  //=_T("短路阻抗动作值绝对误差值(Ω)");
CString g_sLangID_ShortZImp_ErrRel;  //=_T("sShortZImp_ErrRel");
CString g_sLangTxt_ShortZImp_ErrRel;  //=_T("短路阻抗动作值相对误差限(%)");
CString g_sLangID_ShortZImp_ErrAbs;  //=_T("sShortZImp_ErrAbs");
CString g_sLangTxt_ShortZImp_ErrAbs;  //=_T("短路阻抗动作值绝对误差限(Ω)");
CString g_sLangID_ImpAngle_AbsErr_Max;  //=_T("sImpAngle_AbsErr_Max");
CString g_sLangTxt_ImpAngle_AbsErr_Max;  //=_T("阻抗角动作值绝对误差最大值(°)");
CString g_sLangID_ImpAngle_RelErr_Max;  //=_T("sImpAngle_RelErr_Max");
CString g_sLangTxt_ImpAngle_RelErr_Max;  //=_T("阻抗角动作值相对误差最大值(%)");
CString g_sLangID_ImpAngle_AbsErr_Min;  //=_T("sImpAngle_AbsErr_Min");
CString g_sLangTxt_ImpAngle_AbsErr_Min;  //=_T("阻抗角动作值绝对误差最小值(°)");
CString g_sLangID_ImpAngle_RelErr_Min;  //=_T("sImpAngle_RelErr_Min");
CString g_sLangTxt_ImpAngle_RelErr_Min;  //=_T("阻抗角动作值相对误差最小值(%)");
CString g_sLangID_ShortZImp_AbsErr_Max;  //=_T("sShortZImp_AbsErr_Max");
CString g_sLangTxt_ShortZImp_AbsErr_Max;  //=_T("短路阻抗动作值绝对误差最大值(A)");
CString g_sLangID_ShortZImp_RelErr_Max;  //=_T("sShortZImp_RelErr_Max");
CString g_sLangTxt_ShortZImp_RelErr_Max;  //=_T("短路阻抗动作值相对误差最大值(%)");
CString g_sLangID_ShortZImp_AbsErr_Min;  //=_T("sShortZImp_AbsErr_Min");
CString g_sLangTxt_ShortZImp_AbsErr_Min;  //=_T("短路阻抗动作值绝对误差最小值(A)");
CString g_sLangID_ShortZImp_RelErr_Min;  //=_T("sShortZImp_RelErr_Min");
CString g_sLangTxt_ShortZImp_RelErr_Min;  //=_T("短路阻抗动作值相对误差最小值(%)");
CString g_sLangID_Hz_RelErr_Max;  //=_T("sHz_RelErr_Max");
CString g_sLangTxt_Hz_RelErr_Max;  //=_T("频率动作值相对误差最大值(%)");
CString g_sLangID_Hz_RelErr_Min;  //=_T("sHz_RelErr_Min");
CString g_sLangTxt_Hz_RelErr_Min;  //=_T("频率动作值相对误差最小值(%)")");
CString g_sLangID_T_ErrAbsPos;  //=_T("sT_ErrAbsPos");
CString g_sLangTxt_T_ErrAbsPos;  //=_T("动作时间正绝对误差限(s)");
CString g_sLangID_T_ErrAbsNeg;  //=_T("sT_ErrAbsNeg");
CString g_sLangTxt_T_ErrAbsNeg;  //=_T("动作时间负绝对误差限(s)");