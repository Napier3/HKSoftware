#include "StdAfx.h"
#include "IecCfgGinDataGrid.h"


//////////////////////////////////////////////////////////////////////////
//CStCfgGridBase

CIecCfgGinDataGrid::CIecCfgGinDataGrid()
{

}


CIecCfgGinDataGrid::~CIecCfgGinDataGrid(void)
{
	
}

void CIecCfgGinDataGrid::InitGrid()
{
	SetListMode(TRUE);
	SetRowCount(1);
	SetColumnCount(DATASET_COLS);
	SetFixedRowCount(1);
	SetFixedColumnCount(1);
	InitGridTitle();
}

void CIecCfgGinDataGrid::InitGridTitle()
{
	CString cTempStr[DATASET_COLS]={_T("序号"),_T("名称"),_T("ID"),_T("数值"), _T("单位")};
	int iWidth[DATASET_COLS]={60,200, 200,160,120};

	CIecCfgDataGridBase::InitGridTitle(cTempStr, iWidth, DATASET_COLS_GINDATA);
}


void CIecCfgGinDataGrid::ShowData(CExBaseObject *pData, int& nRow, BOOL bInsertRow)
{
	UINT nClassID = pData->GetClassID();

	if (nClassID != GBCLASSID_DATAOBJ)
	{
		return;
	}

	CIecCfgGinData *pIecCfgGinData = (CIecCfgGinData*)pData;

	Show_Mac(pData, nRow, DATASET_COL_ID_GINDATA_MAC, &pIecCfgGinData->m_strDestAddress);
	Show_Hex(pData, nRow, DATASET_COL_ID_GINDATA_APPID,    &pIecCfgGinData->m_dwAppID, 2);
	Show_Fiber(pData, nRow, DATASET_COL_ID_GINDATA_PORT,    &pIecCfgGinData->m_nFiberIndex, EndEditCell_Fiber_Gin); //g_strAppPortDataType_Fiber
	Show_String(pData, nRow, DATASET_COL_ID_GINDATA_DESC,    &pIecCfgGinData->m_strgocbIED);
	Show_ChNum(pData, nRow, DATASET_COL_ID_GINDATA_CHNUM,  &pIecCfgGinData->m_nChannelNum);
	Show_Hex(pData, nRow, DATASET_COL_ID_GINDATA_VERS,    &pIecCfgGinData->m_dwVersion, 2);
	Show_Check(pData, nRow, DATASET_COL_ID_GINDATA_TEST,    &pIecCfgGinData->m_bTest);
	Show_String(pData, nRow, DATASET_COL_ID_GINDATA_GCREF,    &pIecCfgGinData->m_strgocbRef);
	Show_String(pData, nRow, DATASET_COL_ID_GINDATA_DTSET,    &pIecCfgGinData->m_strDataSet);
	Show_String(pData, nRow, DATASET_COL_ID_GINDATA_GOID,    &pIecCfgGinData->m_strGooseId);
	Show_Check(pData, nRow, DATASET_COL_ID_GINDATA_NDS,    &pIecCfgGinData->m_bNdsCom);
	Show_Long(pData, nRow, DATASET_COL_ID_GINDATA_LIVE,    &pIecCfgGinData->m_nLiveTime);
	Show_Check(pData, nRow, DATASET_COL_ID_GINDATA_ANALY, &pIecCfgGinData->m_nAnalyze);


	nRow++;
}



void CIecCfgGinDataGrid::EndEditCell_Fiber_Gin (int nRow, int nCol,CGridCell *pCell, CGridCtrl *pGrid)
{
	PEXBASECELLDATA pVellData = (_ExBaseCellData*)pCell->lParam;
	ASSERT (pVellData != NULL);
	CIecCfgDataGridBase *pIecCfgDataGrid = (CIecCfgDataGridBase*)pGrid;

	CIecCfgDataBase *pIecCfgData = (CIecCfgDataBase*)pVellData->pObj;
	CIecCfgDatasBase *pIecCfgDatas = (CIecCfgDatasBase*)pIecCfgData->GetParent();
	long nFiberIndex = pIecCfgData->m_nFiberIndex;
	EndEditCell_DataType_Val(nRow, nCol, pCell, pGrid);
	CExBaseList oListUseDatas;

	if (nFiberIndex == pIecCfgData->m_nFiberIndex)
	{
		return;
	}

	pIecCfgDatas->GetUseDatas(oListUseDatas);

	if (oListUseDatas.FindIndex(pIecCfgData) < 8)
	{
		if (pIecCfgData->ValidateFiberIndex())
		{
			oListUseDatas.RemoveAll();
			return;
		}

		pIecCfgData->m_nFiberIndex = nFiberIndex;
		pIecCfgDataGrid->FreeExBaseCellData(nRow, nCol);
		pIecCfgDataGrid->Show_Fiber(pIecCfgData, nRow, nCol, &pIecCfgData->m_nFiberIndex);
	}
	else
	{
		//去掉头8个
		long nIndex = 0;
		POS pos = oListUseDatas.GetHeadPosition();

		while (nIndex<8)
		{
			oListUseDatas.RemoveAt(pos);
			pos = oListUseDatas.GetHeadPosition();
			nIndex++;
		}

		CExBaseList oListAll;
		pIecCfgDatas->GetIecCfgDatas(oListAll);
		pos = oListUseDatas.GetHeadPosition();
		nFiberIndex = pIecCfgData->m_nFiberIndex;

		while (pos != NULL)
		{
			pIecCfgData = (CIecCfgDataBase *)oListUseDatas.GetNext(pos);
			pIecCfgData->m_nFiberIndex = nFiberIndex;
			nRow = oListAll.FindIndex(pIecCfgData) + 1;
			pIecCfgDataGrid->FreeExBaseCellData(nRow, nCol);
			pIecCfgDataGrid->Show_Fiber(pIecCfgData, nRow, nCol, &pIecCfgData->m_nFiberIndex, EndEditCell_Fiber_Gin);
		}

		oListAll.RemoveAll();
	}


	oListUseDatas.RemoveAll();
}

