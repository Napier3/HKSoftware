// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CompensationPara.proto

#ifndef PROTOBUF_CompensationPara_2eproto__INCLUDED
#define PROTOBUF_CompensationPara_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace Compensation {
class ChanelCompensation;
class ChanelCompensationDefaultTypeInternal;
extern ChanelCompensationDefaultTypeInternal _ChanelCompensation_default_instance_;
class CompensationItem;
class CompensationItemDefaultTypeInternal;
extern CompensationItemDefaultTypeInternal _CompensationItem_default_instance_;
class CompensationItemData_PTU100;
class CompensationItemData_PTU100DefaultTypeInternal;
extern CompensationItemData_PTU100DefaultTypeInternal _CompensationItemData_PTU100_default_instance_;
class CompensationItemDc;
class CompensationItemDcDefaultTypeInternal;
extern CompensationItemDcDefaultTypeInternal _CompensationItemDc_default_instance_;
class module;
class moduleDefaultTypeInternal;
extern moduleDefaultTypeInternal _module_default_instance_;
class modules;
class modulesDefaultTypeInternal;
extern modulesDefaultTypeInternal _modules_default_instance_;
}  // namespace Compensation

namespace Compensation {

namespace protobuf_CompensationPara_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_CompensationPara_2eproto

// ===================================================================

class CompensationItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Compensation.CompensationItem) */ {
 public:
  CompensationItem();
  virtual ~CompensationItem();

  CompensationItem(const CompensationItem& from);

  inline CompensationItem& operator=(const CompensationItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompensationItem& default_instance();

  static inline const CompensationItem* internal_default_instance() {
    return reinterpret_cast<const CompensationItem*>(
               &_CompensationItem_default_instance_);
  }

  void Swap(CompensationItem* other);

  // implements Message ----------------------------------------------

  inline CompensationItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CompensationItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CompensationItem& from);
  void MergeFrom(const CompensationItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CompensationItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float fampcompensation = 1;
  void clear_fampcompensation();
  static const int kFampcompensationFieldNumber = 1;
  float fampcompensation() const;
  void set_fampcompensation(float value);

  // float fphcompensation = 2;
  void clear_fphcompensation();
  static const int kFphcompensationFieldNumber = 2;
  float fphcompensation() const;
  void set_fphcompensation(float value);

  // @@protoc_insertion_point(class_scope:Compensation.CompensationItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float fampcompensation_;
  float fphcompensation_;
  mutable int _cached_size_;
  friend struct  protobuf_CompensationPara_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompensationItemDc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Compensation.CompensationItemDc) */ {
 public:
  CompensationItemDc();
  virtual ~CompensationItemDc();

  CompensationItemDc(const CompensationItemDc& from);

  inline CompensationItemDc& operator=(const CompensationItemDc& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompensationItemDc& default_instance();

  static inline const CompensationItemDc* internal_default_instance() {
    return reinterpret_cast<const CompensationItemDc*>(
               &_CompensationItemDc_default_instance_);
  }

  void Swap(CompensationItemDc* other);

  // implements Message ----------------------------------------------

  inline CompensationItemDc* New() const PROTOBUF_FINAL { return New(NULL); }

  CompensationItemDc* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CompensationItemDc& from);
  void MergeFrom(const CompensationItemDc& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CompensationItemDc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float fampcompensation = 1;
  void clear_fampcompensation();
  static const int kFampcompensationFieldNumber = 1;
  float fampcompensation() const;
  void set_fampcompensation(float value);

  // float fzeroshift = 2;
  void clear_fzeroshift();
  static const int kFzeroshiftFieldNumber = 2;
  float fzeroshift() const;
  void set_fzeroshift(float value);

  // @@protoc_insertion_point(class_scope:Compensation.CompensationItemDc)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float fampcompensation_;
  float fzeroshift_;
  mutable int _cached_size_;
  friend struct  protobuf_CompensationPara_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChanelCompensation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Compensation.ChanelCompensation) */ {
 public:
  ChanelCompensation();
  virtual ~ChanelCompensation();

  ChanelCompensation(const ChanelCompensation& from);

  inline ChanelCompensation& operator=(const ChanelCompensation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChanelCompensation& default_instance();

  static inline const ChanelCompensation* internal_default_instance() {
    return reinterpret_cast<const ChanelCompensation*>(
               &_ChanelCompensation_default_instance_);
  }

  void Swap(ChanelCompensation* other);

  // implements Message ----------------------------------------------

  inline ChanelCompensation* New() const PROTOBUF_FINAL { return New(NULL); }

  ChanelCompensation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChanelCompensation& from);
  void MergeFrom(const ChanelCompensation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChanelCompensation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Compensation.CompensationItem oharms = 2;
  int oharms_size() const;
  void clear_oharms();
  static const int kOharmsFieldNumber = 2;
  const ::Compensation::CompensationItem& oharms(int index) const;
  ::Compensation::CompensationItem* mutable_oharms(int index);
  ::Compensation::CompensationItem* add_oharms();
  ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItem >*
      mutable_oharms();
  const ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItem >&
      oharms() const;

  // repeated float fTempXs = 3;
  int ftempxs_size() const;
  void clear_ftempxs();
  static const int kFTempXsFieldNumber = 3;
  float ftempxs(int index) const;
  void set_ftempxs(int index, float value);
  void add_ftempxs(float value);
  const ::google::protobuf::RepeatedField< float >&
      ftempxs() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_ftempxs();

  // repeated .Compensation.CompensationItemDc oDCoutput = 6;
  int odcoutput_size() const;
  void clear_odcoutput();
  static const int kODCoutputFieldNumber = 6;
  const ::Compensation::CompensationItemDc& odcoutput(int index) const;
  ::Compensation::CompensationItemDc* mutable_odcoutput(int index);
  ::Compensation::CompensationItemDc* add_odcoutput();
  ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItemDc >*
      mutable_odcoutput();
  const ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItemDc >&
      odcoutput() const;

  // float fzeroshift = 1;
  void clear_fzeroshift();
  static const int kFzeroshiftFieldNumber = 1;
  float fzeroshift() const;
  void set_fzeroshift(float value);

  // float fdczeroshft = 4;
  void clear_fdczeroshft();
  static const int kFdczeroshftFieldNumber = 4;
  float fdczeroshft() const;
  void set_fdczeroshft(float value);

  // float fMaxCurrentRatio = 5;
  void clear_fmaxcurrentratio();
  static const int kFMaxCurrentRatioFieldNumber = 5;
  float fmaxcurrentratio() const;
  void set_fmaxcurrentratio(float value);

  // @@protoc_insertion_point(class_scope:Compensation.ChanelCompensation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItem > oharms_;
  ::google::protobuf::RepeatedField< float > ftempxs_;
  mutable int _ftempxs_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItemDc > odcoutput_;
  float fzeroshift_;
  float fdczeroshft_;
  float fmaxcurrentratio_;
  mutable int _cached_size_;
  friend struct  protobuf_CompensationPara_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class module : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Compensation.module) */ {
 public:
  module();
  virtual ~module();

  module(const module& from);

  inline module& operator=(const module& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const module& default_instance();

  static inline const module* internal_default_instance() {
    return reinterpret_cast<const module*>(
               &_module_default_instance_);
  }

  void Swap(module* other);

  // implements Message ----------------------------------------------

  inline module* New() const PROTOBUF_FINAL { return New(NULL); }

  module* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const module& from);
  void MergeFrom(const module& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(module* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Compensation.ChanelCompensation chanelItem = 1;
  int chanelitem_size() const;
  void clear_chanelitem();
  static const int kChanelItemFieldNumber = 1;
  const ::Compensation::ChanelCompensation& chanelitem(int index) const;
  ::Compensation::ChanelCompensation* mutable_chanelitem(int index);
  ::Compensation::ChanelCompensation* add_chanelitem();
  ::google::protobuf::RepeatedPtrField< ::Compensation::ChanelCompensation >*
      mutable_chanelitem();
  const ::google::protobuf::RepeatedPtrField< ::Compensation::ChanelCompensation >&
      chanelitem() const;

  // repeated float fVolt = 20;
  int fvolt_size() const;
  void clear_fvolt();
  static const int kFVoltFieldNumber = 20;
  float fvolt(int index) const;
  void set_fvolt(int index, float value);
  void add_fvolt(float value);
  const ::google::protobuf::RepeatedField< float >&
      fvolt() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_fvolt();

  // string filename = 3;
  void clear_filename();
  static const int kFilenameFieldNumber = 3;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string ModuleNo = 7;
  void clear_moduleno();
  static const int kModuleNoFieldNumber = 7;
  const ::std::string& moduleno() const;
  void set_moduleno(const ::std::string& value);
  #if LANG_CXX11
  void set_moduleno(::std::string&& value);
  #endif
  void set_moduleno(const char* value);
  void set_moduleno(const char* value, size_t size);
  ::std::string* mutable_moduleno();
  ::std::string* release_moduleno();
  void set_allocated_moduleno(::std::string* moduleno);

  // uint32 nmodule = 2;
  void clear_nmodule();
  static const int kNmoduleFieldNumber = 2;
  ::google::protobuf::uint32 nmodule() const;
  void set_nmodule(::google::protobuf::uint32 value);

  // float frexs = 4;
  void clear_frexs();
  static const int kFrexsFieldNumber = 4;
  float frexs() const;
  void set_frexs(float value);

  // float faxudc = 5;
  void clear_faxudc();
  static const int kFaxudcFieldNumber = 5;
  float faxudc() const;
  void set_faxudc(float value);

  // float faxuzeroshift = 6;
  void clear_faxuzeroshift();
  static const int kFaxuzeroshiftFieldNumber = 6;
  float faxuzeroshift() const;
  void set_faxuzeroshift(float value);

  // uint32 nmaxValue = 8;
  void clear_nmaxvalue();
  static const int kNmaxValueFieldNumber = 8;
  ::google::protobuf::uint32 nmaxvalue() const;
  void set_nmaxvalue(::google::protobuf::uint32 value);

  // uint32 chanelNum = 9;
  void clear_chanelnum();
  static const int kChanelNumFieldNumber = 9;
  ::google::protobuf::uint32 chanelnum() const;
  void set_chanelnum(::google::protobuf::uint32 value);

  // float fgain = 10;
  void clear_fgain();
  static const int kFgainFieldNumber = 10;
  float fgain() const;
  void set_fgain(float value);

  // float faxumaxdc = 11;
  void clear_faxumaxdc();
  static const int kFaxumaxdcFieldNumber = 11;
  float faxumaxdc() const;
  void set_faxumaxdc(float value);

  // float faxugain = 12;
  void clear_faxugain();
  static const int kFaxugainFieldNumber = 12;
  float faxugain() const;
  void set_faxugain(float value);

  // uint32 nvoltorcur = 13;
  void clear_nvoltorcur();
  static const int kNvoltorcurFieldNumber = 13;
  ::google::protobuf::uint32 nvoltorcur() const;
  void set_nvoltorcur(::google::protobuf::uint32 value);

  // uint32 powermode = 14;
  void clear_powermode();
  static const int kPowermodeFieldNumber = 14;
  ::google::protobuf::uint32 powermode() const;
  void set_powermode(::google::protobuf::uint32 value);

  // float foldagesetvolt = 15;
  void clear_foldagesetvolt();
  static const int kFoldagesetvoltFieldNumber = 15;
  float foldagesetvolt() const;
  void set_foldagesetvolt(float value);

  // float fACVoltMax = 16;
  void clear_facvoltmax();
  static const int kFACVoltMaxFieldNumber = 16;
  float facvoltmax() const;
  void set_facvoltmax(float value);

  // float fsetACVoltMax = 17;
  void clear_fsetacvoltmax();
  static const int kFsetACVoltMaxFieldNumber = 17;
  float fsetacvoltmax() const;
  void set_fsetacvoltmax(float value);

  // float fDCVoltMax = 18;
  void clear_fdcvoltmax();
  static const int kFDCVoltMaxFieldNumber = 18;
  float fdcvoltmax() const;
  void set_fdcvoltmax(float value);

  // float fsetDCVoltMax = 19;
  void clear_fsetdcvoltmax();
  static const int kFsetDCVoltMaxFieldNumber = 19;
  float fsetdcvoltmax() const;
  void set_fsetdcvoltmax(float value);

  // uint32 nFPGAVersion = 21;
  void clear_nfpgaversion();
  static const int kNFPGAVersionFieldNumber = 21;
  ::google::protobuf::uint32 nfpgaversion() const;
  void set_nfpgaversion(::google::protobuf::uint32 value);

  // float fdigitaldelay = 22;
  void clear_fdigitaldelay();
  static const int kFdigitaldelayFieldNumber = 22;
  float fdigitaldelay() const;
  void set_fdigitaldelay(float value);

  // uint32 nTemp = 23;
  void clear_ntemp();
  static const int kNTempFieldNumber = 23;
  ::google::protobuf::uint32 ntemp() const;
  void set_ntemp(::google::protobuf::uint32 value);

  // uint32 nTemp1 = 24;
  void clear_ntemp1();
  static const int kNTemp1FieldNumber = 24;
  ::google::protobuf::uint32 ntemp1() const;
  void set_ntemp1(::google::protobuf::uint32 value);

  // float fTemp = 25;
  void clear_ftemp();
  static const int kFTempFieldNumber = 25;
  float ftemp() const;
  void set_ftemp(float value);

  // float fTemp1 = 26;
  void clear_ftemp1();
  static const int kFTemp1FieldNumber = 26;
  float ftemp1() const;
  void set_ftemp1(float value);

  // bool bMultiple = 27;
  void clear_bmultiple();
  static const int kBMultipleFieldNumber = 27;
  bool bmultiple() const;
  void set_bmultiple(bool value);

  // @@protoc_insertion_point(class_scope:Compensation.module)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Compensation::ChanelCompensation > chanelitem_;
  ::google::protobuf::RepeatedField< float > fvolt_;
  mutable int _fvolt_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr moduleno_;
  ::google::protobuf::uint32 nmodule_;
  float frexs_;
  float faxudc_;
  float faxuzeroshift_;
  ::google::protobuf::uint32 nmaxvalue_;
  ::google::protobuf::uint32 chanelnum_;
  float fgain_;
  float faxumaxdc_;
  float faxugain_;
  ::google::protobuf::uint32 nvoltorcur_;
  ::google::protobuf::uint32 powermode_;
  float foldagesetvolt_;
  float facvoltmax_;
  float fsetacvoltmax_;
  float fdcvoltmax_;
  float fsetdcvoltmax_;
  ::google::protobuf::uint32 nfpgaversion_;
  float fdigitaldelay_;
  ::google::protobuf::uint32 ntemp_;
  ::google::protobuf::uint32 ntemp1_;
  float ftemp_;
  float ftemp1_;
  bool bmultiple_;
  mutable int _cached_size_;
  friend struct  protobuf_CompensationPara_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompensationItemData_PTU100 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Compensation.CompensationItemData_PTU100) */ {
 public:
  CompensationItemData_PTU100();
  virtual ~CompensationItemData_PTU100();

  CompensationItemData_PTU100(const CompensationItemData_PTU100& from);

  inline CompensationItemData_PTU100& operator=(const CompensationItemData_PTU100& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompensationItemData_PTU100& default_instance();

  static inline const CompensationItemData_PTU100* internal_default_instance() {
    return reinterpret_cast<const CompensationItemData_PTU100*>(
               &_CompensationItemData_PTU100_default_instance_);
  }

  void Swap(CompensationItemData_PTU100* other);

  // implements Message ----------------------------------------------

  inline CompensationItemData_PTU100* New() const PROTOBUF_FINAL { return New(NULL); }

  CompensationItemData_PTU100* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CompensationItemData_PTU100& from);
  void MergeFrom(const CompensationItemData_PTU100& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CompensationItemData_PTU100* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float fampcompensation = 1;
  int fampcompensation_size() const;
  void clear_fampcompensation();
  static const int kFampcompensationFieldNumber = 1;
  float fampcompensation(int index) const;
  void set_fampcompensation(int index, float value);
  void add_fampcompensation(float value);
  const ::google::protobuf::RepeatedField< float >&
      fampcompensation() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_fampcompensation();

  // repeated float fphcompensation = 2;
  int fphcompensation_size() const;
  void clear_fphcompensation();
  static const int kFphcompensationFieldNumber = 2;
  float fphcompensation(int index) const;
  void set_fphcompensation(int index, float value);
  void add_fphcompensation(float value);
  const ::google::protobuf::RepeatedField< float >&
      fphcompensation() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_fphcompensation();

  // repeated float fzeroshift = 3;
  int fzeroshift_size() const;
  void clear_fzeroshift();
  static const int kFzeroshiftFieldNumber = 3;
  float fzeroshift(int index) const;
  void set_fzeroshift(int index, float value);
  void add_fzeroshift(float value);
  const ::google::protobuf::RepeatedField< float >&
      fzeroshift() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_fzeroshift();

  // repeated float Other1 = 4;
  int other1_size() const;
  void clear_other1();
  static const int kOther1FieldNumber = 4;
  float other1(int index) const;
  void set_other1(int index, float value);
  void add_other1(float value);
  const ::google::protobuf::RepeatedField< float >&
      other1() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_other1();

  // repeated float Other2 = 5;
  int other2_size() const;
  void clear_other2();
  static const int kOther2FieldNumber = 5;
  float other2(int index) const;
  void set_other2(int index, float value);
  void add_other2(float value);
  const ::google::protobuf::RepeatedField< float >&
      other2() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_other2();

  // repeated float Other3 = 6;
  int other3_size() const;
  void clear_other3();
  static const int kOther3FieldNumber = 6;
  float other3(int index) const;
  void set_other3(int index, float value);
  void add_other3(float value);
  const ::google::protobuf::RepeatedField< float >&
      other3() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_other3();

  // @@protoc_insertion_point(class_scope:Compensation.CompensationItemData_PTU100)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > fampcompensation_;
  mutable int _fampcompensation_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > fphcompensation_;
  mutable int _fphcompensation_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > fzeroshift_;
  mutable int _fzeroshift_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > other1_;
  mutable int _other1_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > other2_;
  mutable int _other2_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > other3_;
  mutable int _other3_cached_byte_size_;
  mutable int _cached_size_;
  friend struct  protobuf_CompensationPara_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class modules : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Compensation.modules) */ {
 public:
  modules();
  virtual ~modules();

  modules(const modules& from);

  inline modules& operator=(const modules& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const modules& default_instance();

  static inline const modules* internal_default_instance() {
    return reinterpret_cast<const modules*>(
               &_modules_default_instance_);
  }

  void Swap(modules* other);

  // implements Message ----------------------------------------------

  inline modules* New() const PROTOBUF_FINAL { return New(NULL); }

  modules* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const modules& from);
  void MergeFrom(const modules& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(modules* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Compensation.module moduleChanel = 1;
  int modulechanel_size() const;
  void clear_modulechanel();
  static const int kModuleChanelFieldNumber = 1;
  const ::Compensation::module& modulechanel(int index) const;
  ::Compensation::module* mutable_modulechanel(int index);
  ::Compensation::module* add_modulechanel();
  ::google::protobuf::RepeatedPtrField< ::Compensation::module >*
      mutable_modulechanel();
  const ::google::protobuf::RepeatedPtrField< ::Compensation::module >&
      modulechanel() const;

  // uint32 nUDCtest = 2;
  void clear_nudctest();
  static const int kNUDCtestFieldNumber = 2;
  ::google::protobuf::uint32 nudctest() const;
  void set_nudctest(::google::protobuf::uint32 value);

  // uint32 nIDCtest = 3;
  void clear_nidctest();
  static const int kNIDCtestFieldNumber = 3;
  ::google::protobuf::uint32 nidctest() const;
  void set_nidctest(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Compensation.modules)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Compensation::module > modulechanel_;
  ::google::protobuf::uint32 nudctest_;
  ::google::protobuf::uint32 nidctest_;
  mutable int _cached_size_;
  friend struct  protobuf_CompensationPara_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CompensationItem

// float fampcompensation = 1;
inline void CompensationItem::clear_fampcompensation() {
  fampcompensation_ = 0;
}
inline float CompensationItem::fampcompensation() const {
  // @@protoc_insertion_point(field_get:Compensation.CompensationItem.fampcompensation)
  return fampcompensation_;
}
inline void CompensationItem::set_fampcompensation(float value) {
  
  fampcompensation_ = value;
  // @@protoc_insertion_point(field_set:Compensation.CompensationItem.fampcompensation)
}

// float fphcompensation = 2;
inline void CompensationItem::clear_fphcompensation() {
  fphcompensation_ = 0;
}
inline float CompensationItem::fphcompensation() const {
  // @@protoc_insertion_point(field_get:Compensation.CompensationItem.fphcompensation)
  return fphcompensation_;
}
inline void CompensationItem::set_fphcompensation(float value) {
  
  fphcompensation_ = value;
  // @@protoc_insertion_point(field_set:Compensation.CompensationItem.fphcompensation)
}

// -------------------------------------------------------------------

// CompensationItemDc

// float fampcompensation = 1;
inline void CompensationItemDc::clear_fampcompensation() {
  fampcompensation_ = 0;
}
inline float CompensationItemDc::fampcompensation() const {
  // @@protoc_insertion_point(field_get:Compensation.CompensationItemDc.fampcompensation)
  return fampcompensation_;
}
inline void CompensationItemDc::set_fampcompensation(float value) {
  
  fampcompensation_ = value;
  // @@protoc_insertion_point(field_set:Compensation.CompensationItemDc.fampcompensation)
}

// float fzeroshift = 2;
inline void CompensationItemDc::clear_fzeroshift() {
  fzeroshift_ = 0;
}
inline float CompensationItemDc::fzeroshift() const {
  // @@protoc_insertion_point(field_get:Compensation.CompensationItemDc.fzeroshift)
  return fzeroshift_;
}
inline void CompensationItemDc::set_fzeroshift(float value) {
  
  fzeroshift_ = value;
  // @@protoc_insertion_point(field_set:Compensation.CompensationItemDc.fzeroshift)
}

// -------------------------------------------------------------------

// ChanelCompensation

// float fzeroshift = 1;
inline void ChanelCompensation::clear_fzeroshift() {
  fzeroshift_ = 0;
}
inline float ChanelCompensation::fzeroshift() const {
  // @@protoc_insertion_point(field_get:Compensation.ChanelCompensation.fzeroshift)
  return fzeroshift_;
}
inline void ChanelCompensation::set_fzeroshift(float value) {
  
  fzeroshift_ = value;
  // @@protoc_insertion_point(field_set:Compensation.ChanelCompensation.fzeroshift)
}

// repeated .Compensation.CompensationItem oharms = 2;
inline int ChanelCompensation::oharms_size() const {
  return oharms_.size();
}
inline void ChanelCompensation::clear_oharms() {
  oharms_.Clear();
}
inline const ::Compensation::CompensationItem& ChanelCompensation::oharms(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.ChanelCompensation.oharms)
  return oharms_.Get(index);
}
inline ::Compensation::CompensationItem* ChanelCompensation::mutable_oharms(int index) {
  // @@protoc_insertion_point(field_mutable:Compensation.ChanelCompensation.oharms)
  return oharms_.Mutable(index);
}
inline ::Compensation::CompensationItem* ChanelCompensation::add_oharms() {
  // @@protoc_insertion_point(field_add:Compensation.ChanelCompensation.oharms)
  return oharms_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItem >*
ChanelCompensation::mutable_oharms() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.ChanelCompensation.oharms)
  return &oharms_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItem >&
ChanelCompensation::oharms() const {
  // @@protoc_insertion_point(field_list:Compensation.ChanelCompensation.oharms)
  return oharms_;
}

// repeated float fTempXs = 3;
inline int ChanelCompensation::ftempxs_size() const {
  return ftempxs_.size();
}
inline void ChanelCompensation::clear_ftempxs() {
  ftempxs_.Clear();
}
inline float ChanelCompensation::ftempxs(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.ChanelCompensation.fTempXs)
  return ftempxs_.Get(index);
}
inline void ChanelCompensation::set_ftempxs(int index, float value) {
  ftempxs_.Set(index, value);
  // @@protoc_insertion_point(field_set:Compensation.ChanelCompensation.fTempXs)
}
inline void ChanelCompensation::add_ftempxs(float value) {
  ftempxs_.Add(value);
  // @@protoc_insertion_point(field_add:Compensation.ChanelCompensation.fTempXs)
}
inline const ::google::protobuf::RepeatedField< float >&
ChanelCompensation::ftempxs() const {
  // @@protoc_insertion_point(field_list:Compensation.ChanelCompensation.fTempXs)
  return ftempxs_;
}
inline ::google::protobuf::RepeatedField< float >*
ChanelCompensation::mutable_ftempxs() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.ChanelCompensation.fTempXs)
  return &ftempxs_;
}

// float fdczeroshft = 4;
inline void ChanelCompensation::clear_fdczeroshft() {
  fdczeroshft_ = 0;
}
inline float ChanelCompensation::fdczeroshft() const {
  // @@protoc_insertion_point(field_get:Compensation.ChanelCompensation.fdczeroshft)
  return fdczeroshft_;
}
inline void ChanelCompensation::set_fdczeroshft(float value) {
  
  fdczeroshft_ = value;
  // @@protoc_insertion_point(field_set:Compensation.ChanelCompensation.fdczeroshft)
}

// float fMaxCurrentRatio = 5;
inline void ChanelCompensation::clear_fmaxcurrentratio() {
  fmaxcurrentratio_ = 0;
}
inline float ChanelCompensation::fmaxcurrentratio() const {
  // @@protoc_insertion_point(field_get:Compensation.ChanelCompensation.fMaxCurrentRatio)
  return fmaxcurrentratio_;
}
inline void ChanelCompensation::set_fmaxcurrentratio(float value) {
  
  fmaxcurrentratio_ = value;
  // @@protoc_insertion_point(field_set:Compensation.ChanelCompensation.fMaxCurrentRatio)
}

// repeated .Compensation.CompensationItemDc oDCoutput = 6;
inline int ChanelCompensation::odcoutput_size() const {
  return odcoutput_.size();
}
inline void ChanelCompensation::clear_odcoutput() {
  odcoutput_.Clear();
}
inline const ::Compensation::CompensationItemDc& ChanelCompensation::odcoutput(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.ChanelCompensation.oDCoutput)
  return odcoutput_.Get(index);
}
inline ::Compensation::CompensationItemDc* ChanelCompensation::mutable_odcoutput(int index) {
  // @@protoc_insertion_point(field_mutable:Compensation.ChanelCompensation.oDCoutput)
  return odcoutput_.Mutable(index);
}
inline ::Compensation::CompensationItemDc* ChanelCompensation::add_odcoutput() {
  // @@protoc_insertion_point(field_add:Compensation.ChanelCompensation.oDCoutput)
  return odcoutput_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItemDc >*
ChanelCompensation::mutable_odcoutput() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.ChanelCompensation.oDCoutput)
  return &odcoutput_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItemDc >&
ChanelCompensation::odcoutput() const {
  // @@protoc_insertion_point(field_list:Compensation.ChanelCompensation.oDCoutput)
  return odcoutput_;
}

// -------------------------------------------------------------------

// module

// repeated .Compensation.ChanelCompensation chanelItem = 1;
inline int module::chanelitem_size() const {
  return chanelitem_.size();
}
inline void module::clear_chanelitem() {
  chanelitem_.Clear();
}
inline const ::Compensation::ChanelCompensation& module::chanelitem(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.module.chanelItem)
  return chanelitem_.Get(index);
}
inline ::Compensation::ChanelCompensation* module::mutable_chanelitem(int index) {
  // @@protoc_insertion_point(field_mutable:Compensation.module.chanelItem)
  return chanelitem_.Mutable(index);
}
inline ::Compensation::ChanelCompensation* module::add_chanelitem() {
  // @@protoc_insertion_point(field_add:Compensation.module.chanelItem)
  return chanelitem_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Compensation::ChanelCompensation >*
module::mutable_chanelitem() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.module.chanelItem)
  return &chanelitem_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Compensation::ChanelCompensation >&
module::chanelitem() const {
  // @@protoc_insertion_point(field_list:Compensation.module.chanelItem)
  return chanelitem_;
}

// uint32 nmodule = 2;
inline void module::clear_nmodule() {
  nmodule_ = 0u;
}
inline ::google::protobuf::uint32 module::nmodule() const {
  // @@protoc_insertion_point(field_get:Compensation.module.nmodule)
  return nmodule_;
}
inline void module::set_nmodule(::google::protobuf::uint32 value) {
  
  nmodule_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.nmodule)
}

// string filename = 3;
inline void module::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& module::filename() const {
  // @@protoc_insertion_point(field_get:Compensation.module.filename)
  return filename_.GetNoArena();
}
inline void module::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Compensation.module.filename)
}
#if LANG_CXX11
inline void module::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Compensation.module.filename)
}
#endif
inline void module::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Compensation.module.filename)
}
inline void module::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Compensation.module.filename)
}
inline ::std::string* module::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:Compensation.module.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* module::release_filename() {
  // @@protoc_insertion_point(field_release:Compensation.module.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void module::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:Compensation.module.filename)
}

// float frexs = 4;
inline void module::clear_frexs() {
  frexs_ = 0;
}
inline float module::frexs() const {
  // @@protoc_insertion_point(field_get:Compensation.module.frexs)
  return frexs_;
}
inline void module::set_frexs(float value) {
  
  frexs_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.frexs)
}

// float faxudc = 5;
inline void module::clear_faxudc() {
  faxudc_ = 0;
}
inline float module::faxudc() const {
  // @@protoc_insertion_point(field_get:Compensation.module.faxudc)
  return faxudc_;
}
inline void module::set_faxudc(float value) {
  
  faxudc_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.faxudc)
}

// float faxuzeroshift = 6;
inline void module::clear_faxuzeroshift() {
  faxuzeroshift_ = 0;
}
inline float module::faxuzeroshift() const {
  // @@protoc_insertion_point(field_get:Compensation.module.faxuzeroshift)
  return faxuzeroshift_;
}
inline void module::set_faxuzeroshift(float value) {
  
  faxuzeroshift_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.faxuzeroshift)
}

// string ModuleNo = 7;
inline void module::clear_moduleno() {
  moduleno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& module::moduleno() const {
  // @@protoc_insertion_point(field_get:Compensation.module.ModuleNo)
  return moduleno_.GetNoArena();
}
inline void module::set_moduleno(const ::std::string& value) {
  
  moduleno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Compensation.module.ModuleNo)
}
#if LANG_CXX11
inline void module::set_moduleno(::std::string&& value) {
  
  moduleno_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Compensation.module.ModuleNo)
}
#endif
inline void module::set_moduleno(const char* value) {
  
  moduleno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Compensation.module.ModuleNo)
}
inline void module::set_moduleno(const char* value, size_t size) {
  
  moduleno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Compensation.module.ModuleNo)
}
inline ::std::string* module::mutable_moduleno() {
  
  // @@protoc_insertion_point(field_mutable:Compensation.module.ModuleNo)
  return moduleno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* module::release_moduleno() {
  // @@protoc_insertion_point(field_release:Compensation.module.ModuleNo)
  
  return moduleno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void module::set_allocated_moduleno(::std::string* moduleno) {
  if (moduleno != NULL) {
    
  } else {
    
  }
  moduleno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), moduleno);
  // @@protoc_insertion_point(field_set_allocated:Compensation.module.ModuleNo)
}

// uint32 nmaxValue = 8;
inline void module::clear_nmaxvalue() {
  nmaxvalue_ = 0u;
}
inline ::google::protobuf::uint32 module::nmaxvalue() const {
  // @@protoc_insertion_point(field_get:Compensation.module.nmaxValue)
  return nmaxvalue_;
}
inline void module::set_nmaxvalue(::google::protobuf::uint32 value) {
  
  nmaxvalue_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.nmaxValue)
}

// uint32 chanelNum = 9;
inline void module::clear_chanelnum() {
  chanelnum_ = 0u;
}
inline ::google::protobuf::uint32 module::chanelnum() const {
  // @@protoc_insertion_point(field_get:Compensation.module.chanelNum)
  return chanelnum_;
}
inline void module::set_chanelnum(::google::protobuf::uint32 value) {
  
  chanelnum_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.chanelNum)
}

// float fgain = 10;
inline void module::clear_fgain() {
  fgain_ = 0;
}
inline float module::fgain() const {
  // @@protoc_insertion_point(field_get:Compensation.module.fgain)
  return fgain_;
}
inline void module::set_fgain(float value) {
  
  fgain_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.fgain)
}

// float faxumaxdc = 11;
inline void module::clear_faxumaxdc() {
  faxumaxdc_ = 0;
}
inline float module::faxumaxdc() const {
  // @@protoc_insertion_point(field_get:Compensation.module.faxumaxdc)
  return faxumaxdc_;
}
inline void module::set_faxumaxdc(float value) {
  
  faxumaxdc_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.faxumaxdc)
}

// float faxugain = 12;
inline void module::clear_faxugain() {
  faxugain_ = 0;
}
inline float module::faxugain() const {
  // @@protoc_insertion_point(field_get:Compensation.module.faxugain)
  return faxugain_;
}
inline void module::set_faxugain(float value) {
  
  faxugain_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.faxugain)
}

// uint32 nvoltorcur = 13;
inline void module::clear_nvoltorcur() {
  nvoltorcur_ = 0u;
}
inline ::google::protobuf::uint32 module::nvoltorcur() const {
  // @@protoc_insertion_point(field_get:Compensation.module.nvoltorcur)
  return nvoltorcur_;
}
inline void module::set_nvoltorcur(::google::protobuf::uint32 value) {
  
  nvoltorcur_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.nvoltorcur)
}

// uint32 powermode = 14;
inline void module::clear_powermode() {
  powermode_ = 0u;
}
inline ::google::protobuf::uint32 module::powermode() const {
  // @@protoc_insertion_point(field_get:Compensation.module.powermode)
  return powermode_;
}
inline void module::set_powermode(::google::protobuf::uint32 value) {
  
  powermode_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.powermode)
}

// float foldagesetvolt = 15;
inline void module::clear_foldagesetvolt() {
  foldagesetvolt_ = 0;
}
inline float module::foldagesetvolt() const {
  // @@protoc_insertion_point(field_get:Compensation.module.foldagesetvolt)
  return foldagesetvolt_;
}
inline void module::set_foldagesetvolt(float value) {
  
  foldagesetvolt_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.foldagesetvolt)
}

// float fACVoltMax = 16;
inline void module::clear_facvoltmax() {
  facvoltmax_ = 0;
}
inline float module::facvoltmax() const {
  // @@protoc_insertion_point(field_get:Compensation.module.fACVoltMax)
  return facvoltmax_;
}
inline void module::set_facvoltmax(float value) {
  
  facvoltmax_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.fACVoltMax)
}

// float fsetACVoltMax = 17;
inline void module::clear_fsetacvoltmax() {
  fsetacvoltmax_ = 0;
}
inline float module::fsetacvoltmax() const {
  // @@protoc_insertion_point(field_get:Compensation.module.fsetACVoltMax)
  return fsetacvoltmax_;
}
inline void module::set_fsetacvoltmax(float value) {
  
  fsetacvoltmax_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.fsetACVoltMax)
}

// float fDCVoltMax = 18;
inline void module::clear_fdcvoltmax() {
  fdcvoltmax_ = 0;
}
inline float module::fdcvoltmax() const {
  // @@protoc_insertion_point(field_get:Compensation.module.fDCVoltMax)
  return fdcvoltmax_;
}
inline void module::set_fdcvoltmax(float value) {
  
  fdcvoltmax_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.fDCVoltMax)
}

// float fsetDCVoltMax = 19;
inline void module::clear_fsetdcvoltmax() {
  fsetdcvoltmax_ = 0;
}
inline float module::fsetdcvoltmax() const {
  // @@protoc_insertion_point(field_get:Compensation.module.fsetDCVoltMax)
  return fsetdcvoltmax_;
}
inline void module::set_fsetdcvoltmax(float value) {
  
  fsetdcvoltmax_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.fsetDCVoltMax)
}

// repeated float fVolt = 20;
inline int module::fvolt_size() const {
  return fvolt_.size();
}
inline void module::clear_fvolt() {
  fvolt_.Clear();
}
inline float module::fvolt(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.module.fVolt)
  return fvolt_.Get(index);
}
inline void module::set_fvolt(int index, float value) {
  fvolt_.Set(index, value);
  // @@protoc_insertion_point(field_set:Compensation.module.fVolt)
}
inline void module::add_fvolt(float value) {
  fvolt_.Add(value);
  // @@protoc_insertion_point(field_add:Compensation.module.fVolt)
}
inline const ::google::protobuf::RepeatedField< float >&
module::fvolt() const {
  // @@protoc_insertion_point(field_list:Compensation.module.fVolt)
  return fvolt_;
}
inline ::google::protobuf::RepeatedField< float >*
module::mutable_fvolt() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.module.fVolt)
  return &fvolt_;
}

// uint32 nFPGAVersion = 21;
inline void module::clear_nfpgaversion() {
  nfpgaversion_ = 0u;
}
inline ::google::protobuf::uint32 module::nfpgaversion() const {
  // @@protoc_insertion_point(field_get:Compensation.module.nFPGAVersion)
  return nfpgaversion_;
}
inline void module::set_nfpgaversion(::google::protobuf::uint32 value) {
  
  nfpgaversion_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.nFPGAVersion)
}

// float fdigitaldelay = 22;
inline void module::clear_fdigitaldelay() {
  fdigitaldelay_ = 0;
}
inline float module::fdigitaldelay() const {
  // @@protoc_insertion_point(field_get:Compensation.module.fdigitaldelay)
  return fdigitaldelay_;
}
inline void module::set_fdigitaldelay(float value) {
  
  fdigitaldelay_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.fdigitaldelay)
}

// uint32 nTemp = 23;
inline void module::clear_ntemp() {
  ntemp_ = 0u;
}
inline ::google::protobuf::uint32 module::ntemp() const {
  // @@protoc_insertion_point(field_get:Compensation.module.nTemp)
  return ntemp_;
}
inline void module::set_ntemp(::google::protobuf::uint32 value) {
  
  ntemp_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.nTemp)
}

// uint32 nTemp1 = 24;
inline void module::clear_ntemp1() {
  ntemp1_ = 0u;
}
inline ::google::protobuf::uint32 module::ntemp1() const {
  // @@protoc_insertion_point(field_get:Compensation.module.nTemp1)
  return ntemp1_;
}
inline void module::set_ntemp1(::google::protobuf::uint32 value) {
  
  ntemp1_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.nTemp1)
}

// float fTemp = 25;
inline void module::clear_ftemp() {
  ftemp_ = 0;
}
inline float module::ftemp() const {
  // @@protoc_insertion_point(field_get:Compensation.module.fTemp)
  return ftemp_;
}
inline void module::set_ftemp(float value) {
  
  ftemp_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.fTemp)
}

// float fTemp1 = 26;
inline void module::clear_ftemp1() {
  ftemp1_ = 0;
}
inline float module::ftemp1() const {
  // @@protoc_insertion_point(field_get:Compensation.module.fTemp1)
  return ftemp1_;
}
inline void module::set_ftemp1(float value) {
  
  ftemp1_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.fTemp1)
}

// bool bMultiple = 27;
inline void module::clear_bmultiple() {
  bmultiple_ = false;
}
inline bool module::bmultiple() const {
  // @@protoc_insertion_point(field_get:Compensation.module.bMultiple)
  return bmultiple_;
}
inline void module::set_bmultiple(bool value) {
  
  bmultiple_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.bMultiple)
}

// -------------------------------------------------------------------

// CompensationItemData_PTU100

// repeated float fampcompensation = 1;
inline int CompensationItemData_PTU100::fampcompensation_size() const {
  return fampcompensation_.size();
}
inline void CompensationItemData_PTU100::clear_fampcompensation() {
  fampcompensation_.Clear();
}
inline float CompensationItemData_PTU100::fampcompensation(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.CompensationItemData_PTU100.fampcompensation)
  return fampcompensation_.Get(index);
}
inline void CompensationItemData_PTU100::set_fampcompensation(int index, float value) {
  fampcompensation_.Set(index, value);
  // @@protoc_insertion_point(field_set:Compensation.CompensationItemData_PTU100.fampcompensation)
}
inline void CompensationItemData_PTU100::add_fampcompensation(float value) {
  fampcompensation_.Add(value);
  // @@protoc_insertion_point(field_add:Compensation.CompensationItemData_PTU100.fampcompensation)
}
inline const ::google::protobuf::RepeatedField< float >&
CompensationItemData_PTU100::fampcompensation() const {
  // @@protoc_insertion_point(field_list:Compensation.CompensationItemData_PTU100.fampcompensation)
  return fampcompensation_;
}
inline ::google::protobuf::RepeatedField< float >*
CompensationItemData_PTU100::mutable_fampcompensation() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.CompensationItemData_PTU100.fampcompensation)
  return &fampcompensation_;
}

// repeated float fphcompensation = 2;
inline int CompensationItemData_PTU100::fphcompensation_size() const {
  return fphcompensation_.size();
}
inline void CompensationItemData_PTU100::clear_fphcompensation() {
  fphcompensation_.Clear();
}
inline float CompensationItemData_PTU100::fphcompensation(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.CompensationItemData_PTU100.fphcompensation)
  return fphcompensation_.Get(index);
}
inline void CompensationItemData_PTU100::set_fphcompensation(int index, float value) {
  fphcompensation_.Set(index, value);
  // @@protoc_insertion_point(field_set:Compensation.CompensationItemData_PTU100.fphcompensation)
}
inline void CompensationItemData_PTU100::add_fphcompensation(float value) {
  fphcompensation_.Add(value);
  // @@protoc_insertion_point(field_add:Compensation.CompensationItemData_PTU100.fphcompensation)
}
inline const ::google::protobuf::RepeatedField< float >&
CompensationItemData_PTU100::fphcompensation() const {
  // @@protoc_insertion_point(field_list:Compensation.CompensationItemData_PTU100.fphcompensation)
  return fphcompensation_;
}
inline ::google::protobuf::RepeatedField< float >*
CompensationItemData_PTU100::mutable_fphcompensation() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.CompensationItemData_PTU100.fphcompensation)
  return &fphcompensation_;
}

// repeated float fzeroshift = 3;
inline int CompensationItemData_PTU100::fzeroshift_size() const {
  return fzeroshift_.size();
}
inline void CompensationItemData_PTU100::clear_fzeroshift() {
  fzeroshift_.Clear();
}
inline float CompensationItemData_PTU100::fzeroshift(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.CompensationItemData_PTU100.fzeroshift)
  return fzeroshift_.Get(index);
}
inline void CompensationItemData_PTU100::set_fzeroshift(int index, float value) {
  fzeroshift_.Set(index, value);
  // @@protoc_insertion_point(field_set:Compensation.CompensationItemData_PTU100.fzeroshift)
}
inline void CompensationItemData_PTU100::add_fzeroshift(float value) {
  fzeroshift_.Add(value);
  // @@protoc_insertion_point(field_add:Compensation.CompensationItemData_PTU100.fzeroshift)
}
inline const ::google::protobuf::RepeatedField< float >&
CompensationItemData_PTU100::fzeroshift() const {
  // @@protoc_insertion_point(field_list:Compensation.CompensationItemData_PTU100.fzeroshift)
  return fzeroshift_;
}
inline ::google::protobuf::RepeatedField< float >*
CompensationItemData_PTU100::mutable_fzeroshift() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.CompensationItemData_PTU100.fzeroshift)
  return &fzeroshift_;
}

// repeated float Other1 = 4;
inline int CompensationItemData_PTU100::other1_size() const {
  return other1_.size();
}
inline void CompensationItemData_PTU100::clear_other1() {
  other1_.Clear();
}
inline float CompensationItemData_PTU100::other1(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.CompensationItemData_PTU100.Other1)
  return other1_.Get(index);
}
inline void CompensationItemData_PTU100::set_other1(int index, float value) {
  other1_.Set(index, value);
  // @@protoc_insertion_point(field_set:Compensation.CompensationItemData_PTU100.Other1)
}
inline void CompensationItemData_PTU100::add_other1(float value) {
  other1_.Add(value);
  // @@protoc_insertion_point(field_add:Compensation.CompensationItemData_PTU100.Other1)
}
inline const ::google::protobuf::RepeatedField< float >&
CompensationItemData_PTU100::other1() const {
  // @@protoc_insertion_point(field_list:Compensation.CompensationItemData_PTU100.Other1)
  return other1_;
}
inline ::google::protobuf::RepeatedField< float >*
CompensationItemData_PTU100::mutable_other1() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.CompensationItemData_PTU100.Other1)
  return &other1_;
}

// repeated float Other2 = 5;
inline int CompensationItemData_PTU100::other2_size() const {
  return other2_.size();
}
inline void CompensationItemData_PTU100::clear_other2() {
  other2_.Clear();
}
inline float CompensationItemData_PTU100::other2(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.CompensationItemData_PTU100.Other2)
  return other2_.Get(index);
}
inline void CompensationItemData_PTU100::set_other2(int index, float value) {
  other2_.Set(index, value);
  // @@protoc_insertion_point(field_set:Compensation.CompensationItemData_PTU100.Other2)
}
inline void CompensationItemData_PTU100::add_other2(float value) {
  other2_.Add(value);
  // @@protoc_insertion_point(field_add:Compensation.CompensationItemData_PTU100.Other2)
}
inline const ::google::protobuf::RepeatedField< float >&
CompensationItemData_PTU100::other2() const {
  // @@protoc_insertion_point(field_list:Compensation.CompensationItemData_PTU100.Other2)
  return other2_;
}
inline ::google::protobuf::RepeatedField< float >*
CompensationItemData_PTU100::mutable_other2() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.CompensationItemData_PTU100.Other2)
  return &other2_;
}

// repeated float Other3 = 6;
inline int CompensationItemData_PTU100::other3_size() const {
  return other3_.size();
}
inline void CompensationItemData_PTU100::clear_other3() {
  other3_.Clear();
}
inline float CompensationItemData_PTU100::other3(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.CompensationItemData_PTU100.Other3)
  return other3_.Get(index);
}
inline void CompensationItemData_PTU100::set_other3(int index, float value) {
  other3_.Set(index, value);
  // @@protoc_insertion_point(field_set:Compensation.CompensationItemData_PTU100.Other3)
}
inline void CompensationItemData_PTU100::add_other3(float value) {
  other3_.Add(value);
  // @@protoc_insertion_point(field_add:Compensation.CompensationItemData_PTU100.Other3)
}
inline const ::google::protobuf::RepeatedField< float >&
CompensationItemData_PTU100::other3() const {
  // @@protoc_insertion_point(field_list:Compensation.CompensationItemData_PTU100.Other3)
  return other3_;
}
inline ::google::protobuf::RepeatedField< float >*
CompensationItemData_PTU100::mutable_other3() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.CompensationItemData_PTU100.Other3)
  return &other3_;
}

// -------------------------------------------------------------------

// modules

// repeated .Compensation.module moduleChanel = 1;
inline int modules::modulechanel_size() const {
  return modulechanel_.size();
}
inline void modules::clear_modulechanel() {
  modulechanel_.Clear();
}
inline const ::Compensation::module& modules::modulechanel(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.modules.moduleChanel)
  return modulechanel_.Get(index);
}
inline ::Compensation::module* modules::mutable_modulechanel(int index) {
  // @@protoc_insertion_point(field_mutable:Compensation.modules.moduleChanel)
  return modulechanel_.Mutable(index);
}
inline ::Compensation::module* modules::add_modulechanel() {
  // @@protoc_insertion_point(field_add:Compensation.modules.moduleChanel)
  return modulechanel_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Compensation::module >*
modules::mutable_modulechanel() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.modules.moduleChanel)
  return &modulechanel_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Compensation::module >&
modules::modulechanel() const {
  // @@protoc_insertion_point(field_list:Compensation.modules.moduleChanel)
  return modulechanel_;
}

// uint32 nUDCtest = 2;
inline void modules::clear_nudctest() {
  nudctest_ = 0u;
}
inline ::google::protobuf::uint32 modules::nudctest() const {
  // @@protoc_insertion_point(field_get:Compensation.modules.nUDCtest)
  return nudctest_;
}
inline void modules::set_nudctest(::google::protobuf::uint32 value) {
  
  nudctest_ = value;
  // @@protoc_insertion_point(field_set:Compensation.modules.nUDCtest)
}

// uint32 nIDCtest = 3;
inline void modules::clear_nidctest() {
  nidctest_ = 0u;
}
inline ::google::protobuf::uint32 modules::nidctest() const {
  // @@protoc_insertion_point(field_get:Compensation.modules.nIDCtest)
  return nidctest_;
}
inline void modules::set_nidctest(::google::protobuf::uint32 value) {
  
  nidctest_ = value;
  // @@protoc_insertion_point(field_set:Compensation.modules.nIDCtest)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace Compensation

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CompensationPara_2eproto__INCLUDED
