// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DeviceInnerPara.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DeviceInnerPara.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DeviceInnerPara {
class DeviceInnerSettingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceInnerSetting> {
} _DeviceInnerSetting_default_instance_;
class DASettingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DASetting> {
} _DASetting_default_instance_;
class AmplifierVoltDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AmplifierVolt> {
} _AmplifierVolt_default_instance_;

namespace protobuf_DeviceInnerPara_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInnerSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInnerSetting, odasetting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInnerSetting, oamplifiervolt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DASetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DASetting, fvolt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DASetting, fcurrent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, fvolt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, fcurrent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, bvoltoverload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, bcurrentoverload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, bvoltoverhot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, bcurrentoverhot_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(DeviceInnerSetting)},
  { 6, -1, sizeof(DASetting)},
  { 12, -1, sizeof(AmplifierVolt)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceInnerSetting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DASetting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AmplifierVolt_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "DeviceInnerPara.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _DeviceInnerSetting_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _DASetting_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _AmplifierVolt_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DeviceInnerSetting_default_instance_.DefaultConstruct();
  _DASetting_default_instance_.DefaultConstruct();
  _AmplifierVolt_default_instance_.DefaultConstruct();
  _DeviceInnerSetting_default_instance_.get_mutable()->odasetting_ = const_cast< ::DeviceInnerPara::DASetting*>(
      ::DeviceInnerPara::DASetting::internal_default_instance());
  _DeviceInnerSetting_default_instance_.get_mutable()->oamplifiervolt_ = const_cast< ::DeviceInnerPara::AmplifierVolt*>(
      ::DeviceInnerPara::AmplifierVolt::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\025DeviceInnerPara.proto\022\017DeviceInnerPara"
      "\"|\n\022DeviceInnerSetting\022.\n\noDASetting\030\001 \001"
      "(\0132\032.DeviceInnerPara.DASetting\0226\n\016oAmpli"
      "fierVolt\030\002 \001(\0132\036.DeviceInnerPara.Amplifi"
      "erVolt\",\n\tDASetting\022\r\n\005fVolt\030\001 \003(\002\022\020\n\010fc"
      "urrent\030\002 \003(\002\"\220\001\n\rAmplifierVolt\022\r\n\005fVolt\030"
      "\001 \003(\002\022\020\n\010fcurrent\030\002 \003(\002\022\025\n\rbVoltOverLoad"
      "\030\003 \003(\010\022\030\n\020bCurrentOverLoad\030\004 \003(\010\022\024\n\014bVol"
      "tOverHot\030\005 \001(\010\022\027\n\017bCurrentOverHot\030\006 \001(\010b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 367);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DeviceInnerPara.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_DeviceInnerPara_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceInnerSetting::kODASettingFieldNumber;
const int DeviceInnerSetting::kOAmplifierVoltFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceInnerSetting::DeviceInnerSetting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DeviceInnerPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceInnerPara.DeviceInnerSetting)
}
DeviceInnerSetting::DeviceInnerSetting(const DeviceInnerSetting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_odasetting()) {
    odasetting_ = new ::DeviceInnerPara::DASetting(*from.odasetting_);
  } else {
    odasetting_ = NULL;
  }
  if (from.has_oamplifiervolt()) {
    oamplifiervolt_ = new ::DeviceInnerPara::AmplifierVolt(*from.oamplifiervolt_);
  } else {
    oamplifiervolt_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:DeviceInnerPara.DeviceInnerSetting)
}

void DeviceInnerSetting::SharedCtor() {
  ::memset(&odasetting_, 0, reinterpret_cast<char*>(&oamplifiervolt_) -
    reinterpret_cast<char*>(&odasetting_) + sizeof(oamplifiervolt_));
  _cached_size_ = 0;
}

DeviceInnerSetting::~DeviceInnerSetting() {
  // @@protoc_insertion_point(destructor:DeviceInnerPara.DeviceInnerSetting)
  SharedDtor();
}

void DeviceInnerSetting::SharedDtor() {
  if (this != internal_default_instance()) {
    delete odasetting_;
  }
  if (this != internal_default_instance()) {
    delete oamplifiervolt_;
  }
}

void DeviceInnerSetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceInnerSetting::descriptor() {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[0].descriptor;
}

const DeviceInnerSetting& DeviceInnerSetting::default_instance() {
  protobuf_DeviceInnerPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceInnerSetting* DeviceInnerSetting::New(::google::protobuf::Arena* arena) const {
  DeviceInnerSetting* n = new DeviceInnerSetting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceInnerSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceInnerPara.DeviceInnerSetting)
  if (GetArenaNoVirtual() == NULL && odasetting_ != NULL) {
    delete odasetting_;
  }
  odasetting_ = NULL;
  if (GetArenaNoVirtual() == NULL && oamplifiervolt_ != NULL) {
    delete oamplifiervolt_;
  }
  oamplifiervolt_ = NULL;
}

bool DeviceInnerSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceInnerPara.DeviceInnerSetting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .DeviceInnerPara.DASetting oDASetting = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_odasetting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DeviceInnerPara.AmplifierVolt oAmplifierVolt = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oamplifiervolt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceInnerPara.DeviceInnerSetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceInnerPara.DeviceInnerSetting)
  return false;
#undef DO_
}

void DeviceInnerSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceInnerPara.DeviceInnerSetting)
  // .DeviceInnerPara.DASetting oDASetting = 1;
  if (this->has_odasetting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->odasetting_, output);
  }

  // .DeviceInnerPara.AmplifierVolt oAmplifierVolt = 2;
  if (this->has_oamplifiervolt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->oamplifiervolt_, output);
  }

  // @@protoc_insertion_point(serialize_end:DeviceInnerPara.DeviceInnerSetting)
}

::google::protobuf::uint8* DeviceInnerSetting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeviceInnerPara.DeviceInnerSetting)
  // .DeviceInnerPara.DASetting oDASetting = 1;
  if (this->has_odasetting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->odasetting_, false, target);
  }

  // .DeviceInnerPara.AmplifierVolt oAmplifierVolt = 2;
  if (this->has_oamplifiervolt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->oamplifiervolt_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DeviceInnerPara.DeviceInnerSetting)
  return target;
}

size_t DeviceInnerSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceInnerPara.DeviceInnerSetting)
  size_t total_size = 0;

  // .DeviceInnerPara.DASetting oDASetting = 1;
  if (this->has_odasetting()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->odasetting_);
  }

  // .DeviceInnerPara.AmplifierVolt oAmplifierVolt = 2;
  if (this->has_oamplifiervolt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oamplifiervolt_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceInnerSetting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceInnerPara.DeviceInnerSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceInnerSetting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceInnerSetting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceInnerPara.DeviceInnerSetting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceInnerPara.DeviceInnerSetting)
    MergeFrom(*source);
  }
}

void DeviceInnerSetting::MergeFrom(const DeviceInnerSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceInnerPara.DeviceInnerSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_odasetting()) {
    mutable_odasetting()->::DeviceInnerPara::DASetting::MergeFrom(from.odasetting());
  }
  if (from.has_oamplifiervolt()) {
    mutable_oamplifiervolt()->::DeviceInnerPara::AmplifierVolt::MergeFrom(from.oamplifiervolt());
  }
}

void DeviceInnerSetting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceInnerPara.DeviceInnerSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceInnerSetting::CopyFrom(const DeviceInnerSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceInnerPara.DeviceInnerSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceInnerSetting::IsInitialized() const {
  return true;
}

void DeviceInnerSetting::Swap(DeviceInnerSetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceInnerSetting::InternalSwap(DeviceInnerSetting* other) {
  std::swap(odasetting_, other->odasetting_);
  std::swap(oamplifiervolt_, other->oamplifiervolt_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceInnerSetting::GetMetadata() const {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceInnerSetting

// .DeviceInnerPara.DASetting oDASetting = 1;
bool DeviceInnerSetting::has_odasetting() const {
  return this != internal_default_instance() && odasetting_ != NULL;
}
void DeviceInnerSetting::clear_odasetting() {
  if (GetArenaNoVirtual() == NULL && odasetting_ != NULL) delete odasetting_;
  odasetting_ = NULL;
}
const ::DeviceInnerPara::DASetting& DeviceInnerSetting::odasetting() const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.DeviceInnerSetting.oDASetting)
  return odasetting_ != NULL ? *odasetting_
                         : *::DeviceInnerPara::DASetting::internal_default_instance();
}
::DeviceInnerPara::DASetting* DeviceInnerSetting::mutable_odasetting() {
  
  if (odasetting_ == NULL) {
    odasetting_ = new ::DeviceInnerPara::DASetting;
  }
  // @@protoc_insertion_point(field_mutable:DeviceInnerPara.DeviceInnerSetting.oDASetting)
  return odasetting_;
}
::DeviceInnerPara::DASetting* DeviceInnerSetting::release_odasetting() {
  // @@protoc_insertion_point(field_release:DeviceInnerPara.DeviceInnerSetting.oDASetting)
  
  ::DeviceInnerPara::DASetting* temp = odasetting_;
  odasetting_ = NULL;
  return temp;
}
void DeviceInnerSetting::set_allocated_odasetting(::DeviceInnerPara::DASetting* odasetting) {
  delete odasetting_;
  odasetting_ = odasetting;
  if (odasetting) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DeviceInnerPara.DeviceInnerSetting.oDASetting)
}

// .DeviceInnerPara.AmplifierVolt oAmplifierVolt = 2;
bool DeviceInnerSetting::has_oamplifiervolt() const {
  return this != internal_default_instance() && oamplifiervolt_ != NULL;
}
void DeviceInnerSetting::clear_oamplifiervolt() {
  if (GetArenaNoVirtual() == NULL && oamplifiervolt_ != NULL) delete oamplifiervolt_;
  oamplifiervolt_ = NULL;
}
const ::DeviceInnerPara::AmplifierVolt& DeviceInnerSetting::oamplifiervolt() const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.DeviceInnerSetting.oAmplifierVolt)
  return oamplifiervolt_ != NULL ? *oamplifiervolt_
                         : *::DeviceInnerPara::AmplifierVolt::internal_default_instance();
}
::DeviceInnerPara::AmplifierVolt* DeviceInnerSetting::mutable_oamplifiervolt() {
  
  if (oamplifiervolt_ == NULL) {
    oamplifiervolt_ = new ::DeviceInnerPara::AmplifierVolt;
  }
  // @@protoc_insertion_point(field_mutable:DeviceInnerPara.DeviceInnerSetting.oAmplifierVolt)
  return oamplifiervolt_;
}
::DeviceInnerPara::AmplifierVolt* DeviceInnerSetting::release_oamplifiervolt() {
  // @@protoc_insertion_point(field_release:DeviceInnerPara.DeviceInnerSetting.oAmplifierVolt)
  
  ::DeviceInnerPara::AmplifierVolt* temp = oamplifiervolt_;
  oamplifiervolt_ = NULL;
  return temp;
}
void DeviceInnerSetting::set_allocated_oamplifiervolt(::DeviceInnerPara::AmplifierVolt* oamplifiervolt) {
  delete oamplifiervolt_;
  oamplifiervolt_ = oamplifiervolt;
  if (oamplifiervolt) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DeviceInnerPara.DeviceInnerSetting.oAmplifierVolt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DASetting::kFVoltFieldNumber;
const int DASetting::kFcurrentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DASetting::DASetting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DeviceInnerPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceInnerPara.DASetting)
}
DASetting::DASetting(const DASetting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fvolt_(from.fvolt_),
      fcurrent_(from.fcurrent_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DeviceInnerPara.DASetting)
}

void DASetting::SharedCtor() {
  _cached_size_ = 0;
}

DASetting::~DASetting() {
  // @@protoc_insertion_point(destructor:DeviceInnerPara.DASetting)
  SharedDtor();
}

void DASetting::SharedDtor() {
}

void DASetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DASetting::descriptor() {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[1].descriptor;
}

const DASetting& DASetting::default_instance() {
  protobuf_DeviceInnerPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

DASetting* DASetting::New(::google::protobuf::Arena* arena) const {
  DASetting* n = new DASetting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DASetting::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceInnerPara.DASetting)
  fvolt_.Clear();
  fcurrent_.Clear();
}

bool DASetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceInnerPara.DASetting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float fVolt = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fvolt())));
        } else if (tag == 13u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_fvolt())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float fcurrent = 2;
      case 2: {
        if (tag == 18u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fcurrent())));
        } else if (tag == 21u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_fcurrent())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceInnerPara.DASetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceInnerPara.DASetting)
  return false;
#undef DO_
}

void DASetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceInnerPara.DASetting)
  // repeated float fVolt = 1;
  if (this->fvolt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fvolt_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->fvolt().data(), this->fvolt_size(), output);
  }

  // repeated float fcurrent = 2;
  if (this->fcurrent_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fcurrent_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->fcurrent().data(), this->fcurrent_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:DeviceInnerPara.DASetting)
}

::google::protobuf::uint8* DASetting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeviceInnerPara.DASetting)
  // repeated float fVolt = 1;
  if (this->fvolt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fvolt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fvolt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->fvolt(i), target);
  }

  // repeated float fcurrent = 2;
  if (this->fcurrent_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fcurrent_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fcurrent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->fcurrent(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DeviceInnerPara.DASetting)
  return target;
}

size_t DASetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceInnerPara.DASetting)
  size_t total_size = 0;

  // repeated float fVolt = 1;
  {
    unsigned int count = this->fvolt_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fvolt_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float fcurrent = 2;
  {
    unsigned int count = this->fcurrent_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fcurrent_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DASetting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceInnerPara.DASetting)
  GOOGLE_DCHECK_NE(&from, this);
  const DASetting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DASetting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceInnerPara.DASetting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceInnerPara.DASetting)
    MergeFrom(*source);
  }
}

void DASetting::MergeFrom(const DASetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceInnerPara.DASetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fvolt_.MergeFrom(from.fvolt_);
  fcurrent_.MergeFrom(from.fcurrent_);
}

void DASetting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceInnerPara.DASetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DASetting::CopyFrom(const DASetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceInnerPara.DASetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DASetting::IsInitialized() const {
  return true;
}

void DASetting::Swap(DASetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DASetting::InternalSwap(DASetting* other) {
  fvolt_.UnsafeArenaSwap(&other->fvolt_);
  fcurrent_.UnsafeArenaSwap(&other->fcurrent_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DASetting::GetMetadata() const {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DASetting

// repeated float fVolt = 1;
int DASetting::fvolt_size() const {
  return fvolt_.size();
}
void DASetting::clear_fvolt() {
  fvolt_.Clear();
}
float DASetting::fvolt(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.DASetting.fVolt)
  return fvolt_.Get(index);
}
void DASetting::set_fvolt(int index, float value) {
  fvolt_.Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceInnerPara.DASetting.fVolt)
}
void DASetting::add_fvolt(float value) {
  fvolt_.Add(value);
  // @@protoc_insertion_point(field_add:DeviceInnerPara.DASetting.fVolt)
}
const ::google::protobuf::RepeatedField< float >&
DASetting::fvolt() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.DASetting.fVolt)
  return fvolt_;
}
::google::protobuf::RepeatedField< float >*
DASetting::mutable_fvolt() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.DASetting.fVolt)
  return &fvolt_;
}

// repeated float fcurrent = 2;
int DASetting::fcurrent_size() const {
  return fcurrent_.size();
}
void DASetting::clear_fcurrent() {
  fcurrent_.Clear();
}
float DASetting::fcurrent(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.DASetting.fcurrent)
  return fcurrent_.Get(index);
}
void DASetting::set_fcurrent(int index, float value) {
  fcurrent_.Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceInnerPara.DASetting.fcurrent)
}
void DASetting::add_fcurrent(float value) {
  fcurrent_.Add(value);
  // @@protoc_insertion_point(field_add:DeviceInnerPara.DASetting.fcurrent)
}
const ::google::protobuf::RepeatedField< float >&
DASetting::fcurrent() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.DASetting.fcurrent)
  return fcurrent_;
}
::google::protobuf::RepeatedField< float >*
DASetting::mutable_fcurrent() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.DASetting.fcurrent)
  return &fcurrent_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AmplifierVolt::kFVoltFieldNumber;
const int AmplifierVolt::kFcurrentFieldNumber;
const int AmplifierVolt::kBVoltOverLoadFieldNumber;
const int AmplifierVolt::kBCurrentOverLoadFieldNumber;
const int AmplifierVolt::kBVoltOverHotFieldNumber;
const int AmplifierVolt::kBCurrentOverHotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AmplifierVolt::AmplifierVolt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DeviceInnerPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceInnerPara.AmplifierVolt)
}
AmplifierVolt::AmplifierVolt(const AmplifierVolt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fvolt_(from.fvolt_),
      fcurrent_(from.fcurrent_),
      bvoltoverload_(from.bvoltoverload_),
      bcurrentoverload_(from.bcurrentoverload_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bvoltoverhot_, &from.bvoltoverhot_,
    reinterpret_cast<char*>(&bcurrentoverhot_) -
    reinterpret_cast<char*>(&bvoltoverhot_) + sizeof(bcurrentoverhot_));
  // @@protoc_insertion_point(copy_constructor:DeviceInnerPara.AmplifierVolt)
}

void AmplifierVolt::SharedCtor() {
  ::memset(&bvoltoverhot_, 0, reinterpret_cast<char*>(&bcurrentoverhot_) -
    reinterpret_cast<char*>(&bvoltoverhot_) + sizeof(bcurrentoverhot_));
  _cached_size_ = 0;
}

AmplifierVolt::~AmplifierVolt() {
  // @@protoc_insertion_point(destructor:DeviceInnerPara.AmplifierVolt)
  SharedDtor();
}

void AmplifierVolt::SharedDtor() {
}

void AmplifierVolt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AmplifierVolt::descriptor() {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[2].descriptor;
}

const AmplifierVolt& AmplifierVolt::default_instance() {
  protobuf_DeviceInnerPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

AmplifierVolt* AmplifierVolt::New(::google::protobuf::Arena* arena) const {
  AmplifierVolt* n = new AmplifierVolt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AmplifierVolt::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceInnerPara.AmplifierVolt)
  fvolt_.Clear();
  fcurrent_.Clear();
  bvoltoverload_.Clear();
  bcurrentoverload_.Clear();
  ::memset(&bvoltoverhot_, 0, reinterpret_cast<char*>(&bcurrentoverhot_) -
    reinterpret_cast<char*>(&bvoltoverhot_) + sizeof(bcurrentoverhot_));
}

bool AmplifierVolt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceInnerPara.AmplifierVolt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float fVolt = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fvolt())));
        } else if (tag == 13u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_fvolt())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float fcurrent = 2;
      case 2: {
        if (tag == 18u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fcurrent())));
        } else if (tag == 21u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_fcurrent())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool bVoltOverLoad = 3;
      case 3: {
        if (tag == 26u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_bvoltoverload())));
        } else if (tag == 24u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 26u, input, this->mutable_bvoltoverload())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool bCurrentOverLoad = 4;
      case 4: {
        if (tag == 34u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_bcurrentoverload())));
        } else if (tag == 32u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 34u, input, this->mutable_bcurrentoverload())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bVoltOverHot = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bvoltoverhot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bCurrentOverHot = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bcurrentoverhot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceInnerPara.AmplifierVolt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceInnerPara.AmplifierVolt)
  return false;
#undef DO_
}

void AmplifierVolt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceInnerPara.AmplifierVolt)
  // repeated float fVolt = 1;
  if (this->fvolt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fvolt_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->fvolt().data(), this->fvolt_size(), output);
  }

  // repeated float fcurrent = 2;
  if (this->fcurrent_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fcurrent_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->fcurrent().data(), this->fcurrent_size(), output);
  }

  // repeated bool bVoltOverLoad = 3;
  if (this->bvoltoverload_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bvoltoverload_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->bvoltoverload().data(), this->bvoltoverload_size(), output);
  }

  // repeated bool bCurrentOverLoad = 4;
  if (this->bcurrentoverload_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bcurrentoverload_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->bcurrentoverload().data(), this->bcurrentoverload_size(), output);
  }

  // bool bVoltOverHot = 5;
  if (this->bvoltoverhot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bvoltoverhot(), output);
  }

  // bool bCurrentOverHot = 6;
  if (this->bcurrentoverhot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->bcurrentoverhot(), output);
  }

  // @@protoc_insertion_point(serialize_end:DeviceInnerPara.AmplifierVolt)
}

::google::protobuf::uint8* AmplifierVolt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeviceInnerPara.AmplifierVolt)
  // repeated float fVolt = 1;
  if (this->fvolt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fvolt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fvolt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->fvolt(i), target);
  }

  // repeated float fcurrent = 2;
  if (this->fcurrent_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fcurrent_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fcurrent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->fcurrent(i), target);
  }

  // repeated bool bVoltOverLoad = 3;
  if (this->bvoltoverload_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bvoltoverload_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bvoltoverload_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->bvoltoverload(i), target);
  }

  // repeated bool bCurrentOverLoad = 4;
  if (this->bcurrentoverload_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bcurrentoverload_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bcurrentoverload_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->bcurrentoverload(i), target);
  }

  // bool bVoltOverHot = 5;
  if (this->bvoltoverhot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bvoltoverhot(), target);
  }

  // bool bCurrentOverHot = 6;
  if (this->bcurrentoverhot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->bcurrentoverhot(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DeviceInnerPara.AmplifierVolt)
  return target;
}

size_t AmplifierVolt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceInnerPara.AmplifierVolt)
  size_t total_size = 0;

  // repeated float fVolt = 1;
  {
    unsigned int count = this->fvolt_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fvolt_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float fcurrent = 2;
  {
    unsigned int count = this->fcurrent_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fcurrent_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool bVoltOverLoad = 3;
  {
    unsigned int count = this->bvoltoverload_size();
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bvoltoverload_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool bCurrentOverLoad = 4;
  {
    unsigned int count = this->bcurrentoverload_size();
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bcurrentoverload_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool bVoltOverHot = 5;
  if (this->bvoltoverhot() != 0) {
    total_size += 1 + 1;
  }

  // bool bCurrentOverHot = 6;
  if (this->bcurrentoverhot() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AmplifierVolt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceInnerPara.AmplifierVolt)
  GOOGLE_DCHECK_NE(&from, this);
  const AmplifierVolt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AmplifierVolt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceInnerPara.AmplifierVolt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceInnerPara.AmplifierVolt)
    MergeFrom(*source);
  }
}

void AmplifierVolt::MergeFrom(const AmplifierVolt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceInnerPara.AmplifierVolt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fvolt_.MergeFrom(from.fvolt_);
  fcurrent_.MergeFrom(from.fcurrent_);
  bvoltoverload_.MergeFrom(from.bvoltoverload_);
  bcurrentoverload_.MergeFrom(from.bcurrentoverload_);
  if (from.bvoltoverhot() != 0) {
    set_bvoltoverhot(from.bvoltoverhot());
  }
  if (from.bcurrentoverhot() != 0) {
    set_bcurrentoverhot(from.bcurrentoverhot());
  }
}

void AmplifierVolt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceInnerPara.AmplifierVolt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AmplifierVolt::CopyFrom(const AmplifierVolt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceInnerPara.AmplifierVolt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AmplifierVolt::IsInitialized() const {
  return true;
}

void AmplifierVolt::Swap(AmplifierVolt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AmplifierVolt::InternalSwap(AmplifierVolt* other) {
  fvolt_.UnsafeArenaSwap(&other->fvolt_);
  fcurrent_.UnsafeArenaSwap(&other->fcurrent_);
  bvoltoverload_.UnsafeArenaSwap(&other->bvoltoverload_);
  bcurrentoverload_.UnsafeArenaSwap(&other->bcurrentoverload_);
  std::swap(bvoltoverhot_, other->bvoltoverhot_);
  std::swap(bcurrentoverhot_, other->bcurrentoverhot_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AmplifierVolt::GetMetadata() const {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AmplifierVolt

// repeated float fVolt = 1;
int AmplifierVolt::fvolt_size() const {
  return fvolt_.size();
}
void AmplifierVolt::clear_fvolt() {
  fvolt_.Clear();
}
float AmplifierVolt::fvolt(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.fVolt)
  return fvolt_.Get(index);
}
void AmplifierVolt::set_fvolt(int index, float value) {
  fvolt_.Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.fVolt)
}
void AmplifierVolt::add_fvolt(float value) {
  fvolt_.Add(value);
  // @@protoc_insertion_point(field_add:DeviceInnerPara.AmplifierVolt.fVolt)
}
const ::google::protobuf::RepeatedField< float >&
AmplifierVolt::fvolt() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.AmplifierVolt.fVolt)
  return fvolt_;
}
::google::protobuf::RepeatedField< float >*
AmplifierVolt::mutable_fvolt() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.AmplifierVolt.fVolt)
  return &fvolt_;
}

// repeated float fcurrent = 2;
int AmplifierVolt::fcurrent_size() const {
  return fcurrent_.size();
}
void AmplifierVolt::clear_fcurrent() {
  fcurrent_.Clear();
}
float AmplifierVolt::fcurrent(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.fcurrent)
  return fcurrent_.Get(index);
}
void AmplifierVolt::set_fcurrent(int index, float value) {
  fcurrent_.Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.fcurrent)
}
void AmplifierVolt::add_fcurrent(float value) {
  fcurrent_.Add(value);
  // @@protoc_insertion_point(field_add:DeviceInnerPara.AmplifierVolt.fcurrent)
}
const ::google::protobuf::RepeatedField< float >&
AmplifierVolt::fcurrent() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.AmplifierVolt.fcurrent)
  return fcurrent_;
}
::google::protobuf::RepeatedField< float >*
AmplifierVolt::mutable_fcurrent() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.AmplifierVolt.fcurrent)
  return &fcurrent_;
}

// repeated bool bVoltOverLoad = 3;
int AmplifierVolt::bvoltoverload_size() const {
  return bvoltoverload_.size();
}
void AmplifierVolt::clear_bvoltoverload() {
  bvoltoverload_.Clear();
}
bool AmplifierVolt::bvoltoverload(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.bVoltOverLoad)
  return bvoltoverload_.Get(index);
}
void AmplifierVolt::set_bvoltoverload(int index, bool value) {
  bvoltoverload_.Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.bVoltOverLoad)
}
void AmplifierVolt::add_bvoltoverload(bool value) {
  bvoltoverload_.Add(value);
  // @@protoc_insertion_point(field_add:DeviceInnerPara.AmplifierVolt.bVoltOverLoad)
}
const ::google::protobuf::RepeatedField< bool >&
AmplifierVolt::bvoltoverload() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.AmplifierVolt.bVoltOverLoad)
  return bvoltoverload_;
}
::google::protobuf::RepeatedField< bool >*
AmplifierVolt::mutable_bvoltoverload() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.AmplifierVolt.bVoltOverLoad)
  return &bvoltoverload_;
}

// repeated bool bCurrentOverLoad = 4;
int AmplifierVolt::bcurrentoverload_size() const {
  return bcurrentoverload_.size();
}
void AmplifierVolt::clear_bcurrentoverload() {
  bcurrentoverload_.Clear();
}
bool AmplifierVolt::bcurrentoverload(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.bCurrentOverLoad)
  return bcurrentoverload_.Get(index);
}
void AmplifierVolt::set_bcurrentoverload(int index, bool value) {
  bcurrentoverload_.Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.bCurrentOverLoad)
}
void AmplifierVolt::add_bcurrentoverload(bool value) {
  bcurrentoverload_.Add(value);
  // @@protoc_insertion_point(field_add:DeviceInnerPara.AmplifierVolt.bCurrentOverLoad)
}
const ::google::protobuf::RepeatedField< bool >&
AmplifierVolt::bcurrentoverload() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.AmplifierVolt.bCurrentOverLoad)
  return bcurrentoverload_;
}
::google::protobuf::RepeatedField< bool >*
AmplifierVolt::mutable_bcurrentoverload() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.AmplifierVolt.bCurrentOverLoad)
  return &bcurrentoverload_;
}

// bool bVoltOverHot = 5;
void AmplifierVolt::clear_bvoltoverhot() {
  bvoltoverhot_ = false;
}
bool AmplifierVolt::bvoltoverhot() const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.bVoltOverHot)
  return bvoltoverhot_;
}
void AmplifierVolt::set_bvoltoverhot(bool value) {
  
  bvoltoverhot_ = value;
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.bVoltOverHot)
}

// bool bCurrentOverHot = 6;
void AmplifierVolt::clear_bcurrentoverhot() {
  bcurrentoverhot_ = false;
}
bool AmplifierVolt::bcurrentoverhot() const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.bCurrentOverHot)
  return bcurrentoverhot_;
}
void AmplifierVolt::set_bcurrentoverhot(bool value) {
  
  bcurrentoverhot_ = value;
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.bCurrentOverHot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DeviceInnerPara

// @@protoc_insertion_point(global_scope)
