//这段源代码由ClassGenerator创建
//版权所有 LiJunqing  lijunqing1224@126.com
//保留所有权利

//XDrawElement.h  CXDrawElement

#pragma once


#define XDRAW_STATE_NORMAL  0
#define XDRAW_STATE_PICKED  1

class CXDrawElement : public CExBaseList
{
public:
	CXDrawElement();
	virtual ~CXDrawElement();

	CRect  m_rcPosition;
	long  m_nEnable;
	long  m_nShow;
	COLORREF  m_crBkColor;
	COLORREF  m_crForeColor;

	static COLORREF  m_crPickColor;
	static DWORD  m_nPickStyle;
	static long   m_nPickWidth;

//重载函数
public:
	//virtual UINT GetClassID() {    return DWCLASSID_CXDrawElement;   }
	//virtual long XmlReadOwn(const MSXML2::IXMLDOMNodePtr &oNode, CXmlRWKeys *pXmlRWKeys);
	//virtual long XmlWriteOwn(const MSXML2::IXMLDOMDocumentPtr &oXMLDoc, const MSXML2::IXMLDOMElementPtr &oElement, CXmlRWKeys *pXmlRWKeys);
	//virtual long SerializeOwn(CBinarySerialBuffer &oBinaryBuffer);
	//virtual BOOL IsEqualOwn(CBaseObject* pObj);
	//virtual BOOL CopyOwn(CBaseObject* pDest);

//私有成员变量
private:

//私有成员变量访问方法
public:
	void SetPickState(BOOL bPick=FALSE);
	BOOL IsPicked()	{	return (m_dwState == XDRAW_STATE_PICKED);	}

//绘图相关函数定义
public:
	virtual void LogicPointToDevicePoint(CAxisInterface *pAxis) = 0;
	virtual void Draw(CDC *pDC, double fZoomRatio,const CPoint &ptOffset) = 0;
	virtual void Pick(const CPoint &point, CBaseList &oList) = 0;
	virtual void GetLogicBorder(double &fMinX,double &fMinY,double &fMaxX,double &fMaxY) = 0;
	
public:
	//virtual void Show();
	//virtual BOOL Show(long nShow);
	//virtual void ShowChildren(long nShow);
	//virtual BOOL IsShow();

//消息函数
public:
    afx_msg void OnHScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar);
    afx_msg void OnVScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar);
    afx_msg void OnSize(UINT nType, int cx, int cy);
    afx_msg void OnLButtonUp(UINT nFlags, CPoint point);
    afx_msg void OnLButtonDown(UINT nFlags, CPoint point);
    afx_msg void OnMouseMove(UINT nFlags, CPoint point);
    afx_msg void OnTimer(UINT nIDEvent);
    afx_msg UINT OnGetDlgCode();
    afx_msg BOOL OnKeyDown(UINT nChar, UINT nRepCnt, UINT nFlags);
    afx_msg BOOL OnChar(UINT nChar, UINT nRepCnt, UINT nFlags);
    afx_msg void OnLButtonDblClk(UINT nFlags, CPoint point);
	afx_msg void OnRButtonDblClk(UINT nFlags, CPoint point);
    afx_msg BOOL OnEraseBkgnd(CDC* pDC);
    afx_msg BOOL OnSetCursor(CWnd* pWnd, UINT nHitTest, UINT message);
    afx_msg void OnSysColorChange();
    afx_msg void OnCaptureChanged(CWnd *pWnd);
	afx_msg void OnUpdateEditSelectAll(CCmdUI* pCmdUI);
	afx_msg void OnRButtonUp(UINT nFlags, CPoint point);
	afx_msg void OnKillFocus(CWnd* pNewWnd);	
	
	#if _MFC_VER >= 0x0421
    afx_msg void OnSettingChange(UINT uFlags, LPCTSTR lpszSection);
    afx_msg BOOL OnMouseWheel(UINT nFlags, short zDelta, CPoint pt);
#endif
    afx_msg LRESULT OnSetFont(WPARAM hFont, LPARAM lParam);
    afx_msg LRESULT OnGetFont(WPARAM hFont, LPARAM lParam);
    afx_msg void OnEndInPlaceEdit(NMHDR* pNMHDR, LRESULT* pResult);
    afx_msg void OnEndPointEdit(NMHDR* pNMHDR, LRESULT* pResult);	//2001.09.08	李俊庆
    afx_msg void OnEndInplaceComboBoxEdit(NMHDR* pNMHDR, LRESULT* pResult);	//2001.09.08	李俊庆

	afx_msg LRESULT OnFillComboBox(WPARAM nColumn, LPARAM pListBox);
	afx_msg LRESULT OnFillList(WPARAM nColumn, LPARAM pListBox);
	afx_msg LRESULT OnFillTree(WPARAM nColumn, LPARAM pListBox);
	afx_msg LRESULT OnFillTimeCtrl(WPARAM nColumn, LPARAM pListBox);
		afx_msg void OnRButtonDown(UINT nFlags, CPoint point);

};

CString XDraw_GetLineStype(UINT nStyle);
UINT XDraw_GetLineStyle(const CString &strStyle);
